BIOINFORMATICS

Vol. 24 ISMB 2008, pages i156–i164
doi:10.1093/bioinformatics/btn153

Inferring differentiation pathways from gene expression
Ivan G. Costa∗, Stefan Roepcke, Christoph Hafemeister and Alexander Schliep∗

Department of Computational Molecular Biology, Max Planck Institute for Molecular Genetics, Berlin, Germany

In previous work we showed that

ABSTRACT
Motivation: The regulation of proliferation and differentiation of
embryonic and adult stem cells into mature cells is central to
developmental biology. Gene expression measured in distinguishable
developmental stages helps to elucidate underlying molecular
processes.
functional gene
modules, which act distinctly in the course of development, can be
represented by a mixture of trees. In general, the similarities in the
gene expression programs of cell populations reﬂect the similarities
in the differentiation path.
Results: We propose a novel model for gene expression proﬁles
and an unsupervised learning method to estimate developmental
similarity and infer differentiation pathways. We assess the
performance of our model on simulated data and compare it with
favorable results to related methods. We also infer differentiation
pathways and predict functional modules in gene expression data
of lymphoid development.
Conclusions: We demonstrate for the ﬁrst time how, in principal,
the incorporation of structural knowledge about the dependence
structure helps to reveal differentiation pathways and potentially
relevant functional gene modules from microarray datasets. Our
method applies in any area of developmental biology where it is
possible to obtain cells of distinguishable differentiation stages.
Availability: The implementation of our method (GPL license), data
and additional results are available at http://algorithmics.molgen.
mpg.de/Supplements/InfDif/
Contact: ﬁlho@molgen.mpg.de, schliep@molgen.mpg.de
Supplementary information: Supplementary data is available at
Bioinformatics online.

1 INTRODUCTION
Cell differentiation In all multicellular organisms
somatic
differentiated cells develop from embryonic stem cells in the
formation phase and from adult tissue-speciﬁc stem cells in the
adult phase. The study of triggers and molecular programs that drive
cells through well-deﬁned proliferation and differentiation stages is a
central theme of developmental biology. In classical models of such
processes external or internal factors initiate and drive differentiation
steps in a non-reversible manner. They are conveniently depicted in
diagrams that resemble genealogies of developmental stages, which
we call developmental trees throughout this article. Recently, the
gene expression programs of developmental trees have been studied
extensively using microarrays, which helps to elucidate underlying
molecular processes (Akashi et al., 2003; Anisimov et al., 2007;
Ferrari et al., 2007; Hyatt et al., 2006; Tomancak et al., 2002).
Analysis Finding functional modules of co-regulated genes during
the course of development with an unsupervised learning method is
a crucial initial step in the large scale analysis of developmental
∗

To whom correspondence should be addressed.

processes. Ideally, the method of choice should exploit inherent
dependencies arising from the data. It is, for example, well accepted
that models taking temporal dependencies into account are superior
for analyzing gene expression time-courses (Bar-Joseph, 2004).

In previous work we demonstrated how to exploit detailed
knowledge about the differentiation pathways to infer gene modules
with distinct developmental proﬁles from genome scale gene
expression data (Costa et al., 2007b). There, we showed that the
expression programs of developmental stages reﬂect the similarity
of stages close by in the developmental tree. For exploring the
dependencies arising from such similarities, we proposed the use of
Dependence Trees (DTree) in which the known developmental tree
imposed the dependence structure. We combined several of these
DTrees in a mixture to model groups of co-regulated genes.
Novel contributions Here, we propose an extension of the above
method for inferring developmental similarity and differentiation
pathways as reﬂected in the dependence structure of modules of
co-expressed genes, regardless of the underlying developmental
tree. Our method estimates the structure of each component of a
mixture of Dependence Trees (MixDTrees). Furthermore, we use
maximum-a-posteriori (MAP) estimates for the parameters of the
DTree, which makes the method robust to overﬁtting. We assess
the performance of our model on simulated data and compare it with
favorable results of other unsupervised methods.

We also infer differentiation pathways and predict functional
lymphoid development.
modules in gene expression data of
Lymphoid development has been extensively studied, many
developmental stages are known, and there is a large amount of
available data on distinct stages of development and in several cell
lineages (see Figure 3 (left)). We use biological annotation data from
Gene Onotology (GO); (Ashburner, 2000) and Kyoto Encylcopedia
of Gene and Genome (KEGG) (Kanehisa et al., 2006) to assist the
interpretation of the inferred gene modules. The results show that the
inference of DTree structures for modules of co-regulated genes
helps to reveal differentiation pathways and functional relevant
groups of genes. A comparison with other unsupervised methods
commonly used for gene expression indicates the advantage of
MixDTrees in terms of quality and interpretability.
Related methods Mixtures of Dependence Trees are part of the
graphical model (or Bayesian network) formalism (Friedman, 2004).
They have been applied before, for example, in image recognition
(Chow and Liu, 1968; Meila and Jordan, 2001) and detection of
mutagenic trees (Beerenwinkel et al., 2004), but exclusively to data
of discrete nature. Moreover, our method has some relations to
bi-clustering (e.g. Brunet et al., 2004; Tanay et al., 2002), as it is able
to ﬁnd not only coexpressed genes but also developmental conditions
with similar expression proﬁles. Nevertheless, bi-clustering methods
make no implicit use of any dependencies (developmental or
temporal) in these data sets. There is also a relation to the
estimation of sparse covariance matrices, as Dependence Trees
represent a subclass of them. Chaudhuri et al. (2007) apply an

 2008 The Author(s)
This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/2.0/uk/)
which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.

[19:33 18/6/03 Bioinformatics-btn153.tex]

Page: i156

i156–i164

iterative conditional ﬁtting method for computing sparse covariance
matrices from arbitrary undirected graphs. This method, however,
does not offer a solution for inferring the graph structure and
has high computational cost. Schaefer and Strimmer (2005), who
approach a similar problem in the context of gene association
networks, use a shrinkage factor in a computationally efﬁcient way
for zeroing entries in the covariance matrix, while keeping it well
conditioned. Both methods are not able to ﬁnd association networks,
which are speciﬁc for particular gene modules, as performed by
MixDTrees.

2 METHODS
2.1 Dependence Trees (DTree)
Let X =(X1,...,Xu,...,XL) be a L-dimensional continuous random vector,
where the variable Xu denotes the expression values of the developmental
stage u and x=(x1,...,xL) denotes a realization of X representing gene
expression values of a gene in the developmental stages 1,...,L. A DTree is
deﬁned as a probabilistic model representing dependencies between variables
in X, which follow a tree structure.
Consider a directed graph (V ,E) with |V|= L, where each vertex in V
represents a variable in X, and a directed edge (v,u)∈ E indicates that variable
Xu is dependent on variable Xv. A directed graph is a directed tree, if the graph
is connected, all vertices except the root have in-degree equal to 1, and there
are no cycles in the graph. For simplicity, we represent a DTree structure
by the parent map, pa:{1,...,L}(cid:3)→{1,...,L}, where pa(u)= v means that
(v,u)∈ E. The root of the DTree structure, which has no incoming edges, is
represented by pa(u)= u.

The probability density function (pdf) of a DTree is a second-order
approximation of a joint pdf on a L-dimensional continuous random vector
X (Chow and Liu, 1968),

p[x]≈ pt[x|θ]= L(cid:1)

u=1

is the pdf of a DTree. For example,

where we denote the model parameters by θ =(pa,τ1,...,τu,...τL)
the DTree in
and pt
Figure 1 left, we have pt[xA,xB,xC ,xD,xE ,xF]= p[xA]p[xB|xA]p[xC|xB]
p[xD|xA] p[xE|xD]p[xF|xD].
We use conditional Gaussians (Lauritzen and Spiegelhalter, 1988) as
probability densities, denoted as p[xu|xpa(u),τu] in Equation (1). Hence, for
a given developmental proﬁle x and a non-root developmental stage u with
pa(u)= v, the pdf takes the form

for

−(xu−µu|v−wu|vxv)2

p[xu|xv,τu|v]=

√

1
2π σu|v)

exp

u|v
2σ 2

(
where τu|v=(µu|v,wu|v,σ 2
u|v) are the parameters for one conditional density
in the model. Intuitively, this conditional density models a linear ﬁt of xu on
xv, where wu|v indicates the slope and µu|v the intercept. For the case of the
root, pa(u)= u, we can simply set wu|u=0 and Equation (2) will be equal to
a univariate Gaussian (see Appendix A2 for parameter estimates).

(2)

(cid:3)

,

(cid:2)

2.2 Estimation of the Dependence Tree structure
For a given continuous random variable X the problem of estimating
a DTree structure can be formulated as ﬁnding the pt[x|]
that
best approximates p[x]. We can measure the ﬁt between p[x] and the
approximation pt[x] with the relative entropy (D) (Cover and Thomas, 1991),
yielding the optimization problem

∗
t

=argminpt D(p[x]||pt[x|]).

p

(3)

A

B

D

C

E

F

i

n
o
s
s
e
r
p
x
E
 
e
n
e
G

Inferring differentiation pathways

A

D

F

E

B

C

A

B

D

C

E

F

A

D

B

E

F

C

1
 
p
u
o
r
G

2
 
p
u
o
r
G

3
 
p
u
o
r
G

Fig. 1. Illustrative example of a developmental tree and its gene expression
data (left). The developmental tree is constituted of a stem cell (stage A), an
‘orange’ lineage (Stages B and C) and a ‘blue’ lineage (Stages D, E and F).
The red-green plot depicts the relative expression, where lines corresponds
to gene proﬁles and columns to developmental stages ordered as in the above
tree. In the right, we depict three groups of genes and their corresponding
estimated tree structure as found by MixDTrees in the gene expression
data in the left (see Section 2.3 for complete plot description).

∗=argmaxpa

pa

I(Xu,Xpa(u)),

(4)

L(cid:4)
u=1

where I denotes the mutual information (Cover and Thomas, 1991) (see
Appendix A1 for derivations). This problem can be efﬁciently solved
by calculating a maximum weight spanning tree from a fully connected
indirected graph, where vertices are the developmental stages (1,...,L) and
the weight of an edge (u,v) is equal to the mutual information between the
corresponding variables (Xu,Xv) (Chow and Liu, 1968).
If p[xu,xv] follows a bivariate Gaussian pdf, the mutual information above

can be computed (Cover and Thomas, 1991) by
log(1− σ 2

I(Xu,Xv)=− 1
2

u,v
σ 2
v

σ 2
u

).

(5)

u,v

/σ 2
u

Note that the mutual information is proportional to the correlation coefﬁcient
ρu,v= σ 2
σ 2
v . Hence, it measures the dependence between the two
variables; I(Xu,Xv) = 0 if both variables are independent. Furthermore, as
the mutual information is symmetric, I(Xu,Xv)=I(Xv,Xu), the estimation
method does not determine direction of edges. Undirected and directed tree
representations of DTree have equivalent pdfs (Meila and Jordan, 2001),
directions of edges do not matter. For obtaining a directed tree, we select
one particular node as root and direct all edges away from it.

2.3 Mixtures of Dependence Trees (MixDTrees)
We do not expect that all genes in a particular developmental process will
share the same dependence structure, nor that the most likely DTree will
exactly match the developmental tree per se. Indeed, we expect that some

i157

p[xu|xpa(u),τu],

(1)

This is equivalent to ﬁnding a tree (Chow and Liu, 1968), here indicated by
pa, which has maximal mutual information among tree edges, that is

[19:33 18/6/03 Bioinformatics-btn153.tex]

Page: i157

i156–i164

I.G.Costa et al.

genes will be particularly correlated in particular developmental lineages,
but not in others. For example, group 1 from Figure 1 has genes tightly
overexpressed in the blue lineage ({XD,XE ,XF}), as does group 2 in the
orange lineage ({XB,XC}). We also expect that some genes, which are
important for earlier developmental stages, to be tightly coexpressed in stages
near the root, but not in mature cell types (leaf vertices). See for example
group 3 in Figure 1, which exhibits overexpression in all earlier stages
({XA,XB,XD}). To infer these group-speciﬁc dependencies, we estimate a
mixture of K DTrees, where each component can have a distinct tree
(cid:5)
structure.
We combine a set of K DTrees in a mixture model p[x|]=
[x|θk], where θk =(pak ,τ1k ,...,τLk) denotes the parameters of the
K
k=1
k-th DTree and αk is proportional to the number of developmental proﬁles
αk =1. The mixture
assigned to the k-th DTree; as usual αk ≥0 and
of Dependence Trees can be estimated with the Expectation–Maximization
algorithm (Dempster et al., 1977). The estimation of the tree structures
simply requires an additional computational procedure in the M-Step (Meila
and Jordan, 2001).

(cid:5)
K
k=1

αkpk
t

Furthermore, we propose a MAP estimation to regularize the parameters
wu|v,k and σ 2
u|v,k of the pdfs from Equation (2) and prevent overﬁtting when
there is little evidence for a given model (or for low αk). We obtain the values
of the hyper-parameters in an empirical Bayes fashion (Carlin and Louis,
2000), and use MAP point estimates at each M-Step of the Expectation–
Maximization (EM) algorithm (see Appendix A2 for details on parameter
estimates). The EM algorithm with MAP point estimates achieves results
comparable to a more computationally expensive Markov Chain Monte Carlo
method (Fraley and Raftery, 2007).

Note that in principle one could use a mixture of Gaussians (MoG)
with full covariance matrix to model any arbitrary dependence in data with
continuous variables. Due to the unbounded likelihood function, such method
is prone to overﬁtting (McLachlan and Peel, 2000). To prevent this, several
simpliﬁcations of the parameterization of the covariance matrix have been
proposed (Banﬁeld and Raftery, 1993; Celeux and Govaert, 1995), making
distinct a priori assumptions of the variable dependencies. MixDTrees
represents a new type of covariance matrix parameterization that is equivalent
to inputing zeros on entries of the inverse of the covariance matrix on
pairs of variables with no connecting edge (Lauritzen, 1996). Thus, the
number of parameters required for representing a DTree is linear on the
data dimensionality (3L−1), while it is quadratic for a multivariate Gaussian
with full covariance matrix (L+L∗(L−1)/2).
Visualization of gene groups To highlight the coexpression of developmental
stages, as indicated by the estimated DTree, we perform the following. Gene
groups are depicted as a heat-map with red values indicating overexpression
and green values indicating underexpression (Eisen et al., 1998). There, the
lines (gene proﬁles) are ordered as proposed in Bar-Joseph et al. (2001).
This procedure orders genes with similar expression proﬁles to be close in
the heat-map. Following this idea, for the columns (developmental stage
proﬁles), we compute all possible columns orderings and select the one
which has a minimal difference in the mutual information of adjacent
columns. To further help the interpretation of individual groups, we compute
strongly connected components (Cormen et al., 2001)—SCC for short—
in the graph returned after thresholding the mutual information matrix. An
optimal threshold parameter is obtained by evaluating the resulting SCC with
the silhouette index (Kaufman and Rousseeuw, 1990). SCC is represented by
dashed shapes around developmental stages and indicates, within a DTree,
which developmental stages in a particular branch have similar expression
proﬁles.

with different degrees of variable dependence, and apply several
unsupervised learning methods.
Data We generate data from mixtures with four types of variable
dependence ranging from: Gaussians with diagonal covariance
−
matrix (diag), DTree with low variate dependence (DTree
),
+
DTree with high variate dependence (DTree
) and Gaussians
with full covariance matrix (full). These choices range from the
independent case (diag) to the complete dependent case (full).
For each setting, we generate 10 such mixtures, and sample 500
development proﬁles from each. In all cases, we chose the µ
from the range [−1.5,1.5], L=4, K =5 and mixture coefﬁcients
equal to α=(0.1,0.15,0.2,0.2,0.35). For diag , diagonal entries
are sampled from [0.01,1.0], and non-diagonal entries are set to
zero. For DTree, we randomly generate tree structures, one for
u|v,k from [0.01,1.0]
each mixture component, and then choose σ 2
and wu|v,k from [0.0,0.5] for DTree
and wu|v,k from [0.0,1.0]
+
for DTree
. The generation of full is based on the eigenvalue
decomposition of the covariance matrix (= QQT ) as in (Qiu
and Joe, 2006), where  is drawn from [0.01,0.5]. The orthogonal
matrix Q is obtained by sampling values from a lower triangular
matrix M from the range [20,40], followed by the Gram–Schmidt
orthogonalization procedure.

−

We apply MoG with full and diagonal covariance matrices
and MixDTrees with MLE and MAP estimates to all datasets.
The mixture estimation method is initialized with K =5 random
DTrees (or multivariate Gaussians). Subsequently, we train the
mixture model using the EM algorithm. To avoid the effect of the
initialization, all estimations are repeated 15 times, and the one
with highest likelihood is selected. We also performed clustering
with k-means (McQueen, 1967), self-organizing maps (SOM) and
spectral clustering (Ng et al., 2001). For all methods, the number of
cluster was also set to ﬁve and for SOM, default parameters were
used (Vesanto et al., 2000). We compare the class information from
the data generation to compute the corrected Rand index (Hubbert
and Arabie, 1985) and evaluate the clustering solutions.
Results Every method performs well on the datasets generated with
the corresponding model assumptions (Fig. 2). An exception is the
MoG with full covariance matrices, which has low corrected Rand
index for all datasets. An inspection on the speciﬁcity index (Fig. A1)
indicates that the poor performance of MoG Full is caused by
overﬁtting, since it tends to join real groups. Spectral clustering has a
tendency to split real groups (see sensitivity plot in Fig. A1). In both
datasets from DTree, MixDTrees MAP has higher mean values
than MixDTrees MLE, which indicates a higher robustness of the
MAP estimates (paired t-tests indicate superiority of MixDTrees
−
MAP with P-values <0.05 in both DTree
). Moreover,
MixDTrees MAP achieves the highest values in all settings (paired
t-tests indicate P-values <0.05), outperforming MoG Full, MoG
Diagonal, k-means, SOM and spectral clustering, with the exception
of MoG Diagonal in the diag data. These results show that
MixDTrees MAP has a better performance on data coming from
distinct dependence structures when compared to the other methods,
and it is robust against overﬁtting.

+
and DTree

3 RESULTS AND DISCUSSIONS
3.1 Simulated data
To investigate general characteristics of MixDTrees and compare
it with other methods, we use simulated data from mixture models

3.2 Lymphoid development
To evaluate the application of DTrees and MixDTrees to real
biological data, we use gene expression data from lymphoid cell
development. First, we compare the DTree structure inferred from

i158

[19:33 18/6/03 Bioinformatics-btn153.tex]

Page: i158

i156–i164

d
n
a
R
c

1

0.8

0.6

0.4

0.2

0

1

2
3
Experiment

4

Fig. 2. We depict the mean corrected Rand index (Hubbert and Arabie,
1985) of true label recovery for distinct clustering methods (y-axis) against
data generated with distinct model assumptions (x-axis) (1 for diag, 2 for
−
DTree
and 4 for full). These choices range from the
independent case diag to the complete dependent case full.

+
, 3 for DTree

the whole dataset with the lymphoid developmental tree. Then,
we apply MixDTrees to ﬁnd modules of co-regulated genes,
and evaluate the results with GO and KEGG enrichment analysis.
Finally, we compare our method with other unsupervised learning
methods.
Data We produce an expression compendium of mouse lymphoid
cell development by combining measurements of wild-type control
cells from several studies (Akashi et al., 2003; Niederberger et al.,
2005; Poirot et al., 2004; Tze et al., 2005; Yamagata et al.,
2006) based on the Affymetrix U74 platform. In detail, our data
contain four stages of early development hematopoietic cells (Akashi
et al., 2003) [hematopoietic stem cell (HSC), multipotent progenitor
(MPP), common lymphoid progenitor (CLP), common myeloid
progenitor (CMP)]; three B-cell lineage stages (Tze et al., 2005)
[pro-B cells (Bpro), pre-B cells (Bpre) and immature B-cells
(Bimm)]; one natural killer (NK) stage (Poirot et al., 2004); and four
T-cell lineage stages [double negative T-cells (TDN) (Niederberger
et al., 2005), cd4 T cells (TCD4), cd8 T-cells (TCD8) and natural
killer T-cells (TNK; Yamagata et al., 2006)]. The developmental
tree describing the order of differentiation of the cells is depicted in
Figure 3 left. We preprocess the data as follows: we apply variance
stabilization (Huber et al., 2002) on all chips, take median values
of stages with technical replicates, use HSC values as reference
values and transform all expression proﬁles to log-ratios. We keep
genes showing at least a 2-fold change in one developmental
stage. The ﬁnal data consists of 11 developmental stages and
3697 genes.
Inferring the DTree structure An initial question is how well we
can recover the original developmental tree, as agreed upon by
developmental biologists (Fig. 3 left), if we apply the structure
estimation method described in Section 2.2 to the complete gene
expression data (see Fig. 3 right for the estimated DTree). To
quantify the difference between these trees, we compute the path
distance between all pairs of vertices, and calculate the Euclidean
distance between the resulting distance matrices (Steel and Penny,
1993), which indicates a distance of 15.74. To assess the statistical
signiﬁcance of this distance, we generate 1000 random trees with the

Inferring differentiation pathways

MixDTrees MAP
MixDTrees MLE
MoG Full
MoG Diag
k-means
SOM
spectral

Developmental Tree

Dependence Tree

MPP

MPP

CLP

CMP

CLP

CMP

Bpro

Bpre

Bimm

TDN

NK

TCD4

TCD8

TNK

Bpro

Bpre

Bimm

TDN

NK

TCD4

TCD8

TNK

Fig. 3. We depict the developmental tree with the stages contained in the
Lymphoid dataset (left). Early hematopoietic cells are depicted in olive
green, B-cells in orange, NK-cell in yellow and T-cells in blue. The dashed
edges represent edges wrongly assigned in the DTree estimated from the
Lymphoid data, which connect pairs of vertices with a path distant of one,
while the dotted edge represents a edge with a path distance of three. We
have in the right the DTree estimated from the Lymphoid data.

same distribution of outgoing edges per vertex as the developmental
tree. For each random tree, we compute the distance with the
developmental tree. This test indicates a P-value of 0.002 of ﬁnding
a distance as low as 15.74. Looking at these differences in detail,
we can observe that 5 out of the 10 edges are correctly assigned,
4 edges connects vertices pairs with a path distance equal to 1 (i.e.
MPP and CLP, CLP and TDN, TDN and TCD8 and TDN and TNK),
and one edge connect vertices with a path distance of 3 (NK is
connected to TCD8 instead the CLP). Furthermore, wrong edges
have a tendency to be connected to vertices in the same level of
the developmental tree (e.g. TCD8 and TNK both connected with
the TCD4).

Another important question is how well does the DTree capture
dependence in the data? One simple way to assess this is to measure
the proportion of the mutual information represented in the tree
edges, in comparison to the total mutual information on all pairs
of variables. For a DTree structure pa, the treeness index can be
deﬁned as

(cid:5)
(cid:5)
u=1I(Xu,Xpa(u))
L
v=u+1I(Xu,Xv)
u=1
L
L

(cid:5)

T(pa)=

.

(6)

For example, the score for the developmental tree (Fig. 3 left) is
0.22, whereas for the estimated DTree (Fig. 3 right), the ‘treeness’
index is 0.42. For measuring the statistical signiﬁcance of this,
we generate random data (1000 times) by shufﬂing values of
gene expression proﬁles xi, estimate a DTree from this random
data, and measure its corresponding treeness index. This test
indicates a P-value of 0.01 of ﬁnding a treeness index as high
as 0.42.
Inferring Gene Modules with MixDTrees We
estimate
MixDTrees with MAP estimates from the Lymphoid data
following the protocol in Section 3.1. The Bayesian information
criterion (McLachlan and Peel, 2000) indicates 13 groups as
optimal. We analyze the functional relevance of the groups of genes
found by enrichment analysis (Beissbarth and Speed, 2004) with
GO and pathway data from the KEGG (Kanehisa et al., 2006). For
the GO (or KEGG) enrichment analysis, we use the statistic of the
Fisher-exact test to obtain a list of GO terms (or KEGG pathways),

i159

[19:33 18/6/03 Bioinformatics-btn153.tex]

Page: i159

i156–i164

I.G.Costa et al.

TCD8

Bpre

NK

MPP

CMP

CLP

Bimm

TCD4

TNK

Bpro

TDN

TNK

TCD4

NK

Bpre

TDNTCD8

Bimm

MPP

CMP

CLP

Bpro

Bimm

NK

TNK

TCD4

TCD8

TDN

MPP

Bpro

CMP

Bpre

CLP

i

B
m
m

B
p
r
e

T
C
D
8

N
K

T
C
D
4

T
N
K

P
P
P

C
M
P

C
L
P

B
p
r
o

T
D
N

T
D
N

T
C
D
8

T
C
D
4

N
K

T
N
K

i

B
m
m

B
p
r
e

B
p
r
o

C
L
P

C
M
P

P
P
P

T
D
N

T
C
D
4

T
N
K

T
C
D
8

N
K

i

B
m
m

B
p
r
e

B
p
r
o

C
L
P

P
P
P

C
M
P

Fig. 4. We depict the DTree and expression proﬁles of groups 1, 4 and 5 from MixDTrees MAP. Dashed shapes around developmental stages represent
the SCC. See Section 2.3 for complete description of plotting procedure.

whose annotated genes are overrepresented in a group. We correct
for multiple testing following Benjamini and Yekutieli (2001).
All results, group plots, list of genes per cluster, KEGG and GO
enrichment analysis can be found at http://algorithmics.molgen.
mpg.de/Supplements/InfDif/

First, we measure the average treeness of the MixDTrees
(we calculate Equation (6) and take the sum weighted by α). For the
MixDTrees MAP this value was 0.54, which indicates an increase
of 28% over the treeness index for the single DTree. This reinforces
our point that mixture of Dependence Trees with estimated structures
is more successful in modeling dependencies in the data.

In relation to the groups of coexpressed genes found by
MixDTrees, overall, stages from the same developmental lineage
are at
the same branches of the estimated DTree structure.
Furthermore, groups present prototypical expression patterns such
as overexpression in cells from a particular lineage, but not in other
lineages (e.g. groups 2 and 5 for B-cells, groups 4 and 6 for T-cells
and group 11 for NK-cells) or groups displaying under-expression
in particular lineages (e.g. groups 7 and 12 for T-cells and groups
10 and 12 for B-cells).

In Figure 4, we display some of these groups, which we
discuss in more details. Group 1 is an interesting case, where
the DTree structure differs drastically from the developmental
tree. The right branch, which is formed by stages MPP, CLP,
CMP, TDN and Bpro, has only early developmental stages, and
all display high overexpression patterns. On the other hand, the
majority of stages in the SCC of the left branch (Bimm, Bpre,
TCD8, NK, TCD4, TNK) are immature developmental stages
(leaves in Fig. 3 left). Enrichment analyses from GO and KEGG
show that group 1 is overrepresented for cell cycle and DNA
repair genes (P-values <0.001). This matches the biological
knowledge that earlier differentiation stages of development are
cycling cells, while immature cells are resting (Matthias and
Rolink, 2005; Rothenberg and Taghon, 2005). Group 4 contains
an SCC (left branch) with all T-cell stages plus the closely related
NK-cell. At these stages, genes display an overexpression pattern.
Enrichment analysis indicates overrepresentation for GO terms such

as T-cell activation, differentiation and receptor signaling; and
KEGG pathways such as T-cell signaling and NK-cell mediated
cytotoxicity (P-values <0.001). Similarly, group 5 has a SCC
with all B-cell stages. Furthermore, for B-cell stages, genes are
preferentially overexpressed. GO analysis also indicates enrichment
for terms such as B-cell activation (P-values <0.001), while KEGG
analysis indicates enrichment in pathways such as Hematopoietic
cell lineage and B-Cell receptor signaling (P-values <0.05). These
results indicate how MixDTrees can be used in ﬁnding groups
of biologically related genes, as well that the associated DTree
structure adds relevant information regarding expression similarly
of developmental stages.
Comparison with other methods For comparison purposes, we
also perform clustering of the Lymphoid data with other methods:
k-means, SOM, MoG with full covariance matrix, MoG with
diagonal matrix and the bi-clustering methods Samba (Tanay et al.,
2002) and non-negative matrix factorization (Brunet et al., 2004).
Additionally, we evaluate distinct variations of the MixDTrees:
MAP and MLE with DTree structure estimation and MAP estimates
with the DTrees ﬁxed to the structure from Figure 3 left, as in
our previous approach (Costa et al., 2007b). For SOM and Samba,
default parameters were used (Vesanto et al., 2000 , Tanay et al.,
2002). For the mixtures, NMF, k-means and SOM, the number of
clusters was set to 13. Samba, which detects the number of clusters
automatically, determined 19 clusters.

To evaluate the performance of the methods, we use a heuristic
of comparing P-values of KEGG enrichment analysis in a similar
way as Ernst et al. (2005). The results of the comparison of
MixDTrees MAP and MoG Diag can be seen in Figure 5. In
short, the best method should present a higher enrichment for a
higher number of KEGG pathways, i.e. MixDTrees MAP was
superior to MoG Diag in 9 out of 11 pathways. Furthermore, most
of the 11 KEGG pathways enriched with a P-value <0.05 in one
of the methods (points depicted in Fig. 5) are directly involved
in immune system and developmental processes. We apply the
same procedure for all pairs of methods and count the events

{P-value m1 < P-value m2}, where m1 and m2 are the two methods

i160

[19:33 18/6/03 Bioinformatics-btn153.tex]

Page: i160

i156–i164

i

s
e
e
r
T
D
x
M
 
e
u
a
v
-
P
 
g
o
−

l

l

20

15

10

5

KEGG Pathway enrichment

Cell cycle

Natural killer cell mediated cytotoxicity

Hematopoietic cell lineage
T cell receptor signaling pathway

Cytokine-cytokine receptor interaction

Leukocyte transendothelial migration
Cell adhesion molecules (CAMs)
Ribosome
B cell receptor signaling pathway

Type I diabetes mellitus
Antigen processing and presentation

5

10

15

−log P-value MoG Diag

20

Fig. 5. We depict the scatter plot comparing the KEGG pathway enrichment
of MoG Diag (x-axis) and MixDTrees MAP (y-axis). We use −log(P)-
values, where higher values indicate a higher enrichment. The blue lines
corresponds to −log(P)-value cut-off used (P-value of 0.05). Only KEGG
pathways with a −log(P)-value higher than (2.99) in one of the results are
included. MixDTrees MAP had a higher enrichment for 9 out of the 11
KEGG pathways.

Comparison of KEGG Pathway Enrichment

2

0

−2

MixDTrees-MAP

MixDTrees-MLE

k-means

NMF

MoG-Diag

MixDTrees-Fix

Spectral

MoG-Full

SOM

Samba

1

2

3

4

5

6

7

8

9

10

Fig. 6. Heat-map plot displaying the comparison of KEGG enrichment for
10 distinct clustering methods. More precisely, entries in the plot correspond
to log(#{P-value my < P-value mx }/#{P-value my > P-value mx }), where
red (or blue) values indicate that the method on the y-axis (my) had a higher
(or lower) count of enriched KEGG pathways than the method on the x-axis
(mx); numbers on the x-axis correspond to the methods on the y-axis.

in comparison. As can be seen in Figure 6, MixDTrees MAP
outperforms all methods, while MixDTrees MLE and k-means
also obtained higher enrichment than other methods. Overall, SOM,
MoG Full and Samba obtain poor enrichment results, and were
outperformed by other methods. We repeat the same analysis for
GO enrichment (see Supplementary Material). The result are in
agreement with the KEGG enrichment analysis, again MixDTrees
MAP had higher enrichment than all other methods, while SOM and
MoG Full obtain poor results.

Inferring differentiation pathways

4 CONCLUSIONS
Understanding the details of cell differentiation is a central question
in developmental biology and also of high relevance for clinical
applications, for example, when considering lymphoid development.
The full spectrum of differentiation paths is still unknown, as
recent studies suggest that there exist alternative paths in lymphoid
development (Graf and Trumpp, 2007).

Here we present a novel statistical model called DTree for
gene expression data measured for cells in distinct differentiation
stages and an unsupervised learning method for ﬁnding functional
modules and their speciﬁc differentiation pathways in the course
of development. We show that
the DTree inferred from the
whole dataset approximates the dependencies intrinsic to Lymphoid
development well. Furthermore, by combining several DTrees in
a mixture, we ﬁnd models speciﬁc to groups of co-regulated genes
displaying distinct differentiation pathways reﬂected by the distinct
dependence structures. These groups usually have a lineage speciﬁc
expression pattern supported by term enrichment analysis of gene
annotation from KEGG and GO, which indicates development-
speciﬁc module function. Moreover, the DTree structure, which
indicates the dependence between the stages,
is valuable for
the biological interpretation of these groups. On simulated data
MixDTrees compares favorably to other methods routinely used
for ﬁnding functional modules, even for data arising from variable
dependence structures. In particular, our method is not susceptible to
overﬁtting, which is otherwise a frequent problem in the estimation
of mixture models from sparse data.

Alternative paths of differentiation can be investigated with the
use of statistical models with higher order dependencies (Chaudhuri
et al., 2007; Thiesson et al., 1998), which currently do not
provide an efﬁcient and exact method for the estimation of relevant
dependencies. As our probabilistic method is based on a well-
studied statistical framework (Friedman, 2004), we can easily beneﬁt
from extensions to mixtures proposed to integrate, or fuse, further
biological information, such as sequence (Schönhuth et al., 2006)
or in situ data (Costa et al., 2007a). Thus we will be able to explore
developmental regulatory networks controlling module-speciﬁc
differentiation from fused genomics and transcriptomics data.

ACKNOWLEDGEMENTS
We would like to express our gratitude to Fritz Melchers and Roland
Krause (MPI for Infection Biology, Berlin) for helpful discussions.

Funding: The I.G.C. would like to acknowledge funding from the
CNPq(Brazil)/DAAD.

Conﬂict of Interest: none declared.

REFERENCES
Akashi,K. et al. (2003) Transcriptional accessibility for genes of multiple tissues and
hematopoietic lineages is hierarchically controlled during early hematopoiesis.
Blood, 101, 383–389.

Anisimov,S.V. et al. (2007) ‘NeuroStem Chip’: a novel highly specialized tool to study

neural differentiation pathways in human stem cells. BMC Genomics, 8, 46.

Ashburner,M. (2000) Gene ontology: tool for the uniﬁcation of biology. Nat. Genet.,

25, 25–29.

Banﬁeld,J.D. and Raftery,A.E.

(1993) Model-based gaussian and non-gaussian

clustering. Biometrics, 49, 803–821.

Bar-Joseph,Z. (2004) Analyzing time series gene expression data. Bioinformatics, 20,

2493–2503.

i161

[19:33 18/6/03 Bioinformatics-btn153.tex]

Page: i161

i156–i164

I.G.Costa et al.

Bar-Joseph,Z. et al. (2001) Fast optimal leaf ordering for hierarchical clustering.

Biol., 77, 830–841.

Bioinformatics, 17(Suppl. 1), i22–i29.

Beerenwinkel,N. et al. (2004) Learning multiple evolutionary pathways from cross-
sectional data. In RECOMB ’04: Proceedings of the Eighth Annual International
Conference on Research in Computational Molecular Biology. ACM Press,
New York, pp. 36–44.

Beissbarth,T. and Speed,T.P. (2004) GOstat: ﬁnd statistically overrepresented gene

ontologies within a group of genes. Bioinformatics, 20, 1464–1465.

Benjamini,Y. and Yekutieli,D. (2001) The control of the false discovery rate in multiple

testing under dependency. Annal. Stat., 29, 1165–1188.

Brunet,J.-P. et al. (2004) Metagenes and molecular pattern discovery using matrix

factorization. Proc. Natl Acad. Sci. USA, 101, 4164–4169.

Carlin,B.P. and Louis,T.A. (2000) Bayes and Empirical Bayes Methods for Data

Analysis. Chapman & Hall/CRC, Boca Raton, FL, USA.

Poirot,L. et al. (2004) Natural killer cells distinguish innocuous and destructive forms

of pancreatic islet autoimmunity. Proc. Natl Acad. Sci. USA, 101, 8102–8107.

Qiu,W. and Joe,H. (2006) Generation of random clusters with speciﬁed degree of

separation. J. Classif., 23, 315–334.

Rothenberg,E.V. and Taghon,T. (2005) Molecular genetics of T cell development. Annu.

Rev. Immunol., 23, 601–649.

Schaefer,J. and Strimmer,K. (2005) A shrinkage approach to large-scale covariance
matrix estimation and implications for functional genomics. Stat. Appl. Genet. Mol.
Biol., 4, Article 32.

Schönhuth,A. et al. (2006) Semi-supervised clustering of yeast gene expression. In
Japanese-German Workshop on Data Analysis and Classiﬁcation. Springer, Berlin-
Heidelberg, Germany.

Steel,M.A. and Penny,D. (1993) Distributions of tree comparison metrics-some new

Celeux,G. and Govaert,G. Gaussian parsimonious clustering models. Pattern

results. Syst. Biol., 42, 126–141.

Recognition, 28, 781–793.

Tanay,A. et al. (2002) Discovering statistically signiﬁcant biclusters in gene expression

Chaudhuri,S. et al. (2007) Estimation of a covariance matrix with zeros. Biometrika,

data. Bioinformatics, 18(Suppl. 1), S136–S144.

94, 199–216.

Chow,C. and Liu,C. (1968) Approximating discrete probability distributions with

dependence trees. IEEE Trans. Info. Theory, 14, 462–467.

Cormen,T.H. et al. (2001) Introduction to Algorithms. 2n edn. MIT Press and McGraw-

Hill, Cambridge, MA, USA.

Costa,I.G. et al. (2007a) Semi-supervised learning for the identiﬁcation of syn-expressed
genes from fused microarray and in situ image data. BMC Bioinformatics, 8(Suppl.
10), S3.

Costa,I.G. et al. (2007b) Gene expression tress in blood cell development. BMC

Immunol., 8, 25.

Thiesson,B. et al. (1998) Learning mixtures of dag models. In Proceedings of the
14th Annual Conference on Uncertainty in Artiﬁcial Intelligence (UAI-98). Morgan
Kaufmann, San Francisco, CA, pp. 504–551.

Tomancak,P. et al. (2002) Systematic determination of patterns of gene expression

during Drosophila embryogenesis. Genome. Biol., 3, research: 0081.1–0081:14.

Tze,L.E.

et al.

(2005) Basal

immunoglobulin signaling actively maintains

developmental stage in immature B cells. PLoS Biol, 3, e82.

Vesanto,J. et al. (2000) Som toolbox for matlab. Technical report. Helsinki University

of Technology, Helsinki, Finland.

Yamagata,T. et al.

(2006) A shared gene-expression signature in innate-like

Cover,T.M. and Thomas,J.A. (1991) Elements of Information Theory. John Wiley and

lymphocytes. Immunol. Rev., 210, 52–66.

Sons, Inc., New York.

Dempster,A. et al. (1977) Maximum likelihood from incomplete data via the EM

algorithm. JRSSB, 39, 1–38.

Eisen,M. et al. (1998) Cluster analysis and display of genome-wide expression patterns.

Proc. Natl Acad. Sci. USA., 95, 14863–14868.

Ernst,J. et al. (2005) Clustering short time series gene expression data. Bioinformatics,

21(Suppl. 1), i159–i168.

Ferrari,F. et al. (2007) Genomic expression during human myelopoiesis. BMC

Genomics, 8, 264.

Fraley,C. and Raftery,A.E.

(2007) Bayesian regularization for normal mixture

estimation and model-based clustering. J. Classif., 24, 155–181.

Friedman,N. (2004) Inferring cellular networks using probabilistic graphical models.

Science, 303, 799–805.

Graf,T. and Trumpp,A. (2007) Haematopoietic stem cells, niches and differentiation
pathways. Poster. Nat. Rev. Immunol. URL http://www.nature.com/nri/posters/hsc/
index.html (last accessed date January 1 2008).

Hubbert,L.J. and Arabie,P. (1985) Comparing partitions. J. Classif., 2, 63–76.
Huber,W. et al. (2002) Variance stabilization applied to microarray data calibration
and to the quantiﬁcation of differential expression. Bioinformatics, 18(Suppl. 1),
S96–S104.

Hyatt,G. et al. (2006) Gene expression microarrays: glimpses of the immunological

genome. Nat. Immunol., 7, 686–691.

Kanehisa,M. et al. (2006) From genomics to chemical genomics: new developments in

KEGG. Nucleic Acids Res., 34(Database issue), D354–D357.

Kaufman,M. and Rousseeuw,P.J. (1990) Finding Groups in Data: an Introduction to

Cluster Analysis. Wiley, New York, USA.

Lauritzen,S.L. (1996) Graphical Models. Oxford University Press, New York, USA.
Lauritzen,S.L. and Spiegelhalter,D.J. (1998) Local computations with probabilities on
graphical structures and their application to expert systems. J. Royal Statis. Soc. B,
50, 157–224.

Matthias,P. and Rolink,A.G. (2005) Transcriptional networks in developing and mature

B cells. Nat. Rev. Immunol., 5, 497–508.

McLachlan,G. and Peel,D. (2000) Finite Mixture Models. Wiley Series in Probability

and Statistics. Wiley, New York.

McQueen,J. (1967) Some methods of classiﬁcation and analysis of multivariate
observations. In 5th Berkeley Symposium in Mathematics, Statistics and Probability.
University of California Press, Berkley, CA, USA, pp. 281–297.

Meila,M. and Jordan,M.I.(2001) Learning with mixtures of trees. J. Mach. Learn. Res.,

1, 1–48.

Ng,A.Y. et al. (2001) On spectral clustering: analysis and an algorithm. In Advances in
Neural Information Processing Systems 13. MIT Press, Cambridge, MA, USA, pp.
849–856.

Niederberger,N. et al. (2005) Thymocyte stimulation by anti-TCR-beta, but not by anti-
TCR-alpha, leads to induction of developmental transcription program. J. Leukoc.

i162

APPENDIX
A1 DTREE Structure estimation
For a given L-dimensional continuous variable X, the problem
of a DTree structure estimation can be deﬁned as ﬁnding the
pdf pt[x] that best approximates p[x]. We summarize here the
solution proposed in Chow and Liu (1968), which considered
trees on discrete distributions, and we describe our extension to
continuous variates. The solution is based on ﬁnding the DTree
structure that minimizes the relative entropy between the p[x] and
the approximation pt[x], or
∗
t =argminpt D(p||pt).

(A1)
The relative entropy between p[x] and pt[x] is deﬁned as (Cover and
Thomas, 1991)

p

From Equation 1, we have

D(p||pt) =

p[x]logp[x]−

logp[xu|xpa(u),τu],

(cid:6)

D(p||pt)=

X

p[x]log
(cid:6)
p[x] L(cid:4)

p[x]
pt[x] .
p[x] L(cid:4)
u=1
logp[xu]
u=1
p[xu|xpa(u),τu]

X

log

p[xu]

(cid:6)
p[x] L(cid:4)

X

u=1

(cid:6)

X

(cid:6)

−

X

= H(X)−

By Bayes rule and the deﬁnition of entropy (H) and mutual
information (I) (Cover and Thomas, 1991), this previous formula

[19:33 18/6/03 Bioinformatics-btn153.tex]

Page: i162

i156–i164

Inferring differentiation pathways

A2 MAP Parameters estimates
We use the Expectation Maximization algorithm with MAP point
estimates for estimating the MixDTrees MAP. We describe here
the derivations of the parameter estimates maximizing the MAP.
This corresponds to the parameters used in the M-Step of the EM
algorithm. All other parameters follow the basic EM framework, and
we refer the reader to McLachlan and Peel (2000) for more details.
Let xiu be the expression value of the gene i in development
stage u, 1≤ i≤ N and 1≤ u≤ L. Then, xi=(xi1,...,xiu,...,xiL) is
the developmental proﬁle of gene i, and X corresponds to a data set
with N observed genes.

In short, we want to ﬁnd estimates maximizing
p[|X,Y]≈ p[X,Y|]p[]

where yi∈Y corresponds to the hidden variable indicating,
which mixture component gene proﬁle xi belongs to. Since
MixDTrees are based on ﬁrst-order dependencies,
is
sufﬁcient to ﬁnd the parameters in a simple bivariate scenario
formula

(Xu,Xpa(u)), where pa(u)= v. This

the

it

above to

where

simpliﬁes
p[|Xu,Xv,Y]= p[Xu,Xv,Y|]p[],
p[Xu,Xv,Y|]= K(cid:1)
p[k]= K(cid:1)

p[wu|v|σ 2

,αk]p[σ 2

N(cid:1)
i=1

(αk·pk

k=1

u|v,k

u|v,k

t [Xu,Xv|k])rik ,

k=1
and rik = p[yi= k|xi]

and thus

p[]= K(cid:1)
where αk =(cid:5)

k=1

i=1 rik
N

the posterior
probability (or responsibility) (McLachlan and Peel, 2000) that gene
i belongs to DTree k.

is

|αk]p[αk],

(A8)

A2.1 Priors on parameters
We use the following conjugate priors to regularize the parameter
wu|v,k and σ 2
u|v,k and avoid overﬁtting when there is low evidence
for a given model (or low αk).

on

deviation

A2.1.1 Prior
of

λu|v,k =(σ 2

computation we work with

−1. We deﬁne the prior of λu|v,k to be proportional

parameter For
precision

a

simplicity
parameter

u|v,k)
p[λu|v,k|νu|v,k ,αk]∼Exponential

(cid:7)

(cid:8)

λu|v,k
νu|v,k αk

to

p[xu,xpa(u)]
p[xu]p[xpa(u)] ,

I(Xu,Xpa(u)).

(A2)

and hence,

can be simpliﬁed to,

X

−

(cid:6)

H(Xu)

D(p||pt) = H(X)− L(cid:4)
u=1
L(cid:4)
p[xu,xpa(u)]log
u=1
H(Xu)− L(cid:4)
L(cid:4)
u=1

D(p||pt)=H(X)− L(cid:4)

∗=argmaxpa

u=1

u=1

pa

Since H(X) and H(Xu) are independent of pt, Equation (A2) reduces
to

I(Xu,Xpa(u)).

(A3)

This problem can be efﬁciently solved by a maximum weight
spanning tree algorithm on the fully connected undirected graph,
in which vertices corresponds to the variables and edge weights to
the mutual information between variables (Chow and Liu, 1968).
This algorithm has a worst case complexity of O(L2logL).
We need to compute I(Xu,Xpa(u)) for a multivariate Gaussian.
Given pa(u)= v, the mutual information is deﬁned as,
p[xu,xv]
p[xu]p[xv] dxudxv.

I(Xu,Xv)=

(A4)

(cid:6)

(cid:6)

Xu
Expanding the terms
I(Xu,Xv) =

p[xu,xv]log
(cid:6)

Xv

(cid:6)

Xu
−

(cid:6)
(cid:6)

−

Xv

(cid:6)
(cid:6)

p[xu,xv]logp[xu,xv]dxudxv
p[xu,xv]logp[xu]dxudxv
p[xu,xv]logp[xv]dxudxv,

Xv

Xu

Xv
and by deﬁnition of H, we have

Xu

I(Xu,Xv)=H(Xu)+H(Xv)−H(Xu,Xv).

(A5)

The entropy of a L-dimensional multivariate Gaussian pdf is deﬁned
(Cover and Thomas, 1991) as
H(X)= 1
2

log(2πe)L|X|,

(A6)

where X is the covariance matrix of X. By substituting Equation
(A6) in Equation (A5), we obtain

log(2πeσ 2
Xv

)

)+ 1
2

I(Xu,Xv) = 1
log(2πeσ 2
Xu
2
log((2πe)2|Xu,Xv
− 1
2
(cid:2)
(cid:2)
(cid:3)
v −(σu,v)2,
u σ 2
(2πe)2
(2πe)2

|= σ 2
I(Xu,Xv)= 1
2

− 1
2

log

log

|),

given |Xu,Xv

v −(σu,v)2
u σ 2
σ 2
σ 2
u σ 2
v

and hence,

(cid:3)

,

where νu|v,k is the hyper-parameter.

A2.1.2 Prior on regression parameter The prior of wy|x,k is
deﬁned as

p[wu|v,k|σ 2

u|v,k

,αk ,βu|v,k]= N(0,βu|v,k(λu|v,k αk σ 2
v|k)

−1),

I(Xu,Xv)=− 1
2

log(1− σ 2
u,v
σ 2
u σ 2
v

).

(A7)

which is invariant to the scale of the variates Xu and Xv, and has
βu|v,k as a hyper-parameter.

i163

[19:33 18/6/03 Bioinformatics-btn153.tex]

Page: i163

i156–i164

I.G.Costa et al.

y
t
i
v
i
t
i
s
n
e
S

1

0.8

0.6

0.4

0.2

0

MixDTrees MAP
MixDTrees MLE
MoG Full
MoG Diag
k-means
SOM
spectral

1

0.8

y
t
i
c
i
f
i
c
e
p
S

0.6

0.4

0.2

0

1

2
3
Experiment

4

1

2
Experiment

3

4

Fig. A1. We depict the sensitivity and speciﬁcity of label recovery for distinct clustering methods (y-axis) for distinct model assumptions (x-axis) (1 for diag,
−
2 for DTree
and 4 for full). A low sensitivity is a indicator of joining real clusters; while a low speciﬁcity indicates a tendency to split real
clusters.

+
, 3 for DTree

(cid:5)
i=1 rik(xiv− ˆµv|k)(xiu− ˆµu|k)2

N

(cid:5)

i=1 rik
N

ˆσu,v|k =

.

(A14)

A2.3 Hyper parameters estimates via empirical Bayes
In an empirical Bayes approach (Carlin and Louis, 2000), we can
estimate the MAP value of βu|v,k and νu|v,k from the data, by taking
the derivative of Equation (A8) in relation to the hyper-parameters,
that is

ˆβu|v,k =

(cid:5)

i=1 rik
N
−2
2σ 2
σ 2
v|k
u|k
σ 2
u,v|k

(cid:5)
i=1 rik
N
u|v,k
2σ 2

,

.

(A15)

(A16)

and

ˆνu|v,k =−

Both empirical priors also penalize variables with large variances
or with low evidence enforcing lower wu|v,k and higher σ 2
u|v,k,
respectively.

A2.2 MAP estimates
The MAP estimates are obtained by taking the derivative of
Equation (A8) in relation to each parameter, which leads to the
estimates

ˆµu|v,k = ˆµu|k− ˆµv|kwu|v,k
ˆwu|v,k =

ˆσu,v|k
v|k(1+β−1
ˆσ 2
u|v,k)

.

When βu|v,k →∞, the prior becomes non-informative; that is, the

MAP and maximum likelihood (ML) estimates are equal.

ˆσ 2
u|v,k

= ˆσ 2
u|k

−w2

u|v,k

v|k(1+β−1
ˆσ 2

u|v,k)−ν−1
u|v,k

.

Again, when βu|v,k →∞ and νu|v,k →∞, the prior becomes non-

informative, and MAP and ML estimates are equal.

All the estimates make use of the following sufﬁcient statistics

(cid:5)
(cid:5)
i=1 rikxiu
N
i=1 rik
N

ˆµu|k =
(cid:5)
(cid:5)
i=1 rik(xiu− ˆµu|k)2

N

i=1 rik
N

(A12)

, and

(A13)

(A9)

(A10)

(A11)

ˆσ 2
u|k

=

i164

[19:33 18/6/03 Bioinformatics-btn153.tex]

Page: i164

i156–i164

