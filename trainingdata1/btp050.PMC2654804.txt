BIOINFORMATICS ORIGINAL PAPER Vol. 25 no. 6 2009, pages 780–786

doi:10.1093/bioinformatics/btp050

Systems biology
Benchmarks for identiﬁcation of ordinary differential equations
from time series data
Peter Gennemark1,2,∗ and Dag Wedelin3
1Department of Mathematical Sciences, University of Göteborg, SE-412 96 Göteborg, 2Department of
Mathematics, Uppsala University, SE-751 06 Uppsala and 3Department of Computer Science and Engineering,
Chalmers University of Technology, SE-412 96 Göteborg, Sweden
Received on September 07, 2008; revised on December 05, 2008; accepted on December 29, 2008
Advance Access publication January 28, 2009
Associate Editor: Trey Ideker

In recent years, the biological

ABSTRACT
Motivation:
literature has seen a
signiﬁcant increase of reported methods for identifying both structure
and parameters of ordinary differential equations (ODEs) from time
series data. A natural way to evaluate the performance of such
methods is to try them on a sufﬁcient number of realistic test cases.
However, weak practices in specifying identiﬁcation problems and
lack of commonly accepted benchmark problems makes it difﬁcult
to evaluate and compare different methods.
Results: To enable better evaluation and comparisons between
different methods, we propose how to specify identiﬁcation problems
as optimization problems with a model space of allowed reactions
(e.g. reaction kinetics like Michaelis–Menten or S-systems), ranges
for the parameters, time series data and an error function. We also
deﬁne a ﬁle format for such problems.

We then present a collection of more than 40 benchmark problems
for ODE model
identiﬁcation of cellular systems. The collection
includes realistic problems of different levels of difﬁculty w.r.t. size
and quality of data. We consider both problems with simulated
data from known systems, and problems with real data. Finally,
we present results based on our identiﬁcation algorithm for all
benchmark problems. In comparison with publications on which we
have based some of the benchmark problems, our approach allows
all problems to be solved without the use of supercomputing.
Availability: The benchmark problems are available at
www.odeidentiﬁcation.org
Contact: peterg@chalmers.se
Supplementary information: Supplementary data are available at
Bioinformatics online.

1 INTRODUCTION
We consider the problem of identifying both the structure and the
parameters of an ordinary differential equation (ODE) system from
time series data. In recent years, there has been a signiﬁcant increase
in the number of reported methods approaching this problem in the
biological literature (see Table 1 and the references).

For systems of realistic size and with realistic amount and quality
of data this is a hard problem and heuristic algorithms are therefore

∗

To whom correspondence should be addressed.

typically employed. Such algorithms cannot guarantee that they
give the best answer to a given problem. An established way to
evaluate the performance of heuristic algorithms is to try them
on a sufﬁcient number of realistic test cases. However, lack of
well deﬁned and commonly accepted benchmark problems makes it
difﬁcult to evaluate and compare different methods:

(cid:127) Problems are often incompletely and/or ambiguously speciﬁed,
and personal communication is required to reconstruct essential
aspects of the problems.

(cid:127) Very few test problems are usually considered. This serves
the purpose of demonstrating feasibility, but says little about
general performance.

(cid:127) Even when problems originate from the same system, different
papers typically consider slight modiﬁcations of the original
problem, which make direct comparisons difﬁcult. An example
is a test problem from Kikuchi et al., 2003. Several recent
publications (Cho et al., 2006; Daisuke and Horton, 2006;
Gennemark and Wedelin, 2007; Kimura et al., 2005; Liu and
Wang, 2008; Tsai and Wang, 2005; Tucker and Moulton, 2006)
consider the same system, but usually with a more informative
dataset.

To a considerable degree, the lack of benchmark problems is
caused by a more fundamental underlying difﬁculty in how to
specify such identiﬁcation problems mathematically, and how to
conveniently represent them in ﬁles. This is much more complex
when both structure and parameters are unknown, compared with
the well known case of parameter estimation in a given structure.

In particular, it is not sufﬁcient to give only data from one
or several experiments, or a source model from which such data
can be simulated, see Figure 1A. In addition to the data, a model
space must be deﬁned, to specify the possible forms of the right-
hand side of the ODEs and appropriate parameter ranges. Clearly,
if we allow few possible reactions and narrow parameter ranges
we obtain a simpler identiﬁcation problem, and if we allow many
possible reactions and wide parameter ranges we obtain a more
difﬁcult problem. Furthermore, known prior information about parts
of the model may be given. Finally, we must deﬁne an objective
function that also includes some notion of model complexity. This
is needed since we are searching among different structures, and
a simple maximum likelihood criterion is not sufﬁcient and will

 2008 The Author(s)
This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/
by-nc/2.0/uk/) which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.

Benchmarks for identiﬁcation of ODEs from time series data

Table 1. Benchmark problems for ODE system identiﬁcation

Problem name

Original problem reference

Source system/Model

#var

#exp

#pts

Noise (%)

simpleLin1
simpleLin2
simpleFb1
simpleFb2
simpleFb3
simpleFb4
osc1
osc2
metabol1
metabol2
metabol3
3genes1
ss_cascade1
ss_cascade2
ss_cascade3
ss_branch1
ss_branch2
ss_branch3
ss_branch4
ss_branch5
ss_branch6
ss_5genes1
ss_5genes2
ss_5genes3
ss_5genes4
ss_5genes5
ss_5genes6
ss_5genes7
ss_5genes8

ss_15genes1
ss_15genes2
ss_30genes1
ss_30genes2
ss_30genes3
cytokine1
cytokine2
ss_ethanolferm1
ss_ethanolferm2
ss_sosrepair1
ss_sosrepair2
ss_cadBA1
ss_cadBA2
ss_clock1
ss_clock2

Simple linear system

Simple feedback loop (McKinney et al., 2006)

An oscillator (Karnaukhov et al., 2007)

A metabolic pathway (Arkin and Ross, 1995)

A 3-step gene network (Moles et al., 2003)
A cascaded pathway (Voit, 2000)

A branched pathway (Voit, 2000)

A genetic network (Hlavacek and Savageau, 1996)

A genetic network (Maki et al., 2001)

A genetic network (Maki et al., 2001)

Immunologic data (Rock et al., 2004)

(McKinney et al., 2006)

(Karnaukhov et al., 2007)
(Gennemark and Wedelin, 2007)
(Gennemark and Wedelin, 2007)
(Gennemark and Wedelin, 2007)

(Tsai and Wang, 2005)

(Voit and Almeida, 2004)
(Marino and Voit, 2006)
(Tucker and Moulton, 2006)
(Kutalik et al., 2007)
(Kutalik et al., 2007)
(Gonzalez et al., 2007)
(Kikuchi et al., 2003)
(Gennemark and Wedelin, 2007)
(Gennemark and Wedelin, 2007)
(Kimura et al., 2005)
(Daisuke and Horton, 2006)
(Cho et al., 2006)
(Tucker and Moulton, 2006)
(Tsai and Wang, 2005)
(Liu and Wang, 2008)

(Kimura et al., 2005)
(Liu and Wang, 2008)
(McKinney et al., 2006)

(Liu and Wang, 2008)

Ethanol fermentation (Wang et al., 2001)

(Cho et al., 2006)

SOS repair system Escherichia coli (Ronen et al., 2002)

(Gonzalez et al., 2007)

cadBA network in E. coli (Kuper and Jung, 2005)

(Daisuke and Horton, 2006)

Mice cell cycle (Barrett et al., 2005)

3

3

3

5

8
3

4

5

15

30

4

4

6

5

7

3
8
4
4
1
1
1
1
12
12
12
16
8
4
8
3
6
5
4
4
5
10
10
10
15
10
1
10
8

10
20
15
20
8
1
1
2
3
1
1
1
1
1
1

13
13
7
7
7
7
41
41
7
21
21
21
41
41
41
21
51
20
20
20
31
11
9
3
11
11
16
20
41

11
11
11
11
41
7
7
11–15
11–19
50
50
25
25
12
12

0
10
0
5
0
≈5a
0
3
0
10
20
0
0
0
5
0
0
0
0
2.5
0
0
20
0
0
0
0
0
0

0
10
0
10
0
10a
10a
≈30a
≈30a
10a
10a
<20a
<20a
≈10a
≈10a

aEstimate from or assumption about data. See web site for further information.
#var, number of dependent variables; #exp, number of experimental conditions with different initial conditions and/or input functions; #pts, number of data-points per time series.
Noise is added from a Gaussian distribution with SD given as a certain percentage (denoted Noise) of each experimental value. Problem names starting with ‘ss_’ correspond to
S-systems. The last section lists problems with real data from biological systems.

lead to over-ﬁtting. Together, this deﬁnes the identiﬁcation problem
mathematically as an optimization problem, the solution of which
is a model. An illustration of an identiﬁcation problem is shown in
Figure 1B, and the solution model is shown in Figure 1C.

Based on these considerations, we present a collection of more
than 40 fully speciﬁed and publicly available benchmark problems

for ODE system identiﬁcation. The problems have mainly been
collected and translated from recent publications, but we have also
included new and carefully designed problems.

The collection includes both simple problems suitable for initial
testing, and more complex problems with realistic size and quality
of data. Most problems are based on simulated data from a known

781

P.Gennemark and D.Wedelin

Fig. 1. Identiﬁcation of ODE systems. (A) An identiﬁcation problem can be speciﬁed with real or simulated data from one or several experiments, a model
space of allowed reactions occurring on the right-hand side of the ODEs, an initial model representing prior knowledge and an error function. (B) An example
of an identiﬁcation problem with a model space of three traditional chemical reaction types, an error function where L = likelihood function, λK = structural
complexity term (λ = constant and K = number of model parameters) and an initial model with no prior information. (C) An example of a solution model.

source model, which is important for evaluation purposes. However,
several problems are also based on real data.

The collection consists of problems of two different kinds. The
ﬁrst kind are problems whose solutions are models based on
traditional chemical rate equations like unimolecular mass action
and Michaelis–Menten’s kinetics. An example of such a system with
three variables is shown in Figure 1C. Typically for systems of this
kind, the rate equations are composed as linear combinations of
known reaction types that can be non-linear in both the parameters
and in the state variables.

The other kind of problem is where the solutions are deﬁned on
a ﬁxed form, like S-systems which is currently the most popular
form for identiﬁcation. The S-system formalism (Savageau, 1976;
Voit, 2000) is based on approximating kinetic laws with multivariate
power-law functions. A model consists of n non-linear ODEs and
the generic form of equation i reads

(cid:3)
i (t)= αi

X

(t)−βi

X

gij
j

X

hij
j

(t)

(1)

n(cid:1)
j=1

n(cid:1)
j=1

where X is a vector (length n) of dependent variables, α and β
are vectors (length n) of non-negative rate constants and g and h
are matrices (n×n) of kinetic orders, that can be negative as well
as positive. The structure of the system is deﬁned by the non-zero
elements of g and h, and for realistic models most of these parameters
are zero.

To our knowledge, this is the ﬁrst article to address how to
best represent this kind of identiﬁcation problems as optimization
problems and to deﬁne a suitable ﬁle format. As far as we know, this
is also the ﬁrst collection of benchmark problems for ODE system
identiﬁcation, where both structure and parameters are unknown.

Another paper that recognizes the importance of systematic
evaluation of identiﬁcation algorithms, is Mendes et al. (2003),

782

which presents a system for generating realistic artiﬁcial gene
networks and simulated data, and a large number of problems
generated by this system. In comparison, our benchmark problems
are typically smaller and address the more speciﬁc need of
evaluating algorithms identifying both structure and parameters,
fully specifying problems as optimization problems. For parameter
estimation only, several benchmark problems are publicly available,
e.g. in the data base EASY-FIT (Schittkowski, 2002).

The two kinds of systems we consider, chemical rate equations
and S-systems, have previously been used for identiﬁcation of
ODE models as indicated by references in Table 1. In addition to
these kinds of systems, other ﬁxed forms have been considered in
the literature. One example is Generalized Mass Action (GMA)
models (Tucker et al., 2007; Voit, 2000), and another is linear
dynamical models with non-linear transfer functions of sigmoid
type (D’haeseleer, 2000; Nelander et al., 2008; Wahde and Hertz,
2000). However, at this stage, we have chosen to focus on the more
frequently used S-systems as one representative ﬁxed form system.
We ﬁnally note that identiﬁcation of ODEs where more basic
operands and operators are used as structural components have been
considered (Bongard and Lipson, 2007).

2 SPECIFYING IDENTIFICATION PROBLEMS AS

OPTIMIZATION PROBLEMS
identiﬁcation problems
We now outline how we deﬁne
mathematically. Our ﬁrst and most
important concern has
been that an identiﬁcation problem must be deﬁned unambiguously
as an optimization problem. This ensures that a problem has a well
deﬁned solution independently of any method for solving it, and
that the task of modelling identiﬁcation problems is separated from
the algorithmic task of solving given problems. It is to be noted

that if we fail to explicitly specify the entire problem, missing parts
have to be supplied by the user or be implicitly deﬁned by the
algorithm, resulting in confusion and lack of reproducibility.

Our second concern has been to ﬁnd a reasonably simple standard
form that can still represent a wide range of identiﬁcation problems.
We have then chosen the following way to structure and specify our
problems.

(cid:127) Data. Time series data for one or several experiments. In the
case of several experiments, they may differ with respect to
initial values of the variables and/or input functions. For each
data-point, the standard deviation is also given in the problem
speciﬁcation.

(cid:127) Model space. The model space determines the allowed form of

the right-hand side of the ODEs.
For models based on traditional chemical rate equations, each
ODE in the model is assumed to be a sum of a number of
reactions. The possible reactions must belong to a subset of
predeﬁned reaction types, where each allowed reaction type
is speciﬁed by its name, a subset of possible input variables
and ranges of allowed parameter values. The allowed reaction
types can be speciﬁed individually for each state variable.
As an example, in Figure 1B, the allowed reactions types
are a unimolecular mass action reaction, a Michaelis–Menten
reaction, and a simpliﬁed Hill equation. For reactions having
multiple input variables, e.g. a bimolecular mass action reaction
with equation k1XiXj, it is implicitly assumed that i and j are
not equal (to consider equality as in problem osc1 and osc2,
we deﬁne an additional reaction type k1X2
i ).
The model space of an S-system is simply deﬁned by lower and
upper bounds for each element in the parameter vectors (α and
β) and matrices (g and h). Sometimes, additional constraints
are required. For example, three of the benchmark problems
include an additional constraint of type {gi,j ∈[−3,3],gi,j (cid:5)=0}
(there is an interaction between variable i and j but the direction
is unknown).
Finally, we also deﬁne lower and upper bounds for the initial
data-point in each time series. For noisy data, these bounds were
set to ±2 SDs. Hence, for noisy data there is one additional
parameter for each time series, but
these parameters are
typically bound tighter compared with the model parameters.
(cid:127) Initial model. It is convenient to allow deﬁnition of an initial
model, corresponding to prior knowledge of the system.
The initial model is described as known reactions (terms) on
the right-hand side of the ODEs. Also reactions from outside
the model space can be included in the initial model.
In principle, one can also think of prior information in the
form of starting points for iterative algorithms and thus not
technically a part of the deﬁned problem. No such information
is assumed known in our current problems.
(cid:127) Error function. We have chosen to minimize

−L(ˆX|k)+λK.

(2)

The ﬁrst term is the negative log-likelihood of the experimental
data, and the second term is a term that penalizes structural
complexity of the model. This kind of error function is
common, and is related to several different proposed methods
for handling model complexity (Crampin et al., 2004).

Benchmarks for identiﬁcation of ODEs from time series data

In detail, L is the log-likelihood, ˆX denotes the experimental

data, k is a vector of parameters, λ is a constant and K is the
number of parameters. By assuming independent and normally
distributed measurement errors and disregarding constant terms
we can express the log-likelihood for one time series as

(cid:4)2

(cid:3)

(cid:2)

i

Xj(ti)− ˆXj(ti)

σj(ti)

L( ˆXj|k)=− 1

2

(3)

where i indexes the measurement points, and where Xj, ˆXj
and σj denotes simulated data, experimental data and SD
for variable j, respectively. The total log-likelihood L(ˆX|k) is

deﬁned by summing over all variables and all experiments.
For models based on chemical rate equations, K is simply the
total number of parameters on the right-hand side of the ODEs.
For S-systems, it is natural to deﬁne K as the total number of
non-zero elements in g and h plus the number of parameters in
α and β.

To establish the relationship with standard optimization
terminology, the model space and and the initial model deﬁne the
feasible set, and the data together with the error function deﬁne the
objective function.

2.1 File format for identiﬁcation problems
In order to work with identiﬁcation problems and to provide them
as input to identiﬁcation algorithms, we also need to represent such
problems in ﬁles, and it is highly desirable that an entire problem
can be represented in a single ﬁle. Since an identiﬁcation problem is
an optimization problem and not a model, common model formats
such as SBML are not applicable, and no existing format known
to us can be used for this purpose. However, the output of an
identiﬁcation algorithm is a model and can be represented in SBML.
Also, if a partially known initial model is available in SBML, an
identiﬁcation algorithm can input that part in SBML and the rest of
the identiﬁcation problem in our format.

The ﬁle format we have designed for the identiﬁcation problems
can be seen as a special case of a more general format that is
currently developed as a separate project. The format attempts to
be self documenting and easy to read both by the human and the
computer. Compared with a typical XML-equivalent, more structure
is explicit and it is easier to read. It bears some resemblance to how
data structures are built in a computer programme, but without the
explicit use of pointers. An extract of the format is given below:

{
// VARIABLES
variable_1 has name = x1 is inputVariable
variable_2 has name = x2 is inputVariable
variable_3 has name = x3 is dependent
...
// MODEL SPACE OF VARIABLE 3
possibleReaction_3 of variable_3
has type = biMolecularMassAction
has spaceOfVariable X1 = memberOfSet_2
has spaceOfVariable X2 = memberOfSet_1
has rangeOfParameter k1 = range_1
...

783

P.Gennemark and D.Wedelin

// EXPERIMENT 1
sample_1 of experiment_1
has time = 0.00
has variable_ =
has sdev of variable_ =
...}

3.00 2.00

...

0.00 0.00 ...

This particular extract describes ﬁrst some variables and then a
possible reaction in the model space. Finally, a sample from the ﬁrst
experiment is given.

The format can also be used to specify a parameter estimation
problem only. Method speciﬁc parameters (like random seed) can
be deﬁned in the same ﬁle or separately. Finally, we can easily
extend the format to describe new classes of problems, for example
with compartment modelling and system modiﬁcations like gene
deletions.

We anticipate that

the exact mathematical

the
identiﬁcation problems, as well as the ﬁle format, will be extended
over time. Up-to-date information and detailed documentation is
therefore available on the web site, as well as a simple parser for
the ﬁle format.

form of

3 THE COLLECTION OF BENCHMARK

PROBLEMS

An overview of the collection of benchmark problems is presented
in Table 1. The problems have different sources, and in most cases
several different problems are given for each system.

The number of variables in combination with the amount of data
and noise level, give a rough indication of the difﬁculty of each
problem. The ﬁrst problem for each system generally has a lower
level of difﬁculty than the subsequent problems, and is hence a good
starting point when evaluating new methods.

A part of the collection is based on identiﬁcation problems
considered in the literature, which is dominated by problems
based on S-systems, probably because these are relatively easy to
represent. By including translations of these problems that were
previously not easily accessible, the collection has an immediate
value for those actively developing algorithms in this area. However,
we balance the S-system dominance by also deﬁning new problems
based on traditional chemical reactions that are more frequently used
in the biological modelling community. We note that research in
this area is in an early stage, and in our experience identiﬁcation
algorithms for S-systems can relatively easily be modiﬁed for other
kinds of models. Our proposed way of specifying identiﬁcation
problems can then facilitate and contribute to a more widespread
use of problems based on other kinds of models.

For problems that have been collected and translated from another
publication, we have taken care to match the original problem
as closely as available information and the standardization to our
formalism allow, see the Supplementary Material for details. We
have replaced some non-standard objective functions with our
simple function, and relaxed a few unusual constraints. Noisy data
have been simulated from random distributions, and in one case we
have also reduced an excessive and unrealistic number of data-points
in the original problem. However, the solutions in the next section
conﬁrm that the changes have not negatively affected the quality
of the solutions when compared directly with the source models.
We note that our problems never have more data or a smaller model

784

space, so they are in this sense at least as difﬁcult as the original
problems.

3.1 Best known solutions
In Table 2 we report the best known solutions for all benchmark
problems, and we will now describe the detailed information in
the table. The solutions have been found using our own identiﬁcation
algorithm (Gennemark and Wedelin, 2007). All solution models as
well as source models are available in SBML on our web site.

For problems with noisy or otherwise insufﬁcient data, an optimal
solution has slightly different parameter values and sometimes also
different structure than the source model. To clarify this for our
solutions, Table 2 gives the error of the source model from which
data was simulated. We can see that for all problems based on
simulated data the found solutions have approximately equal or
lower error than that of the source model. We also give the number of
FP and FN interactions, to indicate if the found structure is the same
as the source model. If the structure is the same as for the source
model, we also give the largest deviation (LD) in percent for any
parameter compared with the source model. For the problems based
on real data, no source model is available, and no such comparisons
can be made.

For our algorithm, as well as for most algorithms in the literature,
the results may differ between runs depending on a random seed.
With our approach,
the main difference between runs is that
sometimes the best structure is not found due to the heuristic nature
of the search algorithm. However, for two solutions with the same
structure, the difference in the parameters is negligible for all tested
problems. To indicate the stability of the algorithm, we therefore
report the proportion of runs where the best structure was found.
Note, however, the fact that solutions are stable does not generally
imply that they are optimal.

Computation times are reported as the average computation time
for runs with different random seeds, scaled to a 1 GHz processor
(the actual runs were performed on a Pentium IV, 2.13 GHz). The
times can be improved by adjusting the method parameters for
individual problems, but we report the computation time using our
standard settings, see the Supplementary Material.

For the benchmark problems that have been adapted from
problems in the literature, the ﬁnal columns report available results
for these original problems.

In addition to the numerical details, Table 2 allows us to draw the

following qualitative conclusions about the benchmark problems.

(cid:127) Every problem with data from a known source model is well
formulated in the sense that the solution model is similar to the
source model, in terms of the FP/FN/LD values.

(cid:127) Every solution model is at least as similar to the source model
as any previously reported solution. This conﬁrms that the
translation to our standard format works well, and also that our
solutions are indeed the best known solutions to the benchmark
problems.

(cid:127) Every problem can be solved within hours on an ordinary
computer with our approach, so there is no need for
supercomputing. This was not previously established since
some previous results for the original problems required
running times of several months if run on a single processor.

Benchmarks for identiﬁcation of ODEs from time series data

Table 2. Best known solutions to the benchmark problems

Problem

Error of source
model −L+λK

Best known solutiona

Error−L+λK

Residual
−L

Structure
FP/FN/LD

Stability
between runs

8
187.4
7
45.46
7
18.39
6
122.1
30
1214
1442
39

14
14
498.9
17
17
17
17
211.3
18
23
300.3
23
23
23
23
23
28

62
2010
128
4098
128

simpleLin1
simpleLin2
simpleFb1
simpleFb2
simpleFb3
simpleFb4
osc1
osc2
metabol1
metabol2
metabol3
3genes1

ss_cascade1
ss_cascade2
ss_cascade3
ss_branch1
ss_branch2
ss_branch3
ss_branch4
ss_branch5
ss_branch6
ss_5genes1
ss_5genes2
ss_5genes3
ss_5genes4
ss_5genes5
ss_5genes6
ss_5genes7
ss_5genes8

ss_15genes1
ss_15genes2
ss_30genes1
ss_30genes2
ss_30genes3

cytokine1
cytokine2
ss_ethanolferm1
ss_ethanolferm2
ss_sosrepair1
ss_sosrepair2
ss_cadBA1
ss_cadBA2
ss_clock1
ss_clock2

8
140.2
7
42.14
7
7.071
6.149
87.34
30
751.6
861.1
39

14
14
476.7
17
17
17
17
142.1
18
23
211.0
23
23
23.00
23
23
28

62
1783
128
3628
128

25.92
42.17
127.4
1308
2642
2823
750.6
709.1
928.4
814.5

0/0/0
0/0/–
0/0/0
1/1/–
0/0/0
0/0/–
0/0/0
0/0/0
0/0/0
0/0/–
2/1/–
0/0/0

0/0/0
0/0/0
1/1/–
0/0/0
0/0/0
0/0/0
0/0/0
4/1/–
0/0/0
0/0/0
5/0/–
0/0/0
0/0/0
0/0/0.02
0/0/0
0/0/0
0/0/0

0/0/0
3/4/–
0/0/0
6/7/–
0/0/0

0
132.2
0
34.14
0
0.0713
0.1491
57.34
0
601.6
696.1
0

0
0
462.7
0
0
0
0
122.1
0
0
183.0
0
0
1.14E−3
0
0
0

0
1478
0
2993
0

17.92
32.17
110.4
1292
2611
2789
726.6
687.1
803.4
649.5

5/5
5/5
5/5
3/5
3/5
2/5
5/5
4/5
3/3
2/3
1/5b
3/3

5/5
4/5
1/5b
5/5
5/5
5/5
5/5
3/5
5/5
5/5
2/5b
5/5
5/5
5/5
5/5
5/5
5/5

5/5
2/5b
5/5
1/3b
3/3

1/5c
1/5c
1/5c
1/5c
1/5c
1/5c
1/5c
1/5c
1/5c
1/5c

Solution of original problem
(if available)

Structure
FP/FN/LD

Time (s)
(1 GHz)

0/0/–

–

–

–

0/0/300

8900

0/0/15
0/0/5
0/0/2
0/0/0
–
0/0/5
1/0/–

37/0/–
4/2/–
0/0/50
0/0/0.2
0/0/5
0/0/2.5

2200
35 000
15 000
25 000
–
1100
2.4E+8

40 000
7200
56 000
15 000
26 000
7000

242/10/–
0/0/25

6.2E+6
8.6E+6

–

err>127.4d

–

–

err>2642d

2.7E+5

err>750.6d

>540

–

15 000

Average
time (s)
(1 GHz)

17
86
14
36
41
47
18
24
5400
11 000
13 000
35 000

180
130
860
68
110
150
71
300
90
600
2100
380
640
400
130
190
440

1500
18 000
7900
94 000
18 000

11
23
190
360
510
470
250
260
360
440

aBest known solutions, based on comparsion to the solutions of the original problems. For ss_30genes2, the similarity with the source model strongly indicates that our solution is
the best, but since we do not have access to the solution of the original problem this is not conﬁrmed.
b The majority of runs have an error below the error of the source model, but differ slightly in structure.
cReal datasets with relatively few experiments and/or data-points making many similar models reasonable, increasing the variability in found solutions.
dSince no source model is available, we have evaluated the original solution with our error function, and it has an error higher than our solution.
The error of the source model refers to the error of the model from which data was simulated. The best result is taken from several runs with various random seeds. The error,
the negative log-likelihood and the number of false positives and negative (FP/FN) reactions are reported. Stability measures the frequency of runs for which the best structure is
obtained. Computation time in seconds is given as the average of several runs.

785

P.Gennemark and D.Wedelin

4 CONCLUSIONS
We have proposed a way to unambiguously specify ODE
identiﬁcation problems as mathematical optimization problems, and
have also deﬁned a ﬁle format making it easy to document and
exchange such problems.

The benchmark problems include translations of problems that
have been frequently used in the development of algorithms, as well
as new problems based on chemical rate equations. The problems,
their best solutions and the source models from which problem data
was simulated are all available on our web site. This makes it easy
for everyone to evaluate and compare algorithms in a reproducible
way. To maintain a useful collection of problems of various types,
we intend to extend the collection, and are interested in contributions
and feedback from others, see the web site.

Finally, our own solutions show that all the benchmark problems
can be solved in reasonable time, in contrast to results for some of
the original problems where supercomputing was required.

ACKNOWLEDGEMENTS
Thanks to Sven Nelander (MSKCC) and the reviewers for valuable
comments.

Funding: Chalmers Bioscience
Mathematical Modelling Centre.

Conﬂict of Interest: none declared.

Program and Göteborg

REFERENCES
Arkin,A.P. and Ross,J. (1995) Statistical construction of chemical reaction mechanisms

from measured time-series. J. Phys. Chem., 99, 970–979.

Barrett,T. et al. (2005) NCBI GEO: mining millions of expression proﬁles–database

and tools. Nucleic Acids Res., 33, D562-D566.

Gonzalez,O.R. et al. (2007) Parameter estimation using Simulated Annealing for

S-system models of biochemical networks. Bioinformatics, 23, 480–486.

Hlavacek,W.S. and Savageau,M.A. (1996) Rules for coupled expression of regulator

and effector genes in inducible circuits. J. Mol. Biol., 255, 121–139.

Karnaukhov,A.V. et al. (2007) Numerical Matrices Method for nonlinear system
identiﬁcation and description of dynamics of biochemical reaction networks.
Biophys. J., 92, 3459–3473.

Kikuchi,S. et al. (2003) Dynamic modeling of genetic networks using genetic algorithm

and S-system, Bioinformatics, 19, 643–650.

Kimura,S. et al. (2005) Inference of S-system models of genetic networks using a

cooperative coevolutionary algorithm. Bioinformatics, 21, 1154–1163.

Kuper,C. and Jung,K. (2005) CadC-mediated activation of the cadBA promoter in

Escherichia coli. J. Mol. Microbiol. Biotechnol., 10, 26–39.

Kutalik,Z. et al. (2007) S-system parameter estimation for noisy metabolic proﬁles

using newton-ﬂow analysis. IET Syst. Biol., 1, 174–180.

Liu,P.K. and Wang,F.S. (2008) Inference of biochemical network models in S-system

using multiobjective optimization approach. Bioinformatics, 24, 1085–1092.

Maki,Y. et al. (2001) Development of a system for the inference of large scale genetic

networks. Pac. Symp. Biocomput., 446–458.

Marino,S. and Voit,E.O. (2006) An automated procedure for the extraction of metabolic
network information from time series data. J. Bioinform. Comput. Biol., 4, 665–691.
McKinney,B.A. et al. (2006) Hybrid grammar-based approach to nonlinear dynamical
system identiﬁcation from biological time series. Phys. Rev. E. Stat. Nonlin. Soft
Matter Phys., 73, 021912.

Mendes,P. et al. (2003) Artiﬁcial gene networks for objective comparison of analysis

algorithms. Bioinformatics, 19 (Suppl. 2), ii122–ii129.

Moles,C.G. et al. (2003) Parameter estimation in biochemical pathways: a comparison

of global optimization methods. Genome Res., 13, 2467–2474.

Nelander,S. et al. (2008) Models from experiments: combinatorial drug perturbations

of cancer cells. Mol. Syst. Biol., 4, 216.

Rock,M.T. et al. (2004) Adverse events after smallpox immunizations are associated

with alterations in systemic cytokine levels. J. Infect Dis., 189, 8.

Ronen,M. et al. (2002) Assigning numbers to the arrows: parameterizing a gene
regulation network by using accurate expression kinetics. Proc. Natl Acad. Sci.
USA., 99, 10555–10560.

Savageau,M.A. (1976) Biochemical systems analysis: a study of function and design in

molecular biology. Addison-Wesley, Reading, MA.

Schittkowski,K. (2002) Numerical data ﬁtting in dynamical systems: a practical
introduction with applications and software. In Applied Optimization. Donald,H.
and Pardalos,P.M. (eds.), vol. 77. Kluwer Academic, Dordrecht.

Bongard,J. and Lipson,H. (2007)Automated reverse engineering of nonlinear dynamical

Tsai,K.Y. and Wang,F.S. (2005) Evolutionary optimization with data collocation for

systems. Proc. Natl Acad. Sci. USA, 104, 9943–9948.

reverse engineering of biological networks. Bioinformatics, 21, 1180–1188.

Cho,D.Y. et al. (2006) Identiﬁcation of biochemical networks by S-tree based genetic

Tucker,W. and Moulton,V. (2006) Parameter reconstruction for biochemical networks

programming. Bioinformatics, 22, 1631–16340.

using interval analysis, Reliable Computing, 12, 389–402.

Chou,I.C. et al. (2006) Parameter estimation in biochemical systems models with

Tucker,W. et al. (2007) Estimating parameters for generalized mass action models using

alternating regression. Theor. Biol. Med. Model, 3, 25.

constraint propagation. Math. Bioscience, 208, 607–620.

Crampin,E.J. et al. (2004) Mathematical and computational techniques to deduce
reaction mechanisms. Prog. Biophy. Mol. Biol., 86,

complex biochemical
77–112.

Voit,E.O.

(2000) Parameter estimation. Computational Analysis of Biochemical
Systems. A Practical Guide for Biochemists and Molecular Biologists. Cambridge
University Press, Cambridge, pp. 176–184.

Daisuke,T. and Horton,P. (2006) Inference of scale-free networks from gene expression

Voit,E.O. and Almeida,J.

(2004) Decoupling dynamical systems for pathway

time series. J. Bioinform. Comput. Biol., 4, 503–514.

identiﬁcation from metabolic proﬁles. Bioinformatics, 20, 1670–1681.

D’haeseleer,P. (2000) Reconstructing Gene Networks from Large Scale Gene Expression

Wahde,M. and Hertz,J. (2000) Coarse-grained reverse engineering of genetic regulatory

Data. PhD Thesis. University of New Mexico, Albuquerque, NM, USA.

networks. Biosystems, 55, 129–136.

Gennemark,P. and Wedelin,D. (2007) Efﬁcient algorithms for ordinary differential
IET Syst. Biol., 1,

identiﬁcation of biological

systems.

equation model
120–129.

Wang,F.S. et al. (2001) Hybrid differential evolution for problems of kinetic parameter
estimation and dynamic optimization of an ethanol fermentation process. Ind. Eng.
Chem. Res., 40, 2876–2885.

786

