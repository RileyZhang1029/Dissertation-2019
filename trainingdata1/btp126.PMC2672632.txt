BIOINFORMATICS APPLICATIONS NOTE Vol. 25 no. 9 2009, pages 1203–1204

doi:10.1093/bioinformatics/btp126

Gene expression
The tspair package for ﬁnding top scoring pair classiﬁers in R
Jeffrey T. Leek
Department of Oncology, Johns Hopkins School of Medicine, Baltimore, MD 21287, USA
Received on January 11, 2009; revised on February 16, 2009; accepted on March 1, 2009
Advance Access publication March 10, 2009
Associate Editor: Joaquin Dopazo

ABSTRACT
Summary: Top scoring pairs (TSPs) are pairs of genes whose
relative rankings can be used to accurately classify individuals into
one of two classes. TSPs have two main advantages over many
standard classiﬁers used in gene expression studies: (i) a TSP is
based on only two genes, which leads to easily interpretable and
inexpensive diagnostic tests and (ii) TSP classiﬁers are based on
gene rankings, so they are more robust to variation in technical
factors or normalization than classiﬁers based on expression levels
of individual genes. Here I describe the R package, tspair, which
can be used to quickly identify and assess TSP classiﬁers for gene
expression data.
Availability: The R package tspair is freely available from
Bioconductor: http://www.bioconductor.org
Contact: jtleek@jhu.edu

1 INTRODUCTION
Classiﬁcation of patients into disease groups or subtypes is the
most direct way to translate microarray technology into a clinically
useful tool (Quackenbush, 2006). A small number of tests based on
microarrays have even been approved for clinical use, for example,
for diagnosing breast cancer subtypes (Ma et al., 2004; Marchionni
et al., 2008; Paik et al., 2004; van’t Veer et al., 2002). But standard
microarray classiﬁers are based on complicated functions of many
gene expression measurements. This type of classiﬁer is both hard
to interpret and depends critically on the platform, pre-processing
and normalization steps to be effective (Quackenbush, 2006).
Identifying biologically interpretable, robust and cheap classiﬁers
based on small subsets of genes would greatly speed progress in the
development of clinical tests from microarray experiments.

Top scoring pairs (TSPs) are pairs of genes that accurately classify
patients into clinically relevant groups based on their ranks (Geman
et al., 2004; Tan et al., 2005; Xu et al., 2005). The basic idea is to
search among all pairs of genes, and look for genes whose ranking
most consistently switches between two groups. To understand
how the classiﬁcation scheme works, consider the simulated gene
expression data in Figure 1. In this ﬁgure there are two groups of
arrays, separated by the black line. These groups could represent
healthy patients versus cancer patients, or two distinct subtypes of
cancer. For all but one array in Group 1, Gene 1 has higher expression
than Gene 2, and the reverse is true in Group 2. In this case, Genes
1 and 2 form a classiﬁer based on their relative levels of expression.
A new sample where the gene expression for Gene 1 was higher than
the gene expression for Gene 2 would be classiﬁed as Group 1.

Gene 1
Gene 2

i

n
o
s
s
e
r
p
x
E

Array

Fig. 1. An Example of a TSP. In this simulated example, the expression for
Gene 1 is higher than the expression for Gene 2 for almost all of the arrays
in the group on the left and this relationship reverses for the group on the
right.

The TSP approach has been successfully applied to identify
subtypes of sarcoma, resulting in a RT-PCR-based test that correctly
classiﬁed 20 independent tumors with perfect accuracy (Price et al.,
2007). This early success suggests that it may be possible to identify
TSP classiﬁers for other important diseases and quickly develop new
inexpensive diagnostic tests.

2 THE TSPAIR PACKAGE
Calculating the TSP for a gene expression dataset is relatively
straightforward, but computationally intensive. I have developed an
R package tspair that can rapidly calculate the TSP for typical
gene expression datasets, with tens of thousands of genes. The
TSP can be calculated both in R or with an external C function,
which allows both for rapid calculation and ﬂexible development
of the tspair package. The tspair package includes functions
for calculating the statistical signiﬁcance of a TSP by permutation
test, and is fully compatible with Bioconductor expression sets.
The R package is freely available from the Bioconductor web site
(www.bioconductor.org).

3 AN EXAMPLE SESSION
Here I present an example session on a simple simulated dataset
included in the tspair package. I calculate the TSP, assess the
strength of evidence for the classiﬁer with a permutation test, plot
the output and show how to predict outcomes for a new dataset.
The main function in the tspair package is tspcalc(). This
function accepts either (i) a gene expression matrix or an expression
set and a group indicator vector, or (ii) an expression set object and
a column number, indicating which column of the annotation data
to use as the group indicator. The result is a tsp object which gives

 2009 The Author(s)
This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/
by-nc/2.0/uk/) which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.

[12:51 31/3/2009 Bioinformatics-btp126.tex]

Page: 1203

1203–1204

J.T.Leek

Groups: healthy = Grey | disease = Black; Score: 0.64

i

n
o
s
s
e
r
p
x
E
8
3
3
e
n
e
G

 

 
:

e
n
e
G

2

1

0

1
−

2
−

−2

−1

0

1

2

3

Gene: Gene5 Expression

Fig. 2. A TSP plot. A TSP plot for the simulated data example in the
tspair package. The colors indicate the true groups, and the black line
indicates the TSP classiﬁcation. The black line is the line where expression
for ‘Gene 5’equals the expression for ‘Gene 338’; the classiﬁcation boundary
is not data-driven, it is set in advance.

the TSP score, indices, gene expression data and group labels for
the TSP. If there are multiple pairs that achieve the top score, then
the tie-breaking score developed by Tan et al. (2005) is reported.

> library(tspair)
> data(tspdata)
> tsp1 <- tspcalc(eSet1,1)
> tsp1
tsp object with: 1 TSPs
Pair:
TSP 1 :

TSP Score

0.64

Tie-Breaker
NA

Indices
5 338

The function tspsig() can be used to calculate the signiﬁcance
of a TSP classiﬁer by permutation as described in Geman et al.
(2004). The class labels are permuted, a new TSP is calculated
for each permutation, and the null scores are compared with the
observed TSP score to calculate a P-value. Since the maximum score
is calculated for each null permutation, tspsig() performs a test
of the null hypothesis that no TSP classiﬁer is better than random
chance.

> sig1 <- tspsig(eSet1,1, B = 50, seed = 12355)

|2%

|20%

|40%

|60%

|80%

|100%

Progress: |||||||||||||||||||||||||||||||||||||||||||||
> sig1$p
[1] 0.3529412

Once a TSP has been calculated, the tspplot() function can be
used to visualize the classiﬁer. The resulting TSP ﬁgure (Fig. 2) plots
the expression for the ﬁrst gene in the pair versus the expression for
the second gene in the pair. The true group difference is indicated by
the color of the points, and the score for the TSP classiﬁer is shown
in the title of the plot. The black 45
line indicates the classiﬁcation
from the TSP; the better the black line separates the colors the better
the accuracy of the TSP.

◦

> tspplot(tsp1)
Number of TSPs: 1
TSP 1

A major advantage of the TSP approach is that predictions are
very simple and can be easily calculated either by hand or using the

1204

built-in functionality of the tspair package. In this example, the
expression value for ‘Gene5’ is greater than the expression value
for ‘Gene338’ much more often for the diseased patients. In a
new dataset, when the expression for ‘Gene5’ is greater than the
expression for ‘Gene338’ I predict that the patient will be diseased.
The tspair package can be used to predict the outcomes of
new samples based on new expression data. The new data can
take the form of a new expression matrix, or an expression set object.
The R function predict() searches for the TSP gene names from
the original tspcalc() function call, and based on the row names
or featureNames of the new dataset identiﬁes the genes to use
for prediction. If multiple TSPs are reported, the default is to predict
with the TSP achieving the top tie-breaking score (Tan et al., 2005),
but the user may also elect to use a different TSP for prediction.

> dat2out <- predict(tsp1,dat2)
> indicator <- dat2["Gene5",] < dat2["Gene338",]
> table(indicator,dat2out)

dat2out

indicator diseased healthy
9
0

FALSE
TRUE

0
11

In this example, the predict() function ﬁnds the genes with
labels ‘Gene5’ and ‘Gene338’ in the second dataset and calculates
the TSP predictions based on the values of these two genes. The new
data matrix need not be deﬁned by a microarray, it could easily be
the result of RT-PCR or any other expression assay, imported into R
as a tab-delimited text ﬁle.

ACKNOWLEDGEMENTS
The author acknowledges the useful discussions with Giovanni
Parmigiani, Leslie Cope, Dan Naiman and Don Geman.

Funding: National Science Foundation (DMS034211); National
Institutes of Health (1UL1RR025005-01).

Conﬂict of Interest: none declared.

REFERENCES
Geman,D. et al. (2004) Classifying gene expression proﬁles from pairwise mRNA

comparisons. Stat. Appl. Genet. Mol. Biol., 3.

Ma,X.J. et al. (2004) A two-gene expression ratio predicts clinical outcome in breast

cancer patients treated with tamoxifen. Cancer Cell, 5, 607–616.

Marchionni,L. et al. (2008) Systematic review: gene expression proﬁling assays in

early-stage breast cancer. Ann. Inter. Med., 148, 358–369.

Paik,S. et al. (2004) A multigene assay to predict recurrence of tamoxifen-treated,

node-negative breast cancer. N. Engl. J. Med., 351, 2817–2826.

Price,N.D. et al. (2007) Highly accurate two-gene classiﬁer for differentiating
gastrointestinal stromal tumors and leiomyosarcomas. Proc. Natl Acad. Sci. USA,
104, 3414–3419.

Quackenbush,J. (2006). Microarray analysis and tumor classiﬁcation. N. Engl. J. Med.,

354, 2463–2472.

Tan,A.C. et al. (2005) Simple decision rules for classifying human cancers from gene

expression proﬁles. Bioinformatics, 21, 3896–3904.

van’t Veer,L.J. et al. (2002) Gene expression proﬁling predicts clinical outcome of

breast cancer. Nature, 415, 530–536.

Xu,L. et al. (2005) Robust prostate cancer marker genes emerge from direct integration

of inter-study microarray data. Bioinformatics, 21, 3905–3911.

[12:51 31/3/2009 Bioinformatics-btp126.tex]

Page: 1204

1203–1204

