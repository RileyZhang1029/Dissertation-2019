Bioinformatics, 31, 2015, i258–i267
doi: 10.1093/bioinformatics/btv233
ISMB/ECCB 2015

Inferring models of multiscale copy number
evolution for single-tumor phylogenetics
Salim Akhter Chowdhury1,2, E. Michael Gertz3, Darawalee Wangsa4,
Kerstin Heselmeyer-Haddad4, Thomas Ried4, Alejandro A. Scha¨ ffer3,
and Russell Schwartz2,5,*

1Joint Carnegie Mellon/University of Pittsburgh PhD Program in Computational Biology, Pittsburgh, PA, USA,
2Computational Biology Department, Carnegie Mellon University, Pittsburgh, PA, USA, 3Computational Biology
Branch, National Center for Biotechnology Information, U.S. National Institutes of Health, Bethesda, MD, USA,
4Section of Cancer Genomics, Genetics Branch, Center for Cancer Research, National Cancer Institute, U.S.
National Institutes of Health, Bethesda, MD, USA and 5Department of Biological Sciences, Carnegie Mellon
University, Pittsburgh, PA, USA

*To whom correspondence should be addressed.

Abstract

Motivation: Phylogenetic algorithms have begun to see widespread use in cancer research to re-
construct processes of evolution in tumor progression. Developing reliable phylogenies for tumor
data requires quantitative models of cancer evolution that include the unusual genetic mechanisms
by which tumors evolve, such as chromosome abnormalities, and allow for heterogeneity between
tumor types and individual patients. Previous work on inferring phylogenies of single tumors by
copy number evolution assumed models of uniform rates of genomic gain and loss across different
genomic sites and scales, a substantial oversimpliﬁcation necessitated by a lack of algorithms and
quantitative parameters for ﬁtting to more realistic tumor evolution models.
Results: We propose a framework for inferring models of tumor progression from single-cell gene
copy number data, including variable rates for different gain and loss events. We propose a new
algorithm for identiﬁcation of most parsimonious combinations of single gene and single chromo-
some events. We extend it via dynamic programming to include genome duplications. We
implement an expectation maximization (EM)-like method to estimate mutation-speciﬁc and
tumor-speciﬁc event rates concurrently with tree reconstruction. Application of our algorithms to
real cervical cancer data identiﬁes key genomic events in disease progression consistent with prior
literature. Classiﬁcation experiments on cervical and tongue cancer datasets lead to improved pre-
diction accuracy for the metastasis of primary cervical cancers and for tongue cancer survival.
Availability and implementation: Our software (FISHtrees) and two datasets are available at ftp://
ftp.ncbi.nlm.nih.gov/pub/FISHtrees.
Contact: russells@andrew.cmu.edu
Supplementary information: Supplementary data are available at Bioinformatics online.

1 Introduction

Tumor development and progression are evolutionary processes
(Nowell, 1976), and it has become ever more apparent that evolu-
tion is fundamental to public health problems in cancer treatment,
such as the failure of therapy due to drug resistance (Fisher et al.,
2013). The evolutionary nature of cancers prompted the observation
that one might reconstruct cancer progression processes using meth-
ods from phylogenetics,
i.e. evolutionary tree-building (Desper

et al., 1999). Cancer phylogenetics was initially applied at the level
of populations of cancers by modeling individual aberrations, indi-
vidual tumors or tumor types as species (Desper et al., 1999, 2000;
Liu et al., 2009). Later, variants were developed to study evolution
of single tumors at the regional (Sprouffske et al., 2011) or cellular
(Pennington et al., 2007; Martins et al., 2012) levels. Phylogenetic
models have proven valuable for distinguishing driver genes from
passengers
explaining intra-tumor

in tumor genomic data,

i258
VC The Author 2015. Published by Oxford University Press.
This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/4.0/),
which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact
journals.permissions@oup.com

Inferring models of multiscale copy number evolution for single-tumor phylogenetics

i259

heterogeneity (Marusyk and Polyak, 2010), and predicting future
tumor progression (Urbschat et al., 2011). See (Beerenwinkel et al.,
2015) for a recent review.

Although the idea of adapting methods for reconstructing species
evolution to the study of tumors has proven powerful, the analogy
has limits because single cells in a tumor evolve differently from or-
ganisms within a population. For example, cancers typically exhibit
hypermutability, which can take the form of any of a number of
known ‘mutator phenotypes’, each with a distinct pattern of ele-
vated mutation rates (Loeb, 1991). The most recognized of these is a
pattern of chromosome instability (CIN) arising from dysfunction of
TP53 (Greenblatt et al., 1994). Other known sources of hypermut-
ability include microsatellite instability (MSI) resulting from defects
in DNA mismatch repair (Timmermann et al., 2010) and elevated
point mutation rates resulting from DNA polymerase defects (Di
Noia and Neuberger, 2007) or AID/APOBEC1 cytidine deaminase
dysregulation (Harris et al., 2002). These mutator phenotypes result
in mechanisms of genomic diversification different from those gener-
ally assumed in species tree inference. For example, CIN hypermut-
ability results in evolution primarily via copy number variations,
requiring mathematical models and algorithms different from those
generally used to study species evolution.

Although much is known about the specialized molecular mech-
anisms behind tumor evolution, work in tumor phylogenetics has
largely relied on conventional phylogeny algorithms designed for
inferring species evolution (Beerenwinkel et al., 2015). In recent
work, we sought to address this gap by developing phylogenetic al-
gorithms specifically to infer evolution by cancer-like CIN mechan-
isms of copy number variation (Chowdhury et al., 2013, 2014).
Even appropriate algorithms for tumor-like mechanisms of evolu-
tion are not enough to generate reliable trees, though, because
phylogenetics relies on accurate estimates of relative frequencies of
different evolutionary events to decide between distinct possible ex-
planations of extant genomes. Given the heterogeneity of mutator
phenotypes and the many ways they might interact in single tumors,
rates of different types of aberrations can be expected to vary widely
between tumor types, between individual tumors, or even between
clonal lineages of single tumors.

There has been limited work to date to estimate evolutionary
parameters of tumors, none to our knowledge scalable to the num-
bers of taxa seen in large single-cell datasets such as are considered
in the present work. Approaches using rate parameters for different
events have been applied to comparative genomic hybridization data
outside the context of phylogenetic algorithms (e.g. Hjelm et al.,
2006; Newton, 2002) and several groups proposed estimating rates
via maximum likelihood from bulk sequencing data from different
sections of a tumor (Greenman et al., 2010; Purdom et al., 2013), al-
though not for data on multiple single cells. Maley and colleagues
(Sprouffske et al., 2011) have inferred tumor evolution parameters
at a regional level by using Bayesian phylogeny models to fit phylog-
enies to profiles of small numbers of
tumor regions. Similar
Bayesian models are typically favored in phylogenetics practice for
small numbers of taxa, due to their ability in principle to provide de-
tailed samples of tree and parameter space for complex evolutionary
models. However, the cost of computing such models grows quickly
in the number of taxa (Felsenstein, 2004). Even with very efficient
approximate Bayesian computation (ABC) algorithms (Beaumont,
2010), such approaches have been used only for small numbers of
sections (approximately 10–20) per tumor.

Fluorescence in situ hybridization (FISH) allows one to probe
copy numbers of small numbers of genomic markers in thousands of
single cells per study, and such studies have shown that single

tumors can have hundreds of genetically distinct cell types (Snuderl
et al., 2011; Szerlip et al., 2012; Heselmeyer-Haddad et al., 2012).
Large-scale single-cell sequencing studies, which offer a much more
complete picture of the genome than FISH but for many fewer cells,
have supported this view of extensive intercellular heterogeneity at
the cellular level (Wang et al., 2014), suggesting that tumor phyl-
ogeny approaches and their underlying models will need to scale to
hundreds or thousands of taxa per tumor to produce reliable models
of the evolution of cellular heterogeneity in single tumors. To date,
phylogenetic model inference with event rate estimation on compar-
able numbers of single cells has, to our knowledge, been achieved
only for specialized datasets involving just two probes per cell
(Pennington et al., 2007).

In the present work, we address the need for algorithms for evo-
lutionary model inference for tumor phylogenetics capable of han-
dling large single-cell datasets, with specific application to FISH
copy number data. We build on prior work of our group on max-
imum parsimony inference using a multiscale model of genomic
copy number variation (Chowdhury et al., 2014) by replacing an un-
weighted formulation of the problem with a weighted version for
which we can then infer rate parameters. Our major theoretical re-
sults include algorithms, substantially different from prior methods
(Chowdhury et al., 2014), to construct weighted parsimonious se-
quences of single gene gains/losses, whole chromosome gains/losses,
and whole genome duplications so as to infer the distance between
configurations of gene copy numbers between any pair of cells.
These new methods allow us to infer trees from models of distinct
evolutionary rates of gain or loss for different genes and at different
scales within a genome. We use these tree inferences with an expect-
ation maximization (EM)-like (Dempster et al., 1977) model infer-
ence method to combine estimation of the gain/loss rates jointly
with inference of tumor progression models. We apply this collec-
tion of novel algorithms to cervical and tongue cancer datasets of
hundreds of single cells per tumor, although they can be expected to
scale to orders of magnitude larger datasets as they become avail-
able. We show that the resulting models lead to improved power to
predict tumor progression and patient survival relative to prior
methods. Our new methods are implemented in our software,
FISHtrees, for which Cþþ source code and two datasets are avail-
able at ftp://ftp.ncbi.nlm.nih.gov/pub/FISHtrees.

2 Methods

FISH data obtained from tumor cells consist of integer counts of a
set of d copy-number probes per cell gi for i ¼ 1; . . . ; d. Typically,
each probe is used to count the copy number of a particular gene, so
we refer to gi as genes. We refer to an ordered collection of copy-
number counts observable within a cell as a configuration. In the ac-
tual data, we restrict counts to be between LB¼ 0 and UB¼ 9.

Between any two configurations, there are one or more muta-
tional paths. We assume that mutations may result in gain/loss of
single genes (SD), gain/loss of one copy of each gene on a common
chromosome (CD) and duplication of all genes in the full genome
(GD). SD gain/loss events for each gene, CD gain/loss events for
each chromosome, and GD events are each assigned a distinct prob-
ability parameter. Forming a phylogenetic tree based on FISH data
involves three tasks: estimating probabilities of each type of event;
using the estimated probabilities to efficiently estimate the max-
imum likelihood path between pairs of configurations; and finding
an approximate maximum-likelihood phylogenetic tree, possibly

i260

S.A.Chowdhury et al.

containing Steiner nodes that represent unobserved or extinct
configurations.

2.1 Estimating rate parameters
We apply an EM-like algorithm, presented as Algorithm 1, to
identify the probability of each possible SD, CD and GD event. We
initialize the method with uniform probability estimates, effectively
leading to unweighted parsimony. Then, at each iteration of the al-
gorithm, we infer a maximum likelihood directed Steiner tree
(applying Algorithm 2) using the parameter values inferred at the
previous iteration. We treat this as the E-step of the algorithm. This
step is simplified relative to strict EM in that it uses a single optimal
model fit, rather than an expectation over the solution space in the
E-step as in our prior work (Pennington et al., 2007), but should
yield comparable results to true EM in the limit of large numbers of
tree edges. In the M-step, we then update the parameter values for
each event based on the fraction of times that event is inferred across
the tree edges, with the addition of a pseudocount of 1 (line 7) to ac-
count for events with inferred counts of zero.

2.2 Constructing a phylogenetic tree
In Algorithm 1, the E-step involves generating phylogenetic trees via
calls to a heuristic median-joining-based algorithm for inference of
Steiner nodes in the tumor phylogenies. The key steps of this tree-
building algorithm are summarized in Algorithm 2. The code first
builds a directed minimum spanning tree (MST) T based on the
observed cell types. As in standard median-joining (Bandelt et al.,
1999), it uses a heuristic strategy to solve the hard problem of infer-
ring unobserved Steiner nodes by seeking to identify triplets of taxa
that can be more parsimoniously

Algorithm 1. Infer the rates of SD, CD and GD events using
statistics from tumor phylogenies. The
GenerateSteinerTree() routine uses Algorithm 2 to infer
Steiner trees based on the set of cell states and parameter val-
ues. The vector p contains the current estimate of the proba-
bilities of each mutation type, initialized with uniform rates in
the present work. N represents the set of nodes in the most
recently computed Steiner tree; initially, it is the set of conﬁg-
urations in the observed data. The positive value e is a con-
vergence tolerance, and max iter is the maximum number of
iterations. The algorithm returns an updated vector p of esti-
mated mutation probabilities and ﬁnal inferred phylogeny T
on the input taxa N and any inferred Steiner taxa using the
weights from the inferred p.

function EstimateParameters(N , p, e, max iter)

T   GenerateSteinerTreeðN ; pÞ
N   nodesðT Þ
for k   1; max iter do
X

c   EdgeTypeCountsðT Þ
q   p
X
pi   ð1 þ ciÞ=
if

jpi   qij  e) then

j

ð1 þ cjÞ for i ¼ 1; lengthðcÞ

T   GenerateSteinerTreeðN ; pÞ
N   nodesðT Þ

1:
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:
return p, T
13:
14: end function

else

i

break

connected by positing an unobserved ‘median’ taxon sitting between
them. Algorithm 2 iterates over each node triplet in T for which one
node is the parent of the other two nodes in order to identify these
median Steiner nodes that reduce tree cost. We define the lattice
points of a triplet to be the set of configurations that agree in each
dimension with at least one of the triplet. Each lattice point is con-
sidered in arbitrary order as a possible Steiner node. If a lattice point
is not already in T , a new tree, called the median tree, is created by
adding that lattice point as a node and by connecting it via three
edges with one incoming edge and two outgoing edges. If the result-
ing weight, calculated as explained in the following subsection, is
less than the weight of the previous best tree, the lattice point is
added to the tree. The best tree found by this procedure is returned.

Algorithm 2. Main steps in the algorithm to generate tumor
progression trees with particular rates for each of the SD, CD
and GD events. N is a set of conﬁgurations that must be
nodes of the generated tree. The vector p contains the prob-
ability of each type of mutation. The algorithm returns an
inferred phylogeny T for the given inputs N and p.

function GenerateSteinerTree(N , p)

T   DirectedMSTðN ; pÞ
best   TreeLikelihoodðT ; pÞ
for all ðu; v; wÞ   TripletsðT Þ do

for all s   LatticePointsðu; v; wÞ do

if s =2T then

N þ   nodesðT Þ [ fsg
U   DirectedMSTðN þ
if TreeLikelihood(U; pÞ > best then

; pÞ

best   TreeLikelihoodðU; pÞ
T   U

1:
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
return T
12:
13: end function

2.3 Likelihood estimation
Although the basic median-joining strategy can be adapted to this ap-
plication as a way of heuristically solving the hard problem of Steiner
node inference, that strategy still depends on having a way to accur-
ately estimate likelihoods and reconstruct likely paths of mutations
between pairs of taxa. This latter task is very different for our model
of copy number mutation than for more conventional character-based
phylogenetics and requires novel theory and algorithms. The bulk of
our theoretical conributions are directed to this sub-problem of find-
ing minimum-weight paths between arbitrary pairs of taxa. We pre-
sent here novel algorithms specifically for estimating the likelihood of
the minimum weight SDþ CDþ GD path between two configur-
ations. Due to space limitations, proofs of correctness of all of the
claims in this section are deferred to Supplementary Materials.

In developing likelihood estimation algorithms, it is both concep-
tually and computationally easier to work with edge weights rather
than edge probabilities. The weight w of an edge is related to the
probability p of the event inferred across that edge by the formula
w¼ log p. Edge weights are additive, and the task of finding a
maximum likelihood path or tree is equivalent to the task of finding
a minimum weight path or tree.

The process of finding minimum-weight SDþ CDþ GD paths is
presented at a high level as Algorithm 3. The algorithm works in
three steps. First, in the function DoublingPath, we calculate the
shortest-length SDþ GD path between configurations Cs and Ct for

Inferring models of multiscale copy number evolution for single-tumor phylogenetics

i261

paths having k ¼ 0; . . . ; m genome duplication events. Each of these
paths defines a set of zero or more genome duplication points, con-
figurations at which a genome duplication occurred. Second, in the
function OnePathCost, we connect the endpoint of each genome
duplication point with the start point of the next, or with Ct for the
last genome duplication, using minimum-weight SDþ CD paths,
computed using Algorithm 5. In the third and final step, at line 2,
we choose the lowest-weight of these mþ 1 SDþ CDþ GD paths;
ties are irrelevant because we only need the path’s weight.

Algorithm 3. CalculateMinCost returns the minimum cost
of converting a copy number proﬁle Csðg1; . . . ; gdÞ to another
copy number proﬁle Ctðg1; . . . ; gdÞ using combinations of SD,
CD and GD events. Ds;ch
SDþ CD path, as computed by Algorithm 5. B is a table pro-
viding duplication points of minimum-weight SDþ GD paths,
derived by calling Algorithm 4.

w provides the minimum cost of an

ð

f

Þj k   0; mg

cost   0
for each set ðgq; . . . ; grÞ on the same chromosome do

path   DoublingPathðB; k; Cs; Ct; gq; . . . ; grÞ
for i   1; k þ 1 do

function CalculateMinCost(Cs; Ct; B)

return min OnePathCost Cs; Ct; B; k

end function
function OnePathCost(Cs; Ct; B; k)

1:
2:
3:
4:
5:
6:
7:
8:
9:
10:
11: end function
12: function DoublingPath(B, k, Cs; Ct, gq, . . . , gr)
13:
14:
15:
16:
17:
18: end function

i   pathð1; pÞ   Cs gpþq 1
j   pathðk þ 2; pÞ   Ct gpþq 1
for ‘   k þ 1 downto 2 do

j   pathð‘; pÞ   Bði; j; ‘   1Þ

for p   1; r   q þ 1 do

cost   cost þ Ds;ch

w pathði;Þ; pathði þ 1;Þ
Þ

return cost

 



 



ð

2.4 Finding shortest-length SD 1 GD paths
The function DoublingPath within Algorithm 3 is handled largely
via a preprocessing step by which we construct a table of paths of
mutation of single genes indexed by starting and ending copy num-
bers and numbers of whole-genome duplication events. This table is
passed via the input B to Algorithm 3. For two configurations, and
for a fixed number of genome duplication events, an SDþ GD path
with the minimum number of edges (i.e. the shortest-length path)
may be quickly generated using this table. Pseudocode for this pre-
processing step of finding optimal SDþ GD paths is provided as
Algorithm 4. For any fixed number of genome duplication events,
the shortest-length SDþ GD path between two configurations with
the specified number of GD events may be computed one compo-
nent at a time. For each component, a shortest length path may be
found by adding SD losses or gains preceding and following genome
duplication events to choose the most favorable duplication events
given the starting and ending copy number. For a single component,
shortest-length SDþ GD paths have a well-defined structure.
Briefly, for a fixed number of GD events, the condition that the
SDþ GD path be of minimal length requires that GD events be
taken as late as possible. This observation is proved formally in
Supplementary Theorem S17, provided in the Supplementary
Material.

Given that the GD events in a SDþ GD path must be taken as
late as possible, there are only two possible ways a path containing a
GD event may end: the path may end with a GD event (implying the
end copy number is even) or the path may end in an GD event fol-
lowed by an SD event (implying that the end copy number is odd).
The observation suggests an algorithm for finding the duplication
points in the shortest SDþ GD path between copy numbers i and j
for a single gene and a fixed number k genome duplications. One
need only start at j, consider the one or two possible duplication
points for the last GD event in a shortest-length SDþ GD path ter-
minating at j, and then choose the better of the duplication points by
finding the shortest-length SDþ GD path having exactly k  1 dupli-
cations between Cs and the duplication point. Algorithm 4 exploits
this approach to construct a table of shortest paths for all pairs of
taxa i and j, minimizing over the small set of possible numbers k of
genome duplication events.

Consider the shortest SDþ GD path between ðg1; g2Þ ¼ ð2; 2Þ
and (9, 6), with the condition that the path have exactly one genome
duplication. One would first connect (2, 2) to (4, 3) with two gains
of g1 and one gain of g2. Then one would insert an edge representing
a genome duplication between (4, 3) and (8, 6). Finally, one would
connect (8, 6) to (9, 6) using a single gain of g1. Supplementary
Theorem S17 implies that, for this example,
inserting the one
required genome duplication at any other copy number configur-
ation would result in a path with more edges.

For a fixed number of genome duplication events, only a limited
number of duplication points need to be considered. Moreover, be-
cause duplication increases copy number exponentially, it suffices to
consider paths with 0; 1; 2; . . . ; m duplication events, where
m¼ dlog2(UB)e (Supplementary Corollary S18 in Supplementary
Materials). In our code, UB¼ 9, so m¼ 4.

In Algorithm 4, cases in which the copy number of some gene is
zero in Cs and Ct are special. When a copy number starts at zero,
there is no simple biological mechanism for daughter cells to regain
that gene. Thus, we do not attempt to calculate paths for which a
copy number changes from zero to non-zero, but rather just assign
all such paths an infinite weight. Cases in which the copy number
end at zero are also special. In such cases, the optimal SDþ GD path
is to lose all copies of the gene and then cycle from 0 to 0 on all gen-
ome duplication events. For brevity, we exclude such cases from the
pseudocode, though code to handle these cases is implemented in
the FISHtrees software.

2.5 Finding minimum-weight SD 1 CD paths
It remains to define an algorithm to identify a minimum-cost
SDþ CD path between two configurations, which we denote s and
t. SD and CD steps may reordered so that the SD and CD steps that
affect each chromosome are grouped together. For instance, if g1
and g2 are on chromosome 1, and g3 and g4 are on chromosome 2,
one may generate an optimal path from ð2; 2; 2; 2Þ to ð3; 4; 1; 0Þ by
taking an optimal SDþ CD path from ð2; 2; 2; 2Þ to ð3; 4; 2; 2Þ in
which each edge only affects genes on chromosome 1, and then
following an SDþ CD path from ð3; 4; 2; 2Þ to ð3; 4; 1; 0Þ in which
each edge only affects genes on

Algorithm 4. Fill tables representing shortest length SDþ GD
paths for a single gene for all possible starting and ending
copy numbers. n represents the maximum copy number
allowed for any gene and m represents the maximum number
of GD events to be considered. On exit, Bði; j; kÞ contains the
kth duplication point and L(i, j, k) the number of SD gains

i262

S.A.Chowdhury et al.

and losses for the shortest length SDþ GD path from i to j,
with the constraint that k duplications occur.

1:
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:
13:
14:
15:
16:
17:
18:
19:
20:
21:
22:
23:
24:
25:
26:

function FillGDTables(n,m)

for k   0; m do

for i   1; n do

for j   1; n do
if k ¼ 0 then

Lði; j; 0Þ   max ði   j; j   iÞ

else if j is even then
Bði; j; kÞ   j=2
Lði; j; kÞ   Lði; j=2; k   1Þ

else

if j > 1

‘   Lði;ðj   1Þ=2; k   1Þ

else

‘   1

if j < n then

u   Lði;ðj þ 1Þ=2; k   1Þ

else

u   1

if ‘ < u then orð‘ ¼ u and i  jÞ then

Bði; j; kÞ   ðj   1Þ=2
Lði; j; kÞ   Lði;ðj   1Þ=2; k   1Þ þ 1

else

Bði; j; kÞ   ðj þ 1Þ=2
Lði; j; kÞ   Lði;ðj þ 1Þ=2; k   1Þ þ 1

return B; L

end function

chromosome 2. Therefore, it suffices to consider the case in which
all genes are on one chromosome.

The algorithm for computing the SDþ CD distance is centered
around the concept of a zigzag subpath, which is so named because
its construction focuses on alternations between consecutive gain
and loss events.

For example, consider the case of finding an optimal SDþ CD
path between ðg1; g2; g3; g4Þ ¼ ð2; 2; 2; 2Þ and ð5; 5; 4; 3Þ, where all
genes are on the same chromosome. Assuming equal edge weights,
one may show that any optimal SDþ CD path consists of three CD
gains, one SD loss of g3, and one SD gain each of g1 and g2. Whether
such a path is of minimum weight is non-obvious and dependent on
the weight of each type of edge. From theory developed in
Supplementary Materials, it suffices to consider intermediate nodes
on the zigzag path

from r to t, but no further CD steps (Supplementary Theorem S13 of
Supplementary Materials). Furthermore, the initial zigzag subpath,
if non-empty, ends with a CD step. In our example of computing a
path between (2, 2, 2, 2) and (5, 5, 4, 3), assuming that all edges
have equal weights, the initial zigzag subpath ends at intermediate
point (4,4,4,3). The remainder of the optimal path consists only of
SD steps and may be trivially computed.

Between two configurations, there are two types of zigzag path,
one containing only CD gains and the other containing only CD
losses. It is shown in Supplementary Materials (Supplementary
Lemma S3) that there is no advantage to considering SDþ CD paths
with gain and loss of the same chromosome. More surprisingly, it is
shown that for a given chromosome, only one of the two zigzag
paths may result in a beneficial series of zigzag steps and a non-zero
cost (Supplementary Theorem S15). This mathematical result under-
lies the logic in Algorithm 5 that first tests if taking the CD gain zig-
zag path leads to a benefit. If so, this sense is used to find a
provably optimal SDþ CD path, otherwise the CD loss zigzag path
is used. The pseudocode is presented as Algorithm 5, which defines
a variable r (for sense) that takes the value  1 to indicate a zigzag
loss (a zigzag subpath having only CD losses) or 1 to indicate a zig-
zag gain.

Algorithm 5. Compute the weight of an optimal SDþ CD
path between conﬁgurations s and t, assuming all genes are
þ
on the same chromosome. The vectors w
contain
the weights of SD gains and losses, respectively, and cþ and
c  are the weights of CD gains and losses. The algorithm re-
turns the cost of a minimum-weight path between s and t for
the input weight function, assuming only SD and CD events
are used.

and w

 

þ
function SCcost(s, t, w

, w–, cþ, c )

r   1
cost; r   ZigZagðr; s; t; wþ; w ; cþÞ
if cost ¼ 0 then

r    1
cost; r   ZigZagðr; s; t; w ; wþ; c Þ

for k   1; lengthðrÞ do

1:
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:
13: end function

return cost

if rk < sk then

cost   cost þ wþ
else if rk > sk then
cost   cost þ w 

k

k

ð2; 2; 2; 2Þ!CDð3; 3; 3; 3Þ!SDð3; 3; 3; 2Þ!CDð4; 4; 4; 3Þ
!SDð4; 4; 3; 3Þ!SDð4; 4; 3; 2Þ!CDð5; 5; 4; 3Þ:

This path demonstrates the characteristic pattern of gains and
losses of a zigzag path: before each CD step, SD steps in the opposite
direction are inserted to prevent the path from having an intermedi-
ate point with a more extreme copy number than the endpoint of
the path. For
see
Supplementary Materials.

the formal definition of a zigzag path,

A zigzag path as a whole may not be optimal, and in our ex-
ample, is not optimal if all edges have equal weight. However, a key
observation is that for endpoints s and t, there is an optimal
SDþ CD path that starts with a (possibly empty) subpath of a zigzag
path ending at intermediate point r followed by a series of SD steps

Thus, we need to define a subroutine to determine the cost of an
initial, possibly zero-length, beneficial zigzag path and its endpoint.
The algorithm is based on Supplementary Theorem S13 of
Supplementary Materials and pseudocode is presented as Algorithm
6. After each CD step of sense r is added to the zigzag path, the al-
gorithm tests whether adding the CD step, and the SD steps of the
opposite sense that precede it, has lower cost than terminating the
initial zigzag subpath after the previous CD step, or at the start if
there is no previous CD step. The endpoint of the best initial sub-
path and the cost of this subpath are returned. At lines 8–9, the costs
of the SD steps that undo some of the effects of the CD step are tal-
lied. At lines 10–11, the benefits of using a CD step to change the
counts of multiple genes in one step are tallied. If benefits exceed
costs, then at lines 14–15, the count is changed by 1 for those genes

Inferring models of multiscale copy number evolution for single-tumor phylogenetics

i263

that are modified by the CD step but do not have a compensatory
SD step of the opposite sense.

2.6 Complexity analysis
We conclude the description of methods by analyzing the complex-
ity of our algorithms. For this analysis, we denote the maximum
number of GD events as m, the upper bound of gene copy number
(UB) as n, the total number of probes as d, and the total number of
unique copy number profiles (taxa) in a dataset as l. We separately
parameterize by the number of Steiner nodes introduced, s, because
while this could in principle be as large as ðn þ 1Þd it is in practice a
small constant.

Algorithm 6. Compute an optimal initial zigzag path of sense
r from s on the way to t, assuming all genes are on the same
chromosome. The vector a represents the weight of SD steps
of sense r, b representing the cost of SD steps of the opposite
sense, and c is the cost of a CD step of sense r. The algo-
rithm returns the cost of the inferred path, full cost, and the
ending taxon r of the initial zigzag path, which will itself be
an intermediate node on the path from s to t.

function ZigZag(r, s, t, a, b, c)

r   s
fullcost   0
while true do
cost   c
benefit   0
for k   1; lengthðtÞ do

if rk 6¼ 0 and rðrk   tkÞ  0 then

cost   cost þ bk
else if rk 6¼ 0 then

benefit   benefit þ ak
if cost  benefit then break
for k   1; lengthðtÞ do

if rk 6¼ 0 and rðrk   tkÞ < 0 then

rk   rk þ r

fullcost   fullcost þ cost

return fullcost, r

1:
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:
13:
14:
15:
16:
17:
18: end function

We are primarily interested in the running time of Algorithm 1,
for which the time per iteration is dominated by the cost of calling
Algorithm 2, which in turn is dominated by the cost of the algorithm
used to find directed MSTs. The MST algorithm finds an optimal
tree with ‘ nodes, out of a dense graph of Oð‘2Þ possible edges. The
implementation in FISHtrees uses the method of Karp (1971), which
has a complexity of Oð‘3Þ. The complexity can be reduced to Oð‘2Þ
using the method of Tarjan (1977).

The number of calls to the MST routine in Algorithm 2 is
bounded by the number of triplets considered, Oðl3Þ, and the num-
ber of possible lattice points examined per triplet, Oð3dÞ. Because
only the lattice points from triplets involving the observed taxa are
considered, the number of Steiner nodes added does not affect the
number of calls to the MST routine. It does, however, affect the
complexity of finding an optimal MST, yielding a worse-case bound
of O ð‘ þ sÞ3
operations. Thus, in total, the calls to the MST rou-
tine in Algorithm 2 have complexity O ‘3ð‘ þ sÞ33d









.

In addition, each application of the MST algorithm requires us
to generate pairwise distances through Oððl þ sÞ2Þ calls to Algorithm

3. The cost of these calls does not approach the cost of applying the
MST algorithm, in theory or practice. It can be shown that an appli-
cation of Algorithm 3, including the calls to Algorithms 5 and 6 re-
quires Oðm2nd2Þ operations, which may also be understood as
Oðd2Þ as m and n are parameters that are rarely changed. Algorithm
4 is irrelevant to the complexity analysis as it produces a table that
does not depend on the observed data and that for typical values of
m and n comfortably fits in memory on a typical desktop computer
in 2015. Accumulating all of these contributions gives us a total run-
ning time of Oðl3ðl þ sÞ33d þ ðl þ sÞ2ðm2nd2ÞÞ for Algorithm 2 and
for each iteration of Algorithm 1.

b

Typical values of the parameters in practice for current FISH data-
sets are n  9; m  log2n
c  3; d  8, and l  250. Theoretical
running times are polynomial in all factors except d. Because actual
times on datasets of this approximate size are measured in seconds
(see ‘Simulation Results’ in Supplementary Materials S2) the method
can be expected to remain practical for appreciably larger numbers of
cells (l) as might be anticipated for newer FISH data. Significantly
larger numbers of probes (larger d) would be problematic for the pre-
sent algorithms, however, and alternatives might thus be needed if sin-
gle-cell sequencing becomes practical for estimating copy numbers of
large numbers of cells. It is difficult to judge how numbers of iter-
ations of Algorithm 1 required for convergence might be affected by
much larger l or d, leaving some uncertainty about performance on
data characteristics one might reasonably anticipate in the future, al-
though the number of iterations needed is effectively a small constant
for the datasets currently available to us.

3 Results

We applied our parameter inference algorithms to FISH datasets on
two kinds of human cancers: cervical cancer and oral (tongue) can-
cer. The primary datasets used are as follows: (i) Dataset CC1
(Wangsa et al., 2009) consists of paired primary and metastatic cer-
vical cancer samples collected from 16 patients and primary samples
collected from 15 patients whose tumors did not metastasize probed
on four oncogenes residing on distinct chromosomes (LAMP3,
PROX1, PRKAA1 and CCND1); (ii) Dataset TC [D.Wangsa et al.,
submitted] consists of 65 single samples collected from tongue can-
cer patients probed for four genes located on distinct chromosomes
(TERC, EGFR, CCND1, TP53), with tumor stages [ranging from 1
(least advanced) up to four (most advanced)] available on all pa-
tients and tobacco usage (a known risk factor), survival, and dis-
ease-free survival out to 73 months available on most patients.
Because neither of these datasets have more than one probe per
chromosome, we do not consider CD events in these tests. Two add-
itional datasets, both of which have multiple genes on at least one
chromosome, are analyzed in the Supplementary Materials.

We have additionally conducted a series of simulation tests to ver-
ify that the method accurately infers phylogenies and model param-
eters from data of known ground truth. These tests verify on a set of
five parameter scenarios that the methods are effective at inferring ac-
curate model parameters in the presence of a range of mutation rates
between genes, chromosomes, and whole-genome events. The tests
further confirm that the resulting phylogeny inferences are substan-
tially more accurate than those derived from standard phylogeny al-
gorithms applied to the same data across the range of scenarios and
that this accuracy is achieved with realistic sizes of dataset. Due to
space limitations,
these simulation results are deferred to the
Supplementary Material. The protocol for generating simulated data
is described under Simulation Methods in the section Supplementary

i264

S.A.Chowdhury et al.

Fig. 1. Inferred probabilities of events for primary (A) and metastatic (B) cervical samples. WGD refers to the rate of whole-genome duplications

Methods. The results appear under Simulation Results in the section
Supplementary Results and in Supplementary Figures S4–S9.

3.1 Identifying progression markers in cervical cancer
(CC1) data
We applied our algorithm on each of the samples in each of the data-
sets separately and inferred probabilities of each SD and GD event.
We show the boxplots for the inferred parameter values in the CC1
dataset in Figure 1, across 31 primary (Fig. 1A) and 16 metastatic
(Fig. 1B) samples. ‘Gain of LAMP3’ is the most frequent event in
both primary and metastatic samples, similar to the findings re-
ported in our past work (Chowdhury et al., 2013).

Next, for each pair of 16 primary and 16 metastatic samples, we
performed statistical tests based on the ‘tree edge count’ statistic,
which quantifies, for each tumor phylogenetic tree, the total number
of edges across which gain or loss of each gene is inferred. Because
the four genes analyzed in the CC1 dataset are all oncogenes, we
focused on gains, although losses do occur sometimes. To investi-
gate further whether each of the four genes may be more important
in the primary or metastatic phase of cervical cancer, we computed
the proportion of edges that represent gains of that gene in each
sample for the 16 pairs. We present results for PROX1 with some
motivation from previous studies of this gene. A prior study of colo-
rectal cancer showed by various experimental techniques that over-
expression of PROX1 is a driver of a pre-cancerous dysplasia
leading to the primary tumor (Petrova et al., 2008). This study led
others to investigate the hypothesis that overexpression or copy
number gains of PROX1 would be similarly important in primary
cervical cancers. However, static analysis of these CC1 FISH data
(Wangsa et al., 2009) and an unrelated dataset in which PROX1
protein expression was measured by
immunohistochemisty
(Sotiropoulou et al., 2010) gave no significant results about
PROX1.

Using our models, a paired t-test of the proportion of tree edges
that are PROX1 gains showed a significantly higher proportion in
the primary tumors (P-value < 0.007, one-sided, nominal; P-
value < 0.028, corrected for multiple testing of four genes). The
unpaired t-test also gave nominal significance (P-value < 0.042,
one-sided). A less powerful unpaired Wilcoxon test of the propor-
tions (P-value < 0.04, one-sided) and an even less powerful bino-
mial test comparing which of the two proportions is greater in
each pair (P-value < 0.04, one-sided) both supported the conclu-
sion that the proportion of edges that are PROX1 gains is greater
in the primary CC1 samples. These results are consistent with the
colorectal cancer study (Petrova et al., 2008) and show how dy-
namic modeling of tumor progression can give insights that static
analysis misses.

3.2 Classification of cervical samples
We performed classification experiments using tree-based features
to separate samples from different stages of cervical cancer in CC1.
We used these experiments to validate our models and demonstrate
their value, based on our past observation that tree progression
models allow one to distinguish between trees drawn from distinct
current or future progression states (Chowdhury et al., 2013, 2014).
We used the following set of tree-based features: (i) edge count: eight
features corresponding to the fractions of progression tree edges
showing gains and losses of each gene; (ii) Tree level: features corres-
ponding to the fraction of cells at each depth in the progression
trees; (iii) Parameter values: nine features corresponding to inferred
gain and loss probability of each gene (SD), and the probability of a
whole genome duplication event (GD).

We applied these methods for three classification tasks: (a) dis-
tinguishing primary samples that progressed to metastasis from their
paired metastatic samples, (b) distinguishing all primary samples
from all metastatic samples and (c) distinguishing primary samples
that metastasized from primary samples that did not metastasize.
We compared the classification performance of the features from
our current model with the SD-only (pure rectilinear) model
(Chowdhury et al., 2013) and unweighted SDþ GD (Chowdhury
et al., 2014) model of tumor progression. Because each gene resides
on a distinct chromosome in CC1, CD events are irrelevant. We per-
formed 500 rounds of bootstrapping and computed mean accuracy
and standard deviations of accuracy.

The results are presented in Figure 2. The parameter value-based
features (i.e. the inferred phylogenetic rate models themselves) are
the most accurate predictors for the first and second tasks of sepa-
rating primary samples from the metastatic ones. For the clinically
important problem of determining whether a given primary tumor
will metastasize, tree level features show improved prediction accur-
acy by at least 3.5% over all other feature sets considered, including
comparable feature sets from the earlier unweighted models.

3.3 Survival analysis in the TC dataset
For the TC dataset, we focused our analyses of the tree-progression
models on trying to identify predictors of survival. Based on earlier
work suggesting that the distribution of node depth was a useful pre-
dictor of progression in CC1 (Chowdhury et al., 2013), we investi-
gated whether the tree level cell distribution is also a predictor of
overall and disease-free survival time in TC. Similarly to the cervical
cancer samples, we considered distribution of cells across all the lev-
els of the tumor phylogenetic trees inferred on the tongue cancer
samples. Using the cell distribution vector as features, we performed
K-means clustering to partition the samples into two subgroups. We
used ‘Euclidean’ as the distance measure for the clustering and per-
formed clustering with 10 restarts using the new initial cluster cen-
troid position.

Inferring models of multiscale copy number evolution for single-tumor phylogenetics

i265

Fig. 2. Classiﬁcation results on the CC1 dataset

Fig. 3. KM curves for the test of association between overall (A) and disease-free (B) survival time and tree level cell count statistics-based subgrouping of
patients

We performed Kaplan–Meier (KM) analysis (survdiff function
in R) to compare either the survival time or the disease-free sur-
vival time between the two groups obtained from the two sub-
groups of samples (Fig. 3). The subgrouping of patients yielded a
significant difference in overall (P-value ¼ 0.0443, two-sided) and
disease-free (P-value ¼ 0.0371, two-sided) survival between the
two patient groups. The good prognosis cluster was assigned 33
patients and the bad prognosis cluster was assigned 32 patients.
Some insight into the differences in the two groups can be gained
by examining the cluster centers. The cluster center of the good
prognosis group has 33% of its weight in the first 5 tree levels and
90% of its weight in the first 10 tree levels, while the cluster center
of the bad prognosis group has only 16% of its weight in the first 5
tree levels and only 51% of its weight in the first 10 tree levels. We
repeated the same clustering procedure and KM analyses using
trees derived from our previous unweighted SD þ GD algorithm
(Chowdhury et al., 2014) but did not observe statistically signifi-
cant differences in overall (P-value ¼ 0.0784) or disease-free (P-
value ¼ 0.14) survival between the two patient groups with the
older methods.

We then performed multivariate survival analysis using the Cox
proportional hazards (COXPH) model (survfit function in R) to test
whether the new test statistics can predict survival or disease-free
survival independent of tumor stage. The results are presented in
Figure 4. The combined P-value is statistically significant, showing
that the two covariates are independently associated with overall
(disease-free) survival time. The hazard ratio is higher to a signifi-
cant degree for tree statistic-based subgrouping compared to tumor
stage, meaning there is a higher risk of death (disease) if a patient is
assigned to the higher risk category by the tree statistic subgrouping,
independent of tumor stage.

4 Discussion

We have developed algorithms for the problem of inferring tumor-
specific mutation parameters and applying these to improve single-
tumor phylogenetic tree inference at the cellular level, with specific
application to inferring multiscale copy number evolution from sin-
gle-cell FISH data. This work involved developing efficient algo-
rithms for a weighted parsimony model of copy number evolution,

i266

S.A.Chowdhury et al.

Fig. 4. COXPH analysis to test the correlation between tree level cell count statistic-based subgrouping of patients and tumor stage with disease-free and overall
survival time

which required substantially different methods than the unweighted
model in (Chowdhury et al., 2014). We then used an EM-like infer-
ence method to learn weight parameters jointly with tree building,
providing for the first time scalable algorithms capable of learning
tree models for hundreds to thousands of single cells isolated from
individual tumors. This work addresses a key need for learning
tumor-specific evolutionary models capable of dealing with realistic
levels of cellular heterogeneity in single tumors. We showed that the
resulting models provide insight into tumor-specific variation and
lead to improved prediction of future tumor progression in multiple
tumor types.

This work makes an important step towards scalable algorithms
for inferring cancer-specific evolution in single tumors, although much
remains to be done to realize the full potential of the approach. There
are many possible avenues for improvement in the methods, either to
more closely approach true optima for the given objective function or
to develop novel objectives describing more realistic and detailed mod-
els of tumor evolution mechanisms without sacrificing efficiency.
Alternative approaches for inferring evolutionary models from the
phylogenies, such as the phylogenetic profiling approaches of Csu†ro¨ s
(2010), may also provide more accurate and detailed parameter infer-
ences for any given objective function and phylogeny inference algo-
rithm. Another important limitation is the focus on FISH data. FISH is
currently the only technology for which it is practical to profile gen-
omic variation in hundreds of single cells per patient for moderate-
sized patient populations, an essential feature for tumor progression
prediction. The present work thus focused on models of copy number
evolution specifically, as it is both the most common form of hyper-
mutability in tumor evolution (Heng et al., 2013) and the mechanism
most easily profiled by FISH. FISH, however, offers a far more limited
portrait of variation of each cell than does single-cell sequencing
(Navin et al., 2011). Although single-cell sequencing is not yet prac-
tical for the numbers of cells needed to study variation in evolutionary
mechanisms across patient populations, one can reasonably anticipate
that it will eventually overcome that limit, motivating new algorithmic
problems to deal simultaneously with hundreds to thousands of cells,
potentially millions of markers of variation, and with the diverse
classes of genomic variation that sequencing data can reveal.

Funding

This research was supported in part by the Intramural Research Program of
the U.S. National
Institutes of Health, National Cancer Institute, and
National Library of Medicine, and by U.S. National Institutes of Health
grants 1R01CA140214 (R.S. and S.A.C.) and 1R01AI076318 (R.S.).

Conflict of Interest: none declared

References

Beaumont,M.A. (2010) Approximate Bayesian computation in evolution and

ecology. Annu. Rev. Ecol. Evol. Syst., 41, 379–406.

Beerenwinkel,N. et al. (2015) Cancer evolution: mathematical models and

computational inference. Syst. Biol., 64, e1–e25.

Chowdhury,S.A. et al. (2013) Phylogenetic analysis of multiprobe ﬂuorescence
in situ hybridization data from tumor cell populations. Bioinformatics, 29,
i189–i198.

Chowdhury,S.A. et al. (2014) Algorithms to model single gene, single chromo-
some, and whole genome copy number changes jointly in tumor phylogen-
etics. PLoS Comp. Biol., 10, e1003740.

Csu†ro¨ s,M. (2010) Count: evolutionary analysis of phylogenetic proﬁles with

parsimony and likelihood. Bioinformatics, 26, 1910–1912.

Dempster,A.P. et al. (1977) Maximum likelihood from incomplete data via

the EM algorithm. J. R. Stat. Soc. B, 39, 1–38.

Desper,R. et al. (1999) Inferring tree models of oncogenesis from comparative

genomic hybridization data. J. Comput. Biol., 6, 37–51.

Desper,R. et al. (2000) Distance-based reconstruction of tree models for onco-

genesis. J. Comput. Biol., 7, 789–803.

Di Noia,J. and Neuberger,M. (2007) Molecular mechanisms of antibody som-

atic hypermutation. Annu. Rev. Biochem., 76, 1–22.

Felsenstein,J.

(2004)

Inferring Phylogenies. Sinauer Associates,

Inc.,

Sunderland, MA.

Fisher,R. et al. (2013) Cancer heterogeneity: implications for targeted thera-

peutics. Br. J. Cancer, 108, 479–485.

Greenman,C.D. et al. (2010) Estimation of rearrangement phylogeny for can-

cer genomes. Genome Res., 22, 346–361.

Greenblatt,M.S. et al. (1994) Mutations in the p53 tumor suppressor gene:
clues to cancer etiology and molecular pathogenesis. Cancer Res., 54, 4855–
4878.

Harris,R. et al. (2002) RNA editing enzyme APOBEC1 and some of its homo-

logs can act as DNA mutators. Mol. Cell, 10, 1247–1253.

Heng,H.H. et al. (2013) Chromosome instability (CIN): what it is and why it

is crucial to cancer evolution. Cancer Metastasis Rev., 32, 325–340.

Heselmeyer-Haddad,K. et al. (2012) Single-cell genetic analysis of ductal car-
cinoma in situ and invasive breast cancer reveals enormous tumor hetero-
geneity, yet conserved genomic imbalances and gain of MYC during
progression. Am. J. Pathol., 181, 1807–1822.

Hjelm,M. et al. (2006) New probabilistic network models and algorithms for

oncogenesis. J. Comput. Biol., 13, 853–865.

Karp,R.M. (1971) A simple derivation of edmonds’ algorithm for optimum

branchings. Networks, 1, 265–272.

Liu,J.

et al.

(2009)

Inferring progression models

for CGH data.

Bioinformatics, 25, 2208–2215.

Loeb,L.A. (1991) Mutator phenotype may be required for multistage carcino-

genesis. Cancer Res., 51, 3075–3079.

Martins,F.C. et al. (2012) Evolutionary pathways in BRCA1-associated breast

tumors. Cancer Discov., 2, 503–511.

Marusyk,A. and Polyak,K. (2010) Tumor heterogeneity: causes and conse-

quences. Biochim. Biophys. Acta (BBA) Rev. Cancer, 1805, 105–117.

Navin,N. et al. (2011) Tumour evolution inferred by single-cell sequencing.

Nature, 472, 90–94.

Newton,M.A. (2002) Discovering combinations of genomic aberrations asso-

ciated with cancer. J. Am. Stat. Assoc., 97, 931–942.

Nowell,P.C. (1976) The clonal evolution of tumor cell populations. Science,

194, 23–28.

Bandelt,H. et al. (1999) Median-joining networks for inferring intraspeciﬁc

Pennington,G. et al. (2007) Reconstructing tumor phylogenies from heteroge-

phylogenies. Mol. Biol. Evol., 16, 37–48.

neous single-cell data. J. Bioinform. Comput. Biol., 5, 407–427.

Inferring models of multiscale copy number evolution for single-tumor phylogenetics

i267

Petrova,T.V. et al. (2008) Transcription factor PROX1 induces colon cancer
progression by promoting the transition from benign to highly dysplastic
phenotype. Cancer Cell, 13, 407–419.

Purdom,E. et al. (2013) Methods and challenges in timing chromosomal

abnormalities within cancer samples. Bioinformatics, 29, 3113–3120.

Snuderl,M. et al. (2011) Mosaic ampliﬁcation of multiple receptor tyrosine

kinase genes in glioblastoma. Cancer Cell, 20, 810–817.

Sotiropoulou,N. et al. (2010) Tumour expression of lymphangiogenic growth
factors but not lymphatic density is implicated in human cervical progres-
sion. Pathology, 42, 629–636.

subpopulations with distinct growth factor response. Proc. Natl Acad. Sci.
U.S.A., 109, 3041–3046.

Tarjan,R.E. (1977) Finding optimum branchings. Networks, 7, 25–35.
Timmermann,B. et al. (2010) Somatic mutation proﬁles of MSI and MSS colo-
rectal cancer identiﬁed by whole exome next generation sequencing and bio-
informatics analysis. PLoS One, 5, e15661.

Urbschat,S. et al. (2011) Clonal cytogenetic progression within intratumorally
heterogeneous meningiomas predicts tumor recurrence. Int. J. Oncol., 39,
1601–1608.

Wang,Y. et al. (2014) Clonal evolution in breast cancer revealed by single nu-

Sprouffske,K. et al. (2011) Accurate reconstruction of the temporal order

cleus genome sequencing. Nature, 512, 155–160.

of mutations in neoplastic progression. Cancer Prev. Res., 4, 1135–1144.

Szerlip,N.J. et al. (2012) Intratumoral heterogeneity of receptor tyrosine
kinases EGFR and PDGFRA ampliﬁcation in glioblastoma deﬁnes

Wangsa,D. et al. (2009) Fluorescence in situ hybridization markers for
lymph node metastases. Am. J. Pathol., 175,

prediction of cervical
2637–2645.

