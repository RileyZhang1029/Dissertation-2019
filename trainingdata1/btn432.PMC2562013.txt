BIOINFORMATICS ORIGINAL PAPER Vol. 24 no. 20 2008, pages 2324–2328

doi:10.1093/bioinformatics/btn432

Structural bioinformatics
Optimal contact map alignment of protein–protein interfaces
Vinay Pulim1, Bonnie Berger1,2,∗ and Jadwiga Bienkowska1,3,∗
1Computer Science and Artiﬁcial Intelligence Laboratory, MIT, 2Mathematics Department, MIT, Cambridge and
3Biomedical Engineering Department, Boston University, Boston, USA
Received on April 4, 2008; revised on July 16, 2008; accepted on August 14, 2008
Advance Access publication August 18, 2008
Associate Editor: Anna Tramontano

ABSTRACT
The long-standing problem of constructing protein structure
alignments is of central importance in computational biology. The
main goal is to provide an alignment of residue correspondences,
in order to identify homologous residues across chains. A critical
next step of
this is the alignment of protein complexes and
their interfaces. Here, we introduce the program CMAPi, a two-
dimensional dynamic programming algorithm that, given a pair
of protein complexes, optimally aligns the contact maps of their
interfaces:
it produces polynomial-time near-optimal alignments
in the case of multiple complexes. We demonstrate the efﬁcacy
of our algorithm on complexes from PPI
families listed in the
SCOPPI database and from highly divergent cytokine families. In
comparison to existing techniques, CMAPi generates more accurate
alignments of
interacting
proteins, especially for sequences with low similarity. While previous
methods that use an all-atom based representation of the interface
have been successful, CMAPi’s use of a contact map representation
allows it to be more tolerant to conformational changes and thus
to align more of the interaction surface. These improved interface
alignments should enhance homology modeling and threading
methods for predicting PPIs by providing a basis for generating
template proﬁles for sequence–structure alignment.
Contact: bab@mit.edu; jbienkowska@gmail.com
Supplementary information: Supplementary data are available at
http://theory.csail.mit.edu/cmapi

interacting residues within families of

1 INTRODUCTION
Structure-based protein–protein interaction (PPI) prediction is an
emerging area with vast potential
to impact systems biology,
genomics, molecular biology and therapeutics. Success would
greatly improve data mining from genome sequencing, structural
proteomics and other large-scale experiments that probe networks.
It would also provide leads for experiments and drug design.

Akin to the prediction of single chain protein structure, homology
modeling and threading techniques (Bienkowska and Lathrop, 2005;
Bowie et al., 1991; Dunbrack, 2006; Jones et al., 1992; Pieper et al.,
2006; Xu et al., 2003) are likely to be effective for predicting PPIs
(Lu et al., 2002; Singh et al., 2006). The ﬁrst step in any such method
is to generate proﬁles for templates from an alignment of sequences.
However, the construction of optimal proﬁles for PPI prediction
is particularly challenging because interactions between the two
∗

To whom correspondence should be addressed.

protein sequences must be taken into account, preventing their
treatment as independent alignments. Indeed, this is likely the reason
that threading algorithms that align single chains independently do
not perform well when extended to complexes (Pulim et al., 2008),
largely due to the weighting of non-interacting residues equally with
residues critical to the interaction. We have previously achieved
more accurate threading by ﬁrst aligning the interface regions as
a whole via contact map representations (Fig. 1) and subsequently
generating sequence proﬁles from the resulting alignment. We have
shown that accurate structural alignment of interfaces leads to
successful PPI prediction (Pulim et al., 2008).

There has been limited previous work on protein–protein interface
alignment. A number of different representations have been used
to describe protein structure and thus protein–protein interfaces,
from contact maps to all-atom representations. We have previously
developed the LTHREADER program (Pulim et al., 2008) that uses
a contact map representation of protein interfaces and generates an
accurate alignment of binding interfaces for cytokines, a medically
important class of protein families with very low sequence similarity.
When multiple structural complexes are available for a ligand-
receptor family, LTHREADER performs interface alignment in
two stages: ﬁrst, it identiﬁes interaction core regions by clustering
contacts within a speciﬁed distance threshold;
it aligns
contact maps by maximizing the overlap between the submatrices
deﬁned by the core regions. A limitation of this method is
that cores are deﬁned before they are aligned which has the
potential to generate sub-optimal contact map alignments. The
other existing algorithm for interface alignment is MAPPIS, which
uses an all-atom representation of protein interfaces and optimizes
the alignment of interface regions with similar physico-chemical
properties (Shulman-Peleg and Shatsky, 2005). MAPPIS is useful
for certain applications such as function prediction that require
recognition of conserved structural patterns of physico-chemical
interactions. However, since MAPPIS uses a physical, all-atom-
based representation of interfaces, it may be sensitive to small
differences caused by conformational changes in the interface
surface.

then,

M
¯

In this article, we introduce a polynomial-time algorithm for
optimal pairwise contact map alignment of protein interfaces
(C
A
P
i) using two-dimensional (2D) dynamic programming. For
¯
¯
¯
multiple alignment, we apply a neighbor joining algorithm akin
to that used for multiple sequence alignment (Higgins and Sharp,
1988). We evaluate our algorithm on the SCOPPI database (Winter
et al., 2006), which classiﬁes all protein–protein interfaces into
similarity classes, and measure its performance according to the

 2008 The Author(s)
This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/
by-nc/2.0/uk/) which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.

Contact map alignment of protein–protein interface

Given two contact maps matrices, C and D, our goal is to ﬁnd the
alignment of C and D that maximizes the overlap between interacting
residues. Our alignment algorithm uses 2D dynamic programming to
optimize the alignment score (Smith and Waterman, 1981). We allow for gaps
in the maps by assigning a gap penalty that penalizes gap insertions between
highly interacting residues. The justiﬁcation for this penalty is that adjacent
residues that are highly interactive should be part of the same interaction
core and therefore should not be split.

The ﬁrst step in the dynamic programming approach is to create a 4D
scoring matrix M, where Mi,j,k,m is the maximum score at position i, j, k, m
[0≤ i < width (C), 0≤ j < height (C), 0 ≤ k < width (D), 0 ≤ m < height
(D)]. Entry Mi,j,k,m is then determined from previously solved sub-problems
as follows:

⎧⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎩

⎛

⎜⎜⎜⎜⎜⎜⎝

(cid:1)
(cid:1)

0

Mi−1,j,k−1,m+S
i,j,k,m
Mi,j−1,k,m−1+S
(cid:1)
i,j,k,m
Mi,j,k−1,m+wc
(cid:1)
C,i
Mi,j,k,m−1+wr
(cid:1)
C,j
Mi−1,j,k,m+wc
(cid:1)
D,k
Mi,j−1,k,m+wr
D,m

(cid:2)
(cid:2)
(cid:2)
(cid:2)

,
,
,

(cid:2)
(cid:2)

,
,

⎞

⎟⎟⎟⎟⎟⎟⎠

if i.j.k.m=0

otherwise

(2)

where wc(X, i) is the gap penalty for inserting a gap at column i in contact
map matrix X and wr(X, j) is the gap penalty for inserting a gap at row j in
contact map matrix X. In order to ensure that clusters of interacting residues
are not split, we assign a high penalty for gap insertions in rows and columns
containing a high number of interactions. Speciﬁcally, we used the following
gap penalty functions:

(cid:1)

wc

wr

X,i
(cid:1)

X,j

(cid:2)=−
(cid:2)=−

(cid:13)

j

(cid:13)

i

,

1
X2
i,j
1
X2
i,j

(3)

S(i, j, k, m) is the similarity score between the interaction at i, j in contact
map C and interaction k,m in contact map D. We use the following similarity
function:

(cid:1)

(cid:2)=

1

Ci,jDk,m

S

i,j,k,m

,

(4)

Although here we use a simple similarity function based on inter-residue
distance within an interaction, one can deﬁne a more complex similarity
function that incorporates physical and chemical properties of the interacting
residues. We note that both the scoring function and gap penalty functions
are deﬁned in the same units of inverse square of the distance.

Once all values of M are computed using (2), the optimal alignment of
contact maps is determined by backtracking through the scoring matrix as
in standard dynamic programming. Movements within the scoring matrix
correspond to the following alignment actions:

Fig. 1. Contact map representation of the aligned interfaces of ﬁve four-
helical bundle cytokine complexes. Each color represents a complex and the
gray map at the bottom is the average contact map of the aligned interfaces.

Mi, j,k,m=

Max

percentage of interacting residues aligned correctly (see Section 2).
We demonstrate that CMAPi produces more accurate alignments
than existing methods, such as MAPPIS and MUSCLE (Shulman-
Peleg and Shatsky, 2005; Edgar, 2004), especially for protein
sequences with low similarity. Compared to LTHREADER, CMAPi
is faster, automated and as accurate, allowing large-scale application.
Moreover, our new approach aligns entire contact maps without
having to ﬁrst identify core regions. Instead, cores are automatically
determined by the algorithm as a post-alignment step and then are
used to generate sequence proﬁles of the interaction cores. In the
future, these proﬁles will be used to predict new PPIs as described
previously for LTHREADER (Pulim et al., 2008).

2 METHODS
2.1 Algorithm
CMAPi ﬁnds alignments of similar protein–protein interfaces using a contact
map representation. First, we generate optimal pairwise interface alignments
and then use a version of the neighbor-joining algorithm to align multiple
interfaces.
The contact map representation is a 2D matrix X indexed by the residues
i∈ L and j ∈ R from the interacting proteins L and R. Entry Xi,j in contact
map X is deﬁned as

(cid:1)

(cid:2)

Xi,j = min
hi∈i,hj∈j

dhihj

,

(1)

Change in (i, j, k, m)

Contact map C

Contact map D

which is the minimum distance between all heavy atoms, hi and hj, of
residues i and j. In our contact maps, we include all the residues that have
at least one contact with the minimum distance <10 Å. The residues with
contacts more than 10 Å are not included in the contact maps. Formally, their
distance is treated as inﬁnite and stretches of residues with contacts more
than 10 Å are represented as one entry in the contact map.

The 10 Å cutoff is much more generous than the conservative 4.5 Å
threshold used for deﬁning contacts in single complexes (Lu et al., 2003;
Pulim et al., 2008) that Lu et al. optimized for development of statistical
scoring functions. The 10 Å cutoff was selected without any optimization
and with the sole purpose of avoiding dependence of the contact deﬁnition
on the conservative distance cutoff, which would make the contact deﬁnition
sensitive to small differences in distance. The more generous initial cutoff
allows for alignment of contacts that may pass the conservative cutoff in one
complex but not others. Later, when determining the interaction cores from
multiple contact map alignments, we use the conservative cutoff for deﬁning
contacts (see below).

(+1, 0, +1, 0)
(0, +1, 0, +1)
(0, 0, +1, 0)
(0, 0, 0, +1)
(+1, 0, 0, 0)
(0, +1, 0, 0)

align column i
align row j
gap at column i
gap at row j

align column k
align row m

gap at column k
gap at row m

An optimal alignment itA of contact maps is a mapping A(i, j) = (a(i), b(j))
of the pair of (i, j) indices from a complex C onto the (k, m) pair in a complex
D where (k, m) = (a(i), b(j)).

Multiple alignment of contact maps is accomplished using the same
neighbor-joining algorithm as in CLUSTALW (Higgins and Sharp, 1988),
but with similarity of contact maps as a distance metric:
(cid:2)(cid:2)
(cid:1)
,m= A

i,j,k= A

(cid:13)

(5)

(cid:1)

(cid:1)

(cid:2)

S

i

j

dC,D= 1
ij

i,j,k,m

2325

V.Pulim et al.

Fig. 2. Mapping of contact map entries onto a string.

The ﬁnal step of our algorithm identiﬁes core regions within each of the
interface sequences. We consider two consecutive residues in one sequence
to be part of the same core if they both interact with the same residue in
the second sequence. For a given SCOPPI family consisting of complexes
of proteins {L} and {R}, let i and j denote the aligned positions among all
contact maps between the {L} and {R} proteins. The residue positions i
and i + 1 from a set of aligned ‘ligand’ sequences {L} belong to the same
interaction core if for some residues j from the ‘receptor’ sequences {R}, the
contact map distance is <4.5 Å for some complexes in the family. That is,
each of the adjacent residues i and i + 1 from {L} have to be in contact with
the same residue j in {R} in at least one complex, but not necessarily in the
same complex. A similar deﬁnition is applied to deﬁne interaction cores in
{R} sequences. Thus the interaction cores consist of contiguous stretches of
aligned residues within the {L} and {R} protein sequences.

2.2 Performance analysis
The CMAPi algorithm explores the entire space of possible alignments
between contact maps and aligns two contact maps by optimizing the
similarity function (4). Thus we can claim that CMAPi is optimal for
pairwise alignment provided that the residues are assumed to be ordered
sequentially. This is indeed the case for our contact maps, which are
constructed sequentially. In fact, by concatenating the rows in a contact
map and creating a 1D sequence of contacts, the CMAPi algorithm can
be mapped to a speciﬁc case of 1D sequence alignment with a complex,
position-dependent gap penalty structure as deﬁned by Equation (3). Figure 2
illustrates the mapping of a 2D contact map onto a 1D string.

The gap penalty function would record the features of the contact map,
i.e. the number and distances of contacts. In the case of multiple alignment
of contact maps, although the neighbor-joining method is not optimal, it has
been shown in practice to perform nearly as well as an optimal, exhaustive
search for multiple sequence alignment (Gascuel and Steel, 2006). In terms
of computational complexity, while single-chain contact map alignment
[introduced by Godzik et al. (1992)] has been shown to be NP-hard by
Goldman et al. (1999), PPI interface alignment is tractable because gap
insertions in the two interacting protein sequences deﬁning the contact maps
are independent. Thus, Equation (2) does not apply to the single chain case
since a gap in the ﬁrst sequence L would imply the same gap in the second
sequence R, identical to the ﬁrst L = R in that case. Furthermore, multiple
alignment is also tractable since we are using the polynomial-time neighbor-
joining algorithm. Speciﬁcally, pairwise alignment takes time O(k4), where
k is the number of interface contacts in a protein complex, and multiple
alignment, O(k4m2) given the m contact maps. In the SCOPPI database, we
found that on average k ∼= 43 and m∼=4: See Figure 3 for the distributions

of k and m.

2.3 Evaluation of interface alignments
The interface alignment accuracy is measured using the IRACC function
deﬁned in Pulim et al. (2008):

IRACC=

(cid:2) N−1(cid:13)
i=1

2
N−1

N(cid:13)
j=i+1

(cid:1)

N

iraccij

(6)

2326

(a)

(b)

Fig. 3. (a) Distribution of k (interface size). The average interface size is 43
contacts. (b) Distribution of m (family size). The average family size is 4.1
complexes.

where iraccij is the alignment accuracy for a pair of template complexes i, j
and is deﬁned as

(cid:1)
(cid:1)
iraccij = nalign
nmin

(cid:2)
(cid:2) .
i,j
i,j

nalign(i, j) is the number of aligned contacts between two complexes and
nmin(i, j) is the minimum number of contacts in complexes i and j. The
complex with the smaller number of contacts determines how many contacts
can be aligned in a best case scenario. Here, the contacts are interacting
residues with a distance between any pair of heavy atoms Xi,j <4.5 Å. We
note that contact maps are aligned by optimizing the distance-dependent
scoring function deﬁned by Equations (3) and (4), which is different than the
distance-independent IRACC measure used for evaluation of the alignments:
the scoring function encodes the shortest distance between any two heavy
atoms of contacting residues. Furthermore, the contact map alignment
includes all contacts up to 10 Å, while evaluation includes only contacts
up to 4.5 Å.

3 RESULTS
To evaluate the accuracy of our dynamic programming algorithm,
we compared our results to those produced by MAPPIS (Shulman-
Peleg and Shatsky, 2005) and LTHREADER (Pulim et al., 2008). We
also compared our algorithm to purely sequence-based alignments
generated by MUSCLE (Edgar, 2004) as a baseline for our
test. MUSCLE was chosen from among many different sequence
alignment algorithms for development of the SCOPPI database.

CMAPi generates the most accurate interface alignments for
cytokine families, one of the more challenging cases previously
investigated by LTHREADER. In this case, since LTHREADER
generates different core boundaries than our algorithm, we measured
the accuracy of CMAPi and MAPPIS using LTHREADER’s core
deﬁnitions. CMAPi has accuracy almost identical to LTHREADER,
while not requiring predeﬁned interaction cores (Table 1).

In addition, CMAPi demonstrates an improvement over MAPPIS
of 5% for four-helical bundles and 6% for TNF-like cytokines and

Contact map alignment of protein–protein interface

Table 1. Comparison of alignment accuracy, IRACC, for various alignment
methods for the four-helical bundle and TNF-like cytokine families

4-Helical Bundles

TNF-Like

CMAPi
LTHREADER
MAPPIS
MUSCLE

0.84
0.85
0.80
0.73

0.72
0.70
0.64
0.62

In both cytokine families, our CMAPi algorithm achieves higher alignment accuracy
than MAPPIS and MUSCLE and the same accuracy as LTHREADER.

(a)

(b)

Accuracy v. Sequence Similarity

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

CMAPi

MAPPIS

MUSCLE

90

80

70

60

50

40

30

20

Sequence Similarity (%)

Fig. 4. Comparison of alignment accuracy (IRACC) versus the similarity
of sequences within complexes using the CMAPi, MAPPIS and MUSCLE
algorithms. Out of 67 SCOPPI complex families only the 47 that have been
aligned by MAPPIS are used for comparison.

much higher accuracy than MUSCLE (over 11% for four-helical
bundles and 10% for TNF-like cytokines). The use of structural
information by both MAPPIS and CMAPi leads to signiﬁcantly
better alignments when compared to MUSCLE, which uses only
sequence information.

We also investigated alignment accuracy as a function of
sequence identity and demonstrated CMAPi’s superior performance
as sequence identity declines (Fig. 4) using complexes classiﬁed
in SCOPPI database. Sequence identity was calculated over the
full length of alignments generated using MUSCLE. To evaluate
the inﬂuence of sequence identity on the performance of different
algorithms (MUSCLE, MAPPIS CMAPi), we aligned complexes
from PPI families listed in the SCOPPI database. Only families
containing at least three complexes were chosen to ensure that
enough structure information was available to generate alignments.
The current release of SCOPPI contains 63 such families. Results
from this evaluation are shown in Figure 4, and individual
alignments are included in the supplementary website.

While both methods generate signiﬁcantly better alignments than
MUSCLE at all sequence similarities of SCOPPI families, CMAPi
performs better than both MAPPIS and MUSCLE when sequence
similarity is below 75%. Furthermore, CMAPi improves alignments
over MAPPIS by about 5% for structures that are typically
considered for homology modeling, where sequence similarity is
50–70%.

We also veriﬁed that the IRACC measure of the interaction core
alignment generated by CMAPi on SCOPPI correlates well with

Fig. 5. (a) Comparison of CMAPi IRACC versus RMSD. (b) Comparison
of RMSD of interface alignments using CMAPi and MAPPIS. The interface
is deﬁned by CMAPi’s core regions. Out of 67 SCOPPI complex families
only the 47 that have been aligned by MAPPIS are used here.

the more standard RMSD measure (Fig. 5a). Note that RMSD is
an independent measure of the accuracy of the alignments and
has not been optimized by CMAPi. Moreover, we showed that the
RMSD for CMAPi alignments is not appreciably worse than the
RMSD for MAPPIS alignments, even though MAPPIS partially
optimizes for low RMSD and CMAPi does not (Fig. 5b). Notably,
there are some families where CMAPi generates better RMSD than
MAPPIS (2 Å versus 3–4 Å), while for several families MAPPIS
yields better RMSD (2 Å versus 4 Å). This result indicates that
CMAPi may also be useful as a ﬁrst step in building detailed
homology models of protein interfaces from multiple complex
structures.

4 DISCUSSION
We have shown that the alignment accuracy of our CMAPi algorithm
is higher than other existing interface alignment algorithms and in
particular MAPPIS. Our algorithm is optimal for pairwise alignment
of contact maps and near-optimal in practice for multiple alignment,
while having polynomial-time complexity. We believe our method
generates better alignments of interacting residues due to its use
of a contact map representation of protein interfaces instead of
the all-atom-based representation used by MAPPIS. The all-atom
representation is helpful in situations where the ﬁne details of the
structure can be predicted with high conﬁdence, such as homology
modeling of very similar proteins. However, in the case when ﬁne
details cannot be predicted accurately, representations using coarser
features, such as contact maps, lead to better predictions. CMAPi
is tolerant to conformational changes and thus aligns more of the
interaction surface.

In future work, we intend to use the CMAPi alignment algorithm
to build proﬁles for every family of interacting proteins deﬁned
in the publicly available SCOPPI database. For each family, we

2327

V.Pulim et al.

will use the multiple alignment of contact maps corresponding to
each PPI complex within the family and generate aligned core
regions within each sequence pair. The aligned cores will then
be used to derive sequence proﬁles that will be used for PPI
prediction as described in LTHREADER. The improvements in
the alignment of interacting residues for sequences with 50–70%
similarity indicate that CMAPi could also be helpful in building
better homology models of protein–protein interfaces when multiple
complexes having different interface conformations are available as
templates. In this work, we have used a pre-existing classiﬁcation of
protein–protein binding modes provided by SCOPPI. In the future,
we will investigate if CMAPi can be used to classify protein binding
modes based on contact map similarity.

ACKNOWLEDGEMENTS
We would like to thank Jinbo Xu for helpful discussions.

Funding: National Institute of Health (1R01GM081871-01A1).

Conﬂict of Interest: none declared.

REFERENCES
Bienkowska,J. and Lathrop,R. (2005) Threading algorithms. In: Dunn,M. et al. (ed.).
Encyclopedia of Genetics, Genomics, Proteomics, and Bioinformatics. Wiley,
Hoboken, Nj, USA.

Bowie,J.U. et al. (1991) A method to identify protein sequences that fold into a known

three-dimensional structure. Science, 253, 164–170.

Edgar,R.C. (2004) MUSCLE: multiple sequence alignment with high accuracy and high

throughput. Nucleic Acids Res., 32, 1792–1797.

Gascuel,O. and Steel,M. (2006) Neighbor-joining revealed. Mol. Biol. Evol., 23,

1997–2000.

Godzik,A. et al. (1992) Topology ﬁngerprint approach to the inverse protein folding

problem. J. Mol. Biol., 227, 227–238.

Goldman,D. et al. (1999) Algorithmic aspects of protein structure similarity. In 40th
Annual Symposium on Foundations of Computer Science, 1999. IEEE Computer
Scoiety, Piscataway, NJ, USA, pp. 512–521.

Higgins,D.G. and Sharp,P.M. (1988) CLUSTAL: a package for performing multiple

sequence alignment on a microcomputer. Gene, 73, 237–244.

Jones,D.T. et al. (1992) A new approach to protein fold recognition. Nature, 358,

86–89.

Lu,H. et al. (2003) Development of uniﬁed statistical potentials describing protein-

protein interactions. Biophys. J., 84, 1895–1901.

Lu,L. et al. (2002) MULTIPROSPECTOR: an algorithm for the prediction of protein-

protein interactions by multimeric threading. Proteins, 49, 350–364.

Pieper,U. et al. (2006) MODBASE: a database of annotated comparative protein

structure models and associated resources. Nucleic Acids Res., 34, D291–D295.

Pulim,V.

et al.

(2008) LTHREADER: prediction of

ligand-
receptor interactions in cytokines using localized threading. Protein Sci., 17,
279–292.

extracellular

Shulman-Peleg,A. and Shatsky,M. (2005) MAPPIS: multiple 3D alignment of protein-
protein interfaces. In Computational Life Sciences: First International Symposium,
CompLife 2005, Konstanz, Germany, September 25-27, 2005: Proceedings. Spinger
Lec. Notes in Comp. Sci., Konstanz, Germany.

Singh,R. et al. (2006) Struct2Net: integrating structure into protein-protein interaction

prediction. Pac. Symp. Biocomput., 13, 403–414.

Smith,T.F.

and Waterman,M.S.

(1981)

Identiﬁcation of

common molecular

subsequences. J. Mol. Biol., 147, 195–197.

Winter,C. et al. (2006) SCOPPI: a structural classiﬁcation of protein-protein interfaces.

Nucleic Acids Res., 34, D310–D314.

Dunbrack,R.L. Jr. (2006) Sequence comparison and protein structure prediction. Curr.

Xu,J. et al. (2003) RAPTOR: optimal protein threading by linear programming.

Opin. Struct. Biol., 16, 374–384.

J. Bioinform. Comput. Biol., 1, 95–117.

2328

