BIOINFORMATICS ORIGINAL PAPER Vol.
27 no.
1 2011, pages 118 126  doi:10.1093/bioinformatics/btq569  Advance Access publication October 26, 2010  Data and text mining Optimized data fusion for K-means Laplacian clustering Shi Yu1, , , Xinhai Liu1,2, Léon-Charles Tranchevent1, Wolfgang Glänzel3, Johan A. K. Suykens1, Bart De Moor1 and Yves Moreau1 1Signals, Identiﬁcation, System Theory and Automation, Department of Electrical Engineering, Katholieke Universiteit Leuven, Leuven-Heverlee, Belgium, 2Department of Information Science and Engineering & ERCMAMT, Wuhan University of Science and Technology, Wuhan, China and 3Department of Managerial Economics, Strategy and Innovation, Centre for R & D Monitoring, Katholieke Universiteit Leuven, Leuven, Belgium Associate Editor: John Quackenbush  ABSTRACT Motivation: We propose a novel algorithm to combine multiple kernels and Laplacians for clustering analysis.
The new algorithm is formulated on a Rayleigh quotient objective function and is solved as a bi-level alternating minimization procedure.
Using the proposed algorithm, the coefﬁcients of kernels and Laplacians can be optimized automatically.
Results: Three variants of the algorithm are proposed.
The performance is systematically validated on two real-life data fusion applications.
The proposed Optimized Kernel Laplacian Clustering (OKLC) algorithms perform signiﬁcantly better than other methods.
Moreover, the coefﬁcients of kernels and Laplacians optimized by OKLC show some correlation with the rank of performance of individual data source.
Though in our evaluation the K values are predeﬁned, in practical studies, the optimal cluster number can be consistently estimated from the eigenspectrum of the combined kernel Laplacian matrix.
Availability: The MATLAB code of algorithms implemented in this paper is downloadable from http://homes.esat.kuleuven.be/ sistawww/bioi/syu/oklc.html.
Contact: shiyu@uchicago.edu Supplementary information: Supplementary data are available at Bioinformatics online.
Received on June 16, 2010  revised on September 6, 2010  accepted on October 1, 2010  1 INTRODUCTION Clustering is a fundamental problem in unsupervised learning and a number of different algorithms and methods have emerged over the years.
K-means (KM) and spectral clustering are two popular methods for clustering analysis.
K-means is proposed to cluster attribute-based data into K numbers of clusters with the minimal distortion (Bishop, 2006  Duda et al., 2001).
Another well-known method, spectral clustering (SC) (Ng et al., 2001  Shi and Malik, 2000), is also widely adopted in many applications.
Unlike KM, SC is speciﬁcally developed for graphs, where the data samples are represented as vertices connected by non-negatively weighted undirected edges.
The problem of clustering on graphs belongs    To whom correspondence should be addressed.
Present address: Department of Medicine, Institute for Genomics and Systems Biology, The University of Chicago.
to another paradigm than the algorithms based on the distortion measure.
The goal of graph clustering is to ﬁnd partitions on the graph such that the edges between different groups have a very low weight (von Luxburg, 2007).
To model this, different objective functions are adopted and the typical criteria include the RatioCut (Hagen and Kahng, 1992), the normalized cut (Shi and Malik, 2000) and many others.
To solve these objectives, the discrete constraint of the clustering indicators is usually relaxed to real values  thus, the approximated solution of spectral clustering can be obtained from the eigenspectrum of the graph Laplacian matrix.
Many investigations (e.g.
Dhillon et al., 2004) have shown the connection between KM and SC.
Moreover, the weighted similarity matrix is often used interchangeably as the kernel matrix in KM or the adjacency matrix in SC.
in practical applications,  Recently, a new algorithm, Kernel Laplacian (KL) clustering , is proposed to combine a kernel and a Laplacian simultaneously in clustering analysis (Wang et al., 2009).
This method combines the objectives of KM and SC in a quotient trace maximization form and solves the problem by eigen-decomposition.
KL is shown to empirically outperform KM and SC on real datasets.
This straightforward idea is useful to solve many practical problems, especially those pertaining to combine attribute-based data with interaction-based networks.
For example, in web analysis and scientometrics, the combination of text mining and bibliometrics has become a standard approach in clustering science or technology ﬁelds toward the detection of emerging ﬁelds or hot topics (Liu et al., 2010).
In bioinformatics, protein protein interaction network and expression data are two of the most important sources used to reveal the relevance of genes and proteins with complex diseases.
Conventionally, the data are often transformed into similarity matrices or interaction graphs, then consequently clustered by KM or SC.
In KL, the similarity-based kernel matrix and the interaction- based Laplacian matrix are combined, which provides a novel approach to combine heterogeneous data structures in clustering analysis.
Our preliminary experiments show that when using KL to combine a single kernel and a single Laplacian, its performance strongly depends on the quality of the kernel and the Laplacian, which results in a model selection problem to determine the optimal settings of the kernel and the Laplacian.
To perform model selection on unlabeled data is non-trivial because it is difﬁcult to evaluate the models.
To tackle the new problem, we propose a novel algorithm to incorporate multiple kernels and Laplacians in KL clustering.
Our recent work proposes a method to integrate multiple kernel matrices    The Author(s) 2010.
Published by Oxford University Press.
This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/ by-nc/2.5), which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.
[10:56 10/12/2010 Bioinformatics-btq569.tex]  Page: 118 118 126   in kernel k-means clustering (Yu,S.
et al.
Optimized data fusion for kernel K-means clustering, submitted for publication).
The main contribution of the present work lies in the additive combination of multiple kernels and Laplacians  moreover, the coefﬁcients assigned to the kernels and the Laplacians are optimized automatically.
This article presents the mathematical derivations of the additive integration form of kernels and Laplacians.
The optimization of coefﬁcients and clustering are achieved via a solution based on bi-level alternating minimization (Csiszar and Tusnady, 1984).
We validate the proposed algorithm on heterogeneous datasets taken from two real applications, where the advantage and reliability of the proposed method are systematically compared and demonstrated.
2 METHODS 2.1 Combine kernel and Laplacian as generalized  Ralyeigh quotient for clustering  We ﬁrst brieﬂy review the KL algorithm proposed by Wang et al.
(2009).
All the mathematical symbols used in the article are consistent and their representations are listed in Supplementary Material 1.
Let us denote X as an attribute dataset and W as a graph afﬁnity matrix, both of them are representations of the same sets of samples.
The objective of the KL integration to combine X and W for clustering can be deﬁned as  JKL= κJSC+(1 κ)JKM,  (1)  where JSC and JKM are, respectively, the objectives of SC and KM clustering, κ [0,1] is a coefﬁcient adjusting the effect of the two objectives.
Let us denote A  RN K as the weighted scalar cluster membership matrix, given by  (cid:1)  Aab=  1  nb  if (cid:5)xa   Cb if (cid:5)xa /  Cb,  0  (2) where nb is the number of data points belonging to cluster Cb and AT A= IK , where IK denotes a K K identity matrix.
Let us denote D as the diagonal matrix whose (a,a) entry is the sum of the entries of row a in the afﬁnity matrix W. The normalized Laplacian matrix (von Luxburg, 2007) is given by   L= I D    1  2 WD    1 2 .
The objective of normalized cut-based SC is formulated as  (cid:2)  (cid:3) AT  LA  .
minimize  A  trace  (3)  (4)  As discussed in the literature (Bishop, 2006  Duda et al., 2001  Hastie et al., 2009), if the data X has zero sample means, the objective of the KM is given by  maximize  (5) We further generalize (5) by applying the feature map φ( ): R F on X, then the centered data in F is denoted as X  , given by  trace(AT XT XA).
A  X  =[φ((cid:5)x1)  (cid:5)µ ,φ((cid:5)x2)  (cid:5)µ ,...,φ((cid:5)xN )  (cid:5)µ ],  (6) where φ((cid:5)xi) is the feature map applied on the column vector of the i-th data point in F, (cid:5)µ  is the global mean in F (Girolami, 2002).
The inner product XT X in (5) can be combined using the kernel trick G((cid:5)xu,(cid:5)xv)= φ((cid:5)xu)T φ((cid:5)xv), where G( , ) is a Mercer kernel.
We denote Gc as the centered kernel matrix as Gc= PGP, where P is the centering matrix P= IN  (1/N)(cid:5)1T N , G is the kernel matrix, IN is the N N identity matrix, (cid:5)1N is a column vector of N  ones.
Without loss of generality, the KM objective in (5) can be equivalently written as  maximize  A  trace(AT GcA).
(7)  OKLC  (8)  (cid:3)  (cid:2)  AT GcA  Then the objective of KL integration becomes  (cid:2)  (cid:3) (1 κ) trace  A  trace  AT  LA minimize subject to AT A= IK , 0  κ 1.
To solve the optimization problem without tuning the ad hoc parameter κ, Wang et al.
formulate it as a trace quotient of the two components (Wang et al., 2009).
The trace quotient is then further relaxed as a maximization of quotient trace, given by  trace (AT  LA)   1(AT GcA)  A  maximize subject to AT A= IK .
(9)  The problem in (9) is a generalized Rayleigh quotient and the optimal solution   is obtained in the generalized eigenvalue problem.
To maximize this A Gc, where objective, A +  is approximated as the largest K eigenvectors of  L  is the pseudo inverse of  L (Wang et al., 2009).
L  +     2.2 Combine kernel and Laplacian as additive models  for clustering  As discussed, the original KL algorithm is proposed to optimize the generalized Rayleigh quotient objective.
In this article, we propose an alternative integration method using a different notation of Laplacian (von  Luxburg, 2007), ˆL, given by  ˆL= D   1/2WD   1/2,  (10)  where D and W are deﬁned the same as in (3).
The objective of spectral clustering is equivalent to maximizing the term as  trace(AT ˆLA).
maximize  A  Therefore, the objective of the KL integration can be rewritten in an additive form, given by  (cid:4)  (cid:5)  κAT ˆLA+(1 κ)AT GcA  (11)  (12)  A  trace  maximize subject to AT A= Ik , 0  κ 1,  where A, Gc are deﬁned the same as in (8), κ is the free parameter to adjust the effect of kernel and Laplacian in KL integration.
If κ is pre-deﬁned, (12) is a Rayleigh quotient problem and the optimal A can be obtained from eigenvalue decomposition, known as the spectral relaxation (Ding and He,  2004).
Therefore, to maximize this objective, we denote  = κˆL+(1 κ)Gc     thus A  is solved as the dominant K eigenvectors of  .
In Sections 2.1 and 2.2, two different methods are investigated to integrate a single Laplacian matrix with a single kernel matrix for clustering, where the main difference is to either optimize the cluster assignment afﬁnity matrix A as a generalized Rayleigh quotient (ratio model) or as a Rayleigh quotient (additive model).
The main advantage of the ratio-based solution is to avoid tuning the parameter κ.
However, since the main contribution of this article is to optimize the combination of multiple kernels and Laplacians, the coefﬁcients assigned on each kernel and Laplacian still need to be optimized.
Moreover, the optimization of the additive integration model is computationally simpler than optimizing the ratio-based model.
Therefore, in the following sections we will focus on extending the additive KL integration to multiple sources.
additive model solved with bi-level optimization  2.3 Clustering by multiple kernels and Laplacians: an Let us denote a set of graphs as Hi, i  1,...,r , all having N vertices, and a set of Laplacians ˆLi constructed from Hi as (10).
Let us also denote a set of  119  [10:56 10/12/2010 Bioinformatics-btq569.tex]  Page: 119 118 126   S.Yu et al.
(cid:7)  (cid:6)  Q1:  A,(cid:5)θ  (13)  maximize  AT (ˆŁ+G)A  centered kernel matrices as Gcj, j  1,...,s  with N samples.
To extend (12) by incorporating multiple kernels and Laplacians for clustering, we propose a strategy to learn their optimal-weighted convex linear combinations.
The extended objective function is then given by JQ1 =trace subject to  Ł= r(cid:8) G= s(cid:8) r(cid:8) =1, i=1 θl  0, l=1,...,(r+s), AT A= IK ,  θj+rGcj, s(cid:8) j=1  j=1 =1,   Li,  j+r θδ  i=1  θδ i  θi  where θ1,...,θr and θr+1,...,θr+s are, respectively, the optimal coefﬁcients assigned to the Laplacians and the kernels.
G and  Ł are, respectively, the  combined kernel matrix and the combined Laplacian matrix.
The κ parameter in (12) is replaced by the coefﬁcients assigned on each individual data sources.
To solve Q1, in the ﬁrst phase we maximize JQ1 with respect to A, keeping (cid:5)θ ﬁxed (initialized by random guess).
In the second phase, we maximize JQ1 with respect to (cid:5)θ, keeping A ﬁxed.
The two phases optimize the same objective and repeat until convergence locally.
When (cid:5)θ is ﬁxed, denoting  =  Ł+  G, Q1 is exactly a Rayleigh quotient problem and the    can be solved as a eigenvalue problem of  .
When A is ﬁxed, optimal A the problem reduces to the optimization of the coefﬁcients θl with given cluster memberships.
In Supplementary Material 2, we show that when the A is given, Q1 can be formulated as Kernel Fisher Discriminant (KFD) in the high-dimensional feature space F. We introduce W =[(cid:5)w1,...,(cid:5)wK], a projection matrix determining the pairwise discriminating hyperplane.
Since the discriminant analysis is invariant to the magnitude of (cid:5)w, we assume that W T W = IK , thus Q1 can be equivalently formulated as  (cid:2)  (cid:6)  (cid:3) 1  JQ2= trace  W T AT AW  W T AT (G+ ˆŁ)AW  ,  (14)  (cid:7)  Q2: maximize  A,W ,(cid:5)θ  θi  i=1  s.t.
AT A= Ik , W T W = Ik , ˆŁ= r(cid:8) ˆLi, G= s(cid:8) θl  0, l=1,...,(r+s), r(cid:8) =1.
i=1  s(cid:8) j=1  θj+rGcj,  =1,  j+r θδ  j=1  θδ i  The bi-level optimization to solve Q1 corresponds to two steps to solve Q2.
In the ﬁrst step (clustering), we set W = Ik and optimize A, which is exactly the additive kernel Laplacian integration as (12)  in the second step (KFD), we ﬁx A and optimize W and (cid:5)θ.
Therefore, the two components optimize toward the same objective as a Rayleigh quotient in F so the iterative optimization converges to a local optimum.
Moreover, in the second step, we are not interested in the separating hyperplane deﬁned in W, instead, we only need the optimal coefﬁcients θl assigned on the Laplacians and the kernels.
It is known that Fisher discriminant analysis is related to the least squares approach (Duda et al., 2001), and the KFD (Mika et al., 1999) is related  120  to and can be solved as a least squares support vector machine (LS-SVM), proposed by (Suykens et al., 2002).
The problem of optimizing multiple kernels for supervised learning (MKL) has been studied by Lanckriet et al.
(2004) and Bach et al.
(2004).
In our recent work Yu et al.
(2010b), we derive the MKL extension for LSSVM and propose some efﬁcient solutions to solve the problem.
In this article, the KFD problems are formulated as LSSVM MKL and solved by semi-inﬁnite programming (SIP  Sonnenburg et al., 2006).
The concrete solutions and algorithms are presented in Yu et al.
(2010b).
Algorithm 2.1: OKLC(Gc1,...,Gcs,ˆL1,...,ˆLr ,K)  ,...,θ(0) r+s  comment: Obtain the  (0) using the initial guess of θ(0) 1 A(0) Eigenvalue decomposition( (0),K) γ =0 while ( A    ) step1: F(γ)  A(γ) step2: θ(γ) ,...,θ(γ) step3: θ(γ) 1 ,...,θ(γ) r+1 step4:  (r+1)  θ(γ) r+1G(γ) θ(γ) step5: A(γ+1) Eigenvalue decomposition( (γ+1),K) step6:  A=  A(γ+1) A(γ)  2/  A(γ+1)  2 step7: γ := γ+1 ,...,θ(γ)  r  SIP-LSSVM-MKL(ˆL1,...,ˆLr ,F(γ)) r+s SIP-LSSVM-MKL(Gc1,...,Gcs,F(γ)) ˆL(γ) +...+θ(γ)  +...+θ(γ) r r+sG(γ) cs                              ˆL(γ) r +  do  c1  1  1  ,θ(γ) r+1  ,...,θ(γ) r+s)  r  return (A(γ),θ(γ) 1  2.3.1 Optimize A with given θ When θ are given, the kernel-Laplacian combined matrix   is also ﬁxed  therefore, the optimal A can be found as the dominant K number of eigenvectors of  .
2.3.2 Optimize θ with given A When A is given, the optimal θ assigned on Laplacians can be solved via the following KFD problem  (cid:2)  (cid:6)  (cid:3) 1  (cid:7)  W T AT ˆŁAW  (15)  Q3: maximize  W ,(cid:5)θ  W T AT AW  JQ3= trace s.t.
W T W = Ik , ˆŁ= r(cid:8) ˆLi, θi  0, i=1,...,r, r(cid:8) i=1  =1.
i=1  θδ i  θi  In our recent work, we have found that the δ parameter controls the sparseness of source coefﬁcients θ1,...,θr (Yu et al., 2010b).
The issue of sparseness in MKL is also addressed by Kloft et al.
(2009).
When δ is set to 1, the optimized solution is sparse, which assigns dominant values to only one or two Laplacians (kernels) and zero values to the others.
The sparseness is useful to distinguish relevant sources from a large number of irrelevant data sources.
However, in many applications, there are usually a small number of sources and most of these data sources are carefully selected and preprocessed.
Thus, they often are directly relevant to the problem.
In these cases, a sparse solution may be too selective to thoroughly combine the complementary information in the data sources.
We may thus expect a non-sparse integration method which smoothly distributes the coefﬁcients on multiple kernels and Laplacians and, at the same time, leverages their effects in the objective optimization.
We have proved that when δ is set to 2, the KFD step in (15) optimizes the L2-norm of multiple kernels, which yields a non-sparse solution.
If we set δ to 0, the cluster objective is simpliﬁed as to averagely combine multiple kernels and Laplacians.
In this article, we set δ  [10:56 10/12/2010 Bioinformatics-btq569.tex]  Page: 120 118 126   to three different vales (0, 1, 2) to, respectively, optimize the sparse, average and non-sparse coefﬁcients on kernels and Laplacians.
When δ is set to 1, the KFD problem in Q3 is solved as LSSVM MKL  (Yu et al., 2010b), given by  Q4: minimize  (cid:5)β,t  s.t.
(cid:5)βT b Y  (cid:5)1   1 b  (16)  b  1 2  (cid:5)βT  K(cid:8) b=1  (cid:5)βb  K(cid:8) t+ 1 2λ b=1 N(cid:8) βab=0, b=1,...,K, a=1 t  K(cid:8)  (cid:5)βT  ˆLi  b  b=1  (cid:5)βb, i=1,...,r, b=1,...,K,  where (cid:5)β is the vector of dual variables, t is a dummy variable in optimization,  a is the index of data samples, b is the cluster label index of the discriminating problem in KFD, Yb is the diagonal matrix representing the binary cluster assignment, the vector on the diagonal of Yb is equivalent to the b-th column of an afﬁnity matrix Fab using  +1, 1  to discriminate the cluster assignments, given by  if Aab  0, a=1,...,N , b=1,...,K if Aab=0, a=1,...,N , b=1,...,K .
(17)  (cid:13)+1  1  Fab=  The problem presented in Q4 has an efﬁcient solution based on SIP, which is (cid:14) presented in Equation forty-one of (Yu et al., 2010b).
The optimal coefﬁcients θi correspond to the dual variables bounded by the quadratic constraint t  K b=1  (cid:5)βb in (16).
When δ is set to 2, the solution to Q3 is given by  (cid:5)βT  ˆLi  b  Q5: minimize  (cid:5)β,t  (cid:5)βT b Y  (cid:5)1   1 b  (18)  (cid:5)βT  K(cid:8) j=1  (cid:5)βb  K(cid:8) b=1 βab=0, b=1,...,K,  b  s.t.
1 2  t+ 1 2λ N(cid:8) a=1 t   (cid:5)s  2, (cid:14) (cid:5)βT ˆLr K b=1  b  where(cid:5)s= (cid:14)  (cid:5)βT  b  ˆL1  (cid:5)βb,...,  K b=1  (cid:5)βb T , other variables are deﬁned the  same as (16).
The problem Q5 also has an efﬁcient solution presented in Equation forty-two in our recent work (Yu et al., 2010b).
The main difference between Q4 and Q5 is that Q4 optimizes the L  norm of multiple kernels, whereas Q5 optimizes the L2 norm.
The optimal coefﬁcients solved by Q4 are more likely to be sparse  in contrast, the ones obtained by Q5 are non-sparse.
The algorithm to solve Q4 and Q5 is concretely explained in Algorithm 0.2 in Yu et al.
(2010b).
Analogously, the coefﬁcients assigned on kernels can also be obtained in  (cid:3)  W T AT GAW  (19)  (cid:2)  (cid:3) 1(cid:2)  W T AT AW  Q6: max W ,(cid:5)θ  the similar formulation, given by JQ6= trace s.t.
W T W = IK , G= s(cid:8) θj+r  0, j=1,...,s, s(cid:8) j=1  θj+rGcj,  =1,  j+r θδ  j=1  where most of the variables are deﬁned in the similar way as Q3 in (15).
The  main difference is that the Laplacian matrices ˆL and ˆLi are replaced by the centered kernel matrices G and Gcj.
The solution of Q6 is exactly the same as Q3, depending on the δ value, it can be solved either as Q4 or Q5.
2.3.3 Algorithm: optimized kernel Laplacian clustering As discussed, the proposed algorithm optimizes A and θ iteratively to convergence.
OKLC  The coefﬁcients assigned to the Laplacians and the kernels are optimized in parallel.
Putting all the steps together, the pseudocode of the proposed optimized kernel Laplacian clustering (OKLC) is presented in Algorithm 2.1.
The iterations in Algorithm 2.1 terminate when the cluster membership matrix A stops changing.
The tolerance value   is a constant value as the stopping rule of OKLC, and in our implementation it is set to 0.05.
In our implementation, the ﬁnal cluster assignment is obtained using the KM algorithm on A(γ).
In Algorithm 2.1, we consider the δ as predeﬁned values.
When δ is set to 1 or 2, the SIP-LSSVM-MKL function optimizes the coefﬁcients as the formulation in (16) or (18), respectively.
It is also possible to combine Laplacians and kernels in an average manner.
In this article, we compare all these approaches and implement three different OKLC models.
These three models are denoted as OKLC model 1, OKLC model 2 and OKLC model 3 which respectively correspond to the objective Q2 in (14) when δ=1, average combination, δ=2.
2.4 Datasets and experimental setup The proposed OKLC models are validated in two real applications to combine heterogeneous datasets in clustering analysis.
The datasets in the ﬁrst experiment is taken from the work of multi-view text mining for disease gene identiﬁcation (Yu et al., 2010a).
The datasets contain nine different gene-by-term text proﬁles indexed by nine controlled vocabularies.
The original disease relevant gene dataset contains 620 genes which are known to be relevant to 29 diseases.
To avoid the effect of imbalanced clusters which may affect the evaluation, we only keep the diseases that have 11 40 relevant genes.
This results in 14 genetic diseases and 278 genes.
Because the present article is focused on non-overlapping ( hard ) clustering, we further remove 16 genes which are relevant to multiple diseases.
The remaining 262 disease- relevant genes are clustered into 14 clusters and evaluated biologically by their disease labels.
For each vocabulary-based gene-by-term data source, we create a kernel matrix using the linear kernel function and the kernel normalization method proposed by (Shawe-Taylor and Cristianini, 2004), (Chapter 5).
An element in the kernel matrix is then equivalent to the value of cosine similarity of two vectors (Baeza-Yates and Ribeiro-Neto, 1999).
This kernel is then regarded as the weighted adjacency matrix to create the Laplacian matrix.
In total, nine kernels and nine Laplacian matrices are combined in clustering.
The datasets in the second experiment are taken from Web of Science (WOS) database provided by Thomson Scientiﬁc (Liu et al., 2010).
After preprocessing, the dataset contains 8305 journals categorized in 22 scientiﬁc ﬁelds.
To create a balanced benchmark data for evaluation, we select seven ﬁelds consisting 1421 journals.
The titles, abstracts and keywords of the journal publications are indexed by a text mining program using no controlled vocabulary.
The weights of terms are calculated using four weighting schemes: TF-IDF, IDF, TF and binary.
The citations among journals are also investigated from four different aspects: cross-citation, co-citation, bibliographic coupling and binary cross-citation.
The lexical similarities are represented as normalized linear kernel matrices (using the same methods applied on the disease data) and the citation metrics are regarded as weighted adjacency matrices to create the Laplacians.
Totally, four kernels and four Laplacians are combined on journal data.
The details about the two datasets are presented in Supplementary Material 3.
The datasets used in our experiments are provided with labels  therefore, the clustering performance is evaluated as comparing the automatic partitions with the labels using adjusted rand index (ARI  Hubert and Arabie, 1985) and normalized mutual information (NMI  Strehl and Ghosh, 2002).
To evaluate the ARI and NMI performance, we set K =14 on disease data and K =7 on journal data.
We also tune the OKLC model using different K values.
3 RESULTS We implement the proposed OKLC models to integrate multiple kernels and Laplacians on disease data and journal set data.
121  [10:56 10/12/2010 Bioinformatics-btq569.tex]  Page: 121 118 126   S.Yu et al.
Table 1.
Performance on disease dataset  Algorithm ARI  OKLC 1 OKLC 2 OKLC 3 CSPA HGPA MCLA QMI EACAL AdacVote  0.5859  0.0390 0.5369  0.0493 0.5469  0.0485 0.4367  0.0266 0.5040  0.0363 0.4731  0.0320 0.4656  0.0425 0.4817  0.0263 0.1394  0.0649  P-value    2.97E-04 1.10E-03 5.66E-11 8.47E-07 2.26E-10 7.70E-11 2.50E-09 1.47E-16  NMI 0.7451  0.0194 0.7106  0.0283 0.7268  0.0360 0.6362  0.0222 0.6872  0.0307 0.6519  0.0210 0.6607  0.0255 0.6686  0.0144 0.4093  0.0740  P-value    9.85E-05 2.61E-02 4.23E-12 7.42E-07 5.26E-14 8.49E-11 5.54E-12 6.98E-14  All the comparing methods combine nine kernels and nine Laplacians.
The mean values and the SDs are observed from 20 random repetitions.
The best performance is shown in bold.
The P-values are statistically evaluated with the best performance using paired t-test.
Table 2.
Performance on journal dataset  Algorithm ARI  OKLC 1 OKLC 2 OKLC 3 CSPA HGPA MCLA QMI EACAL AdacVote  0.7346  0.0584 0.7235  0.0660 0.7336  0.0499 0.6703  0.0485 0.6673  0.0419 0.6571  0.0746 0.6592  0.0593 0.5808  0.0178 0.5899  0.0556  P-value  0.3585 0.0944   8.84E-05 4.74E-06 6.55E-05 5.32E-06 3.85E-11 1.02E-07  NMI 0.7688  0.0364 0.7532  0.0358 0.7758  0.0362 0.7173  0.0291 0.7141  0.0269 0.7128  0.0463 0.7250  0.0326 0.7003  0.0153 0.6785  0.0325  P-value  0.1472 0.0794   1.25E-05 5.19E-06 2.31E-05 1.30E-05 6.88E-09 6.51E-09  All the comparing methods combine four kernels and four Laplacians.
The mean values and the SDs are observed from 20 random repetitions.
The best performance is shown in bold.
The P-values are statistically evaluated with the best performance using paired t-test.
To compare the performance, we also apply six popular ensemble clustering methods mentioned in relevant work (Yu et al., 2010a) to combine the partitions of individual kernels and Laplacians as a consolidated partition.
These six methods are CSPA (Strehl and Ghosh, 2002), HGPA (Strehl and Ghosh, 2002), MCLA (Strehl and Ghosh, 2002), QMI (Topchy et al., 2005), EACAL (Fred and Jain, 2005) and AdacVote (Ayad and Kamel, 2008).
As shown in Tables 1 and 2, the performance of OKLC algorithms is better than all the compared methods and the improvement is signiﬁcant.
On disease data, the best performance is obtained by OKLC model 1, which uses sparse coefﬁcients to combine nine text mining kernels and nine Laplacians to identify disease-relevant clusters (ARI: 0.5859, NMI: 0.7451).
On journal data, all three OKLC models perform comparably well.
The best one seems coming from OKLC model 3 (ARI: 0.7336, NMI: 0.7758), which optimizes the non-sparse coefﬁcients on the four kernels and four Laplacians.
To evaluate whether the combination of kernel and Laplacian indeed improve the clustering performance, we ﬁrst systematically compared the performance of all the individual data sources using KM and SC.
As shown in Supplementary Material 4, on disease data, the best KM performance (ARI 0.5441, NMI 0.7099) and SC (ARI 0.5199, NMI 0.6858) performance are obtained on LDDB text mining proﬁle.
Next, we enumerate all the paired combinations of a single kernel and a single Laplacian for clustering.
The integration is  122  based on Equation (12) and the κ value is set to 0.5 so the objectives of KM and SC are combined averagely.
The performance of all 45 paired combinations is presented in Supplementary Material 5.
As shown, the best KL clustering performance is obtained by integrating the LDDB kernel with KO Laplacian (ARI 0.5298, NMI 0.6949).
Moreover, we also found that the integration performance varies signiﬁcantly by the choice of kernel and Laplacian, which proves our previous point the KL performance is highly dependent on the quality of kernel and Laplacian.
Using the proposed OKLC algorithm, there is no need to enumerate all the possible paired combinations.
OKLC combines all the kernels and Laplacians and optimizes their coefﬁcients in parallel, yielding a comparable performance with the best paired combination of a single kernel and a single Laplacian.
that  In Figure 1, two confusion matrices of disease data for a single run are depicted.
The values on the matrices are normalized according to Rij = Cj/Ti, where Ti is the total number of genes belonging in disease i and Cj is the number of these Ti genes that were clustered to belong to class j.
First, it is worth noting that OKLC reduces the number of misclustered genes on breast cancer (Nr.1), cardiomyopathy (Nr.2) and muscular dystrophy (Nr.11).
Among the misclustered genes in LDDB, ﬁve genes (TSG101, DBC1, CTTN, SLC22A18, AR) in breast cancer, two genes in cardiomyopathy (COX15, CSRP3) and two genes in muscular dystrophy (SEPN1, COL6A3) are correctly clustered in OKLC model 1.
Second, there are several diseases where consistent misclustering occurs in both methods, such as diabetes (Nr.6) and neuropathy (Nr.12).
The intuitive confusion matrices correspond to the numerical evaluation results  as shown, the quality of clustering obtained by OKLC model 1 (ARI = 0.5898, NMI = 0.7429) is higher than LDDB.
The performance of individual data sources of journal data is shown in Supplementary Material 6.
The best KM (ARI 0.6482, NMI 0.7104) is obtained on the IDF kernel and the best SC (ARI 0.5667, NMI 0.6807) is obtained on the cross-citation Laplacian.
To combine the four kernels with four Laplacians, we evaluate all the 10 paired combinations and show the performance in Supplementary Material 7.
The best performance is obtained by integrating the IDF kernel with the cross-citation Laplacian (ARI 0.7566, NMI 0.7702).
As shown, the integration of lexical similarity information and citation-based Laplacian indeed improves the performance.
In Figure 2, the confusion matrices (also normalized) of journal data for a single run are illustrated.
We compare the best individual data source (IDF with kernel KM, ﬁgure on the left) with the OKLC model 1.
In the confusion matrix of IDF KM, 79 journals belonging to agriculture science (Nr.1) are misclustered to environment ecology (Nr.3), 9 journals are misclustered to pharmacology and toxicology (Nr.7).
In OKLC, the number of agriculture journals misclustered to environment ecology is reduced to 45, and the number to pharmacology and toxicology is reduced to 5.
On other journal clusters, the performance of the two models is almost equivalent.
We also investigated the performance of combining only multiple kernels or multiple Laplacians.
On the disease dataset, we combined the nine kernels and the nine Laplacians for clustering, respectively, using all the compared methods in Tables 1 and 2.
On the journal dataset, we combine the four text mining kernels and the four citation Laplacians.
The proposed OKLC method is simpliﬁed as only optimizing coefﬁcients on Laplacians (step 2 in Algorithm 2.1)  [10:56 10/12/2010 Bioinformatics-btq569.tex]  Page: 122 118 126   A  LDDB K means (ARI=0.5371, NMI=0.7036)  l  s s a C e u r T     1  2  3  4  5  6  7  8  9  10  11  12  13  14  1  2  3  4  5  6  8  7 Clustered Class  9  10 11 12 13 14  1  0.9  0.8  0.7  0.6  0.5  0.4  0.3  0.2  0.1  0  B  OKLC model 1 (ARI=0.5898, NMI=0.7429)  l  s s a C e u r T     1  2  3  4  5  6  7  8  9  10  11  12  13  14  1  2  3  4  5  6  8  7 Clustered Class  9  10 11 12 13 14  OKLC  1  0.9  0.8  0.7  0.6  0.5  0.4  0.3  0.2  0.1  0  Fig.
1.
Confusion matrices of disease data obtained by kernel KM on LDDB (A) and OKLC model 1 integration (B).
The numbers of cluster labels are consistent with the numbers of diseases presented in Supplementary Material 3.
In each row of the confusion matrix, the diagonal element represents the fraction of correctly clustered genes and the off-diagonal non-zero element represents the fraction of misclustered genes.
A  IDF K means (ARI=0.6365, NMI=0.7127)     l  s s a C e u r T     1  2  3  4  5  6  7     1  2  3  4  5  Clustered Class  6  7  1  0.9  0.8  0.7  0.6  0.5  0.4  0.3  0.2  0.1  0  B  OKLC model 1 (ARI=0.7389, NMI=0.7701)     l  s s a C e u r T     1  2  3  4  5  6  7     1  2  3  4  5  Clustered Class  6  7  1  0.9  0.8  0.7  0.6  0.5  0.4  0.3  0.2  0.1  0  Fig.
2.
Confusion matrices of journal data obtained by kernel KM on IDF (A) and OKLC model 1 integration (B).
The numbers of cluster labels are consistent with the numbers of ESI journal categories presented in Supplementary Material 3.
In each row, the diagonal element represents the fraction of correctly clustered journals and the off-diagonal non-zero element represents the fraction of misclustered journals.
or kernels (step 3).
As shown in Supplementary Material 8, the performance of OKLC is also comparable to the best performance obtained either by kernel combination or Laplacian combination.
In particular, of all the methods we compared, the best performance is all obtained on OKLC models or its simpliﬁed forms.
It is interesting to observe that the average combination model (OKLC model 2) performs quite well on the journal dataset but not on the disease dataset.
This is probably because most of the sources in journal dataset are relevant to the problem, whereas in disease dataset some data sources are noisy, and thus the integration of disease data sources is a non-trivial task.
We expect that the other two OKLC models (models 1 and 3) optimize the coefﬁcients assigned on the kernels and the Laplacians to leverage multiple sources in integration and, at the same time, to increase the robustness of the combined model on combining relevant and irrelevant data sources.
To evaluate whether the optimized weights assigned on individual sources have correlation with the performance, we  compare the rank of coefﬁcients with the rank of performance from Tables 3 6.
As shown, the largest coefﬁcients correctly indicate the best individual data sources.
It is worth noting that in multiple kernel learning, the rank of coefﬁcients are only moderately correlated with the rank of individual performance.
In our experiments, the MeSH kernel gets the second largest weights though its performance in evaluation is low.
In MKL, it is usual that the best individual kernel found by cross-validation may not lead to a large weight when used in combination (Ye et al., 2008).
Kernel fusion combines multiple sources at a reﬁned granularity, where the  moderate  kernels containing weak and insigniﬁcant information could complement to other kernels to compose a  good  kernel containing strong and signiﬁcant information.
Though such complementary information cannot be incorporated when cross-validation is used to choose a single best kernel, these  moderate  kernels are still useful when combined with other kernels (Ye et al., 2008).
Based on the ranks presented in Tables 5 and 6, we calculate the Spearman correlations  123  [10:56 10/12/2010 Bioinformatics-btq569.tex]  Page: 123 118 126   S.Yu et al.
Table 3.
The average values of coefﬁcients of kernels and Laplacians in disease dataset optimized by OKLC model 1  Table 5.
The average values of coefﬁcients of kernels and Laplacians in disease data set optimized by OKLC model 3  Rank of θ  Source  θ value  Performance rank  Rank of θ  Source  θ value  Performance rank  1 2 3 4  1  LDDB kernel MESH kernel Uniprot kernel Omim kernel  0.6113 0.3742 0.0095 0.0050  LDDB Laplacian  1  1 6 5 2  1  The sources assigned with 0 coefﬁcient are not presented.
The performance is ranked by the average values of ARI and NMI evaluated on each individual sources (Supplementary Material 3).
Table 4.
The average values of coefﬁcients of kernels and Laplacians in journal data set optimized by OKLC model 1  Rank of θ  Source  θ value  Performance rank  1 2 3 4  1  IDF kernel TF kernel Binary kernel TF-IDF kernel  0.7574 0.2011 0.0255 0.0025  Bibliographic Laplacian  1  1 3 2 4  1  The sources assigned with 0 coefﬁcient are not presented.
The performance is ranked by the average values of ARI and NMI evaluated on each individual sources (Supplementary Material 5).
between the ranks of weights and the ranks of performance on both datasets.
The correlations of disease kernels, disease Laplacians, journal kernels and journal Laplacians are, respectively, 0.5657, 0.6, 0.8 and 0.4.
In some relevant work, the average Spearman correlations are mostly around 0.4 (Lanckriet et al., 2004  Ye et al., 2008).
Therefore, the optimal weights obtained in our experiments are generally consistent with the rank of performance.
As a spectral clustering algorithm, the optimal cluster number of OKLC can be estimated by checking the plot of eigenvalues (von Luxburg, 2007).
To demonstrate this, we investigated the dominant eigenvalues of the optimized combination of kernels and Laplacians.
In Figure 3, we compare the difference of three OKLC models with the pre-deﬁned K (set as equal to the number of class labels).
In practical research, one can predict the optimal cluster number by checking the  elbow  of the eigenvalue plot.
As shown in Figure 3, the  elbow  in disease data is quite obvious at the number of 14.
In journal data, the  elbow  is more likely to range from 6 to 12.
All the three OKLC models show a similar trend on the eigenvalue plot.
Moreover, in Supplementary Material 9 we also compare the eigenvalue curves using different K values as input.
As shown, the eigenvalue plot is quite stable with respect to the different inputs of K, which means the optimized kernel and Laplacian coefﬁcients are quite independent with the K value.
This advantage enables a reliable prediction about the optimal cluster number by integrating multiple data sources.
To investigate the computational time, we benchmark OKLC algorithms with other clustering methods on the two datasets.
As shown in Table 7, when optimizing the coefﬁcients, OKLC algorithm (models 1 and 3) spends longer time than the other methods to optimize the coefﬁcients on the Laplacians and  124  1 2 3 4 5 6 7 8 9  1 2 3 4 5 6 7 8 9  LDDB kernel MESH kernel OMIM kernel SNOMED kernel MPO kernel GO kernel eVOC kernel Uniprot kernel KO kernel  LDDB Laplacian MESH Laplacian OMIM Laplacian GO Laplacian eVOC Laplacian Uniprot Laplacian SNOMED Laplacian MPO Laplacian KO Laplacian  0.4578 0.3495 0.3376 0.3309 0.3178 0.3175 0.3180 0.3089 0.2143  0.6861 0.2799 0.2680 0.2645 0.2615 0.2572 0.2559 0.2476 0.2163  1 6 2 7 3 8 4 5 9  1 4 2 7 6 8 5 3 9  Table 6.
The average values of coefﬁcients of kernels and Laplacians in journal dataset optimized by OKLC model 3  Rank of θ  Source  θ value  Performance rank  1 2 3 4  1 2 3 4  IDF kernel Binary kernel TF kernel TF-IDF kernel  Bibliographic Laplacian Cocitation Laplacian Crosscitation Laplacian Binarycitation Laplacian  0.5389 0.4520 0.2876 0.2376  0.7106 0.5134 0.4450 0.1819  1 2 4 3  1 4 2 3  the kernels.
However, the proposed algorithm is still efﬁcient.
Considering the fact that the proposed algorithm yields much better performance and more enriched information (the ranking of the individual sources) than other methods, it is worth spending extra computational complexity on a promising algorithm.
4 CONCLUSION In this article, we propose a new clustering approach, OKLC, to optimize the combination of multiple kernels and Laplacians in clustering analysis.
The objective of OKLC is formulated as a Rayleigh quotient function and is solved iteratively as a bi-level optimization procedure.
In the simplest interface, the proposed algorithm only requires one input parameter, the cluster number K, from the user.
Moreover, depending on user s expectation to select the most relevant sources or to evenly combine all sources, the sparseness of coefﬁcient vector θ can be controlled via the parameter δ.
In our article, we propose three variants of the OKLC algorithm and validate them on two real applications.
The performance of clustering is systematically compared with a variety of algorithms  [10:56 10/12/2010 Bioinformatics-btq569.tex]  Page: 124 118 126   OKLC  OKLC model 1 OKLC model 2 OKLC model 3  A  25  B  80  OKLC model 1 OKLC model 2 OKLC model 3  disease labels  l  e u a v n e g e  i  70  60  50  40  30  20  10  journal labels  l  e u a v n e g e  i  20  15  10  5  0  0  2  4  6  8  10  12  14  order of the largest eigenvalues  16  18  20  0  0  2  4  6  8  10  12  14  16  18  20  order of the largest eigenvalues  Fig.
3.
The plot of eigenvalues (A and B) of the optimal kernel-Laplacian combination obtained by all OKLC models.
The parameter K is set as equivalent as the reference label numbers.
Table 7.
Comparison of CPU time of all algorithms  Algorithm  Disease data (s)  Journal data (s)  OKLC model 1 OKLC model 2 OKLC model 3 CSPA HGPA MCLA QMI EACAL AdacVote  42.39 0.19 37.74 9.49 10.13 9.95 9.36 9.74 9.22  1011.4 13.27 577.51 177.22 182.51 320.93 186.25 205.59 172.12  The reported values are averaged from 20 repetitions.
The CPU time is evaluated on Matlab v7.6.0 + Windows XP2 installed on a Laptop computer with Intel Core 2 Duo 2.26 GHz and 2 G memory.
and different experimental settings.
The proposed OKLC algorithms perform signiﬁcantly better than other methods.
Moreover, the coefﬁcients of kernels and Laplacians optimized by OKLC show strong correlation with the rank of performance of individual data source.
Though in our evaluation the K values are predeﬁned, in practical studies, the optimal cluster number can be consistently estimated from the eigenspectrum of the combined kernel Laplacian matrix.
The proposed OKLC algorithm demonstrates the advantage of combining and leveraging information from heterogeneous data structures and sources.
It is potentially useful in bioinformatics and many other application areas, where there is a surge of interest to integrate similarity-based information and interaction-based relationships in statistical analysis and machine learning.
Engineering(OPTEC),  Funding: The work was supported by (i) Research Council KUL: ProMeta, GOA Ambiorics, GOA MaNet, CoE EF/05/006, PFV/10/016 SymBioSys, START 1, Optimization in several PhD/postdoc & fellow grants  (ii) FWO: G.0302.07(SVM/Kernel), G.0318.05 (subfunctionalization), G.0553.06 (VitamineD), research communities (ICCoS, ANMMM, MLDM)  G.0733.09 (3UTR), G.082409 (EGFR)  (iii) IWT: PhD Grants, Eureka-Flite+, Silicos   IOF-SCORES4CHEM,  SBO-BioFrame, SBO-MoKa, SBO LeCoPro, SBO Climaqs, SBO POM, TBM-IOTA3, O&O-Dsquare  (iv) Belgian Federal Science Policy Ofﬁce: IUAP P6/25 (BioMaGNet, Bioinformatics and Modeling: from Genomes to Networks, 2007 2011), IUAP P6/04 (DYSCO, Dynamical systems, control and optimization, 2007- 2011)  (v) FOD:Cancer plans  (vi) Centre for R&D Monitoring of the Flemish Government  (vii) EU-RTD: ERNSI: European Research Network on System Identiﬁcation  FP7-HEALTH CHeartED  FP7-HD-MPC (INFSO-ICT-223854), COST intelliCIS, FP7-EMBOCON (ICT-248940).
Conﬂict of Interest: none declared.
REFERENCES Ayad,H.G.
and Kamel,M.S.
(2008) Cumulative voting consensus method for partitions  with a variable number of clusters.
IEEE Trans.
PAMI, 30, 160 173.
Bach,F.R.
et al.
(2004) Multiple kernel learning, conic duality, and the SMO algorithm.
In 21st International Conference on Machine Learning.
ACM, Banff, Alberta, pp.
6 13.
Baeza-Yates,R.
and Ribeiro-Neto,B.
(1999) Modern Information Retrieval.
ACM press.
Bishop,C.M.
(2006) Pattern Recognition and Machine Learning.
Springer,  New York, NY.
Csiszar,I.
and Tusnady,G.
(1984) Information geometry and alternating minimization  procedures.
Stat.
Decis., (Suppl.
1), 205 237.
Dhillon,L.S.
et al.
(2004) Kernel k-means, spectral clustering and normalized cuts.
In  Proceedings of the 10th ACM KDD.
ACM, Seattle, WA, pp.
551 556.
Ding,C.
and He,X.
(2004) K-means clustering via principal component analysis.
In 21st International Conference on Machine Learning.
ACM, Banff, Alberta, pp.
225 232.
Duda,R.O.
et al.
(2001) Pattern Classiﬁcation, 2nd edn.
John Wiley & Sons Inc., New  York, NY.
Fred,A.L.N.
and Jain,A.K.
(2005) Combining multiple clusterings using evidence  accumulation.
IEEE Trans.
PAMI, 27, 835 850.
Girolami,M.
(2002) Mercer kernel-based clustering in feature space.
IEEE Trans.
Neural  Netw., 13, 780 784.
Hagen,L.
and Kahng,A.
(1992) New spectral methods for ratio cut partitioning and  clustering.
IEEE Trans.
Comput.
Aided Des., 11, 1074 1085.
Hastie,T.
et al.
(2009) The Elements of Statistical Learning: Data Mining, Inference,  and Prediction, 2nd edn.
Springer.
Hubert,L.
and Arabie,P.
(1985) Comparing partition.
J.
Classiﬁc., 2, 193 218.
Kloft,M.
et al.
(2009) Efﬁcient and accurate Lp-norm multiple Kernel learning.
In  Advances in Neural Information Processing System 22, MIT Press.
Lanckriet,G.
et al.
(2004) Learning the kernel matrix with semideﬁnite programming.
J.
Machine Learning Res., 5, 27 72.
125  [10:56 10/12/2010 Bioinformatics-btq569.tex]  Page: 125 118 126   S.Yu et al.
Liu,X.
et al.
(2010) Weighted hybrid clustering by combining text mining and bibliometrics on large-scale journal database.
J.
Am.
Soc.
Inform.
Sci.
Technol., 61, 1105 1119.
Topchy,A.
et al.
(2005) Clustering ensembles: models of consensus and weak partitions.
IEEE Trans.
PAMI, 27, 1866 1881.  von Luxburg,U.
(2007) A tutorial on spectral clustering.
Stat.
Comput., 17,  Mika,S.
et al.
(1999) Fisher discriminant analysis with kernels.
IEE N.N.
Singal.
395 416.
Process., 9, 41 48.
Ng,A.Y.
(2001) On spectral clustering: analysis and an algorithm.
In Advances in Neural  Information Processing 14, pp.
849 856.
Wang,F.
et al.
(2009) Integrated KL(K-means-Laplacian) clustering: a new clustering approach by combining attribute data and pairwise relations.
In Proccedings of SDM 09, SIAM Press, pp.
38 48.
Shawe-Taylor,J.
and Cristianini,N.
(2004) Kernel Methods for Pattern Analysis.
Ye,J.
et al.
(2007) Nonlinear adaptive distance metric learning for clustering.
In  Cambridge University Press, Cambridge.
Proccedings of the 13th ACM KDD, ACM, San Jose, CA, pp.
123 132.
Shi,J.
and Malik,J.
(2000) Normalized cuts and image segmentation.
IEEE Trans.
PAMI,  Ye,J.
et al.
(2008) Multi-class discriminant kernel learning via convex programming.
22, 888 905.
J. Mach.
Learn.
Res., 9, 719 758.
Sonnenburg,S.
et al.
(2006) Large scale multiple Kernel learning.
J. Mach.
Learn.
Res.,  Yu,S.
et al.
(2010a) Gene prioritization and clustering by multi-view text mining.
BMC  7, 1531 1565.
Bioinformatics, 11, 1 28.
Strehl,A.
and Ghosh,J.
(2002) Cluster ensembles: a knowledge Reuse framework for  Yu,S.
et al.
(2010b) L2-norm multiple kernel learning and its application to biomedical  combining multiple partitions.
J. Mach.
Learn.
Res., 3, 583 617.  data fusion.
BMC Bioinformatics, 11, 1 53.
Suykens,J.A.K.
et al.
(2002) Least Squares Support Vector Machines.
World Scientiﬁc  Publishing, Singapore.
126  [10:56 10/12/2010 Bioinformatics-btq569.tex]  Page: 126 118 126
