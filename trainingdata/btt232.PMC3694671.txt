BIOINFORMATICS  Vol.
29 ISMB/ECCB 2013, pages i98 i107 doi:10.1093/bioinformatics/btt232  A framework for scalable parameter estimation of gene circuit models using structural information Hiroyuki Kuwahara1,y 1Computer, Electrical and Mathematical Sciences and Engineering Division, King Abdullah University of Science and Technology (KAUST), Thuwal 23955-6900, Saudi Arabia and 2Department of Statistics, Texas A&M University, College Station, TX 77843, USA  , Suojin Wang2 and Xin Gao1,*  , Ming Fan1,y  ABSTRACT Motivation: Systematic and scalable parameter estimation is a key to construct complex gene regulatory models and to ultimately facilitate an integrative systems biology approach to quantitatively understand the molecular mechanisms underpinning gene regulation.
Results: Here, we report a novel framework for efficient and scalable parameter estimation that focuses specifically on modeling of gene circuits.
Exploiting the structure commonly found in gene circuit models, this framework decomposes a system of coupled rate equa- tions into individual ones and efficiently integrates them separately to reconstruct the mean time evolution of the gene products.
The accur- acy of the parameter estimates is refined by iteratively increasing the accuracy of numerical integration using the model structure.
As a case study, we applied our framework to four gene circuit models with complex dynamics based on three synthetic datasets and one time series microarray data set.
We compared our framework to three state-of-the-art parameter estimation methods and found that our ap- proach consistently generated higher quality parameter solutions effi- ciently.
Although many general-purpose parameter estimation methods have been applied for modeling of gene circuits, our results suggest that the use of more tailored approaches to use domain-spe- cific information may be a key to reverse engineering of complex bio- logical systems.
Availability: http://sfb.kaust.edu.sa/Pages/Software.aspx Contact: xin.gao@kaust.edu.sa Supplementary information: Supplementary data are available at Bioinformatics online.
1 INTRODUCTION  A quantitative understanding of how expression of genes is con- trolled in time and space through the integration of computa- tional and experimental methods is a main goal of molecular systems biology (Church, 2005  Ideker et al., 2001  Kitano, 2002).
Among the major obstacles in such an integrative systems biology approach is the construction of kinetic models that quan- titatively support the current knowledge of a given gene circuit.
What makes the construction of gene circuit models especially difficult is the quantification of all reaction parameters, as direct measurements of gene regulation kinetics are seldom available.
Thus, model parameters are often estimated indirectly using more readily available experimental data [e.g.
Schoeberl et al.
(2002)  Zwolak et al.
(2005)].
Even in modeling of relatively well-known gene circuits, such as the phage-l lysis lysogeny  *To whom all correspondence should be addressed.
y The authors wish it to be known that, in their opinion, the first two authors should be regarded as joint First Authors.
developmental pathway (Arkin et al., 1998), there are a number of unknown parameters, which are phenomenologically determined by fitting the model s outputs to some experimental observations.
gene  in the  The quality of time series gene expression data is crucial to the construction of phenomenological models that accurately cap- ture the observed dynamical characteristics of a given gene cir- cuit.
With advances expression detection technologies, single-molecule level measurements of gene expres- sion can now be obtained in a wide range of organisms (Baugh et al., 2011  Cai et al., 2006  Golding et al., 2005  Materna et al., 2010  Newman et al., 2006  Suter et al., 2011  Taniguchi et al., 2010  Zenklusen et al., 2008).
In particular, recent advances in fluorescence imaging techniques (Joo et al., 2008  Raj and van Oudenaarden, 2009) facilitate real-time measurements of gene expression at the single-molecule level, making more accurate parameter estimation for quantitative modeling of gene circuits possible.
Such single-cell gene expression data are, however, noisy because of intrinsic and extrinsic fluctuations (Cai et al., 2006  Elowitz et al., 2002  Newman et al., 2006  Golding et al., 2005  Raj et al., 2006  Raser and O Shea, 2005  Suter et al., 2011  Taniguchi et al., 2010) and often limited to lower concentration molecular species such as mRNAs (Kulkarni, 2011  van Oijen, 2011).
Because of such noisy gene expression and highly non- linear dynamics involved in transcriptional regulations, manual parameter estimation in nontrivial gene circuit models is gener- ally infeasible.
To systematically estimate the parameters of a biochemical kinetic model, the parameter estimation problem is often treated as an optimization problem in which parameter values are se- lected to minimize a certain objective function (Schwartz, 2008).
Although several stochastic optimization and Bayesian-based methods were successfully applied to estimate parameters of bio- chemical models (Baker et al., 2010  Moles et al., 2003), they often suffer from scalability problems when there are a large number of unknown parameters.
To make the estimation of par- ameters more efficient, several methods have been proposed to reduce the parameter search space by decomposing rate equa- tions (Jia et al., 2011  Koh et al., 2006  Zhan and Yeung, 2011).
However, the quality of these methods strongly depends on in- terpolation and smoothing functions, which are often independ- ent of the underlying model structure and can add strong artifacts.
Recently, Kalman filter-based approaches, which can alleviate the scalability problem, were applied to efficiently esti- mate kinetic parameters (Lillacci and Khammash, 2010  Quach et al., 2007  Sun et al., 2008).
Although these approaches support parameter estimation of models with unobserved variables, a  ß The Author 2013.
Published by Oxford University Press.
This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/ by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited.
For commercial re-use, please contact journals.permissions@oup.com   recent comparative study showed that their performance could be sensitive to the initial condition, and estimated parameters might be far from the true ones if the initial guess was not close to the solution (Liu and Niranjan, 2012).
Most of these existing methods are applicable to parameter estimation prob- lems of generic dynamical models, as they do not demand any domain-specific knowledge.
Although these general-purpose methods can easily be applied to modeling of any biological systems, it is clear that each of these methods has its advantages and disadvantages, and that no single method is versatile enough to efficiently give optimal parameter sets for all biological models.
This observation has led us to develop a more tailored parameter estimation method that focuses on a specific yet im- portant subclass of biological models, namely, gene circuit models.
framework  called Parameter Estimation  To facilitate the mechanistic construction of thermodynamics- based models (Shea and Ackers, 1985  Sherman and Cohen, 2012) that describe the quantitative behavior of gene regulation from time series mRNA data, we developed a novel parameter by estimation Decomposition and Integration (PEDI) that specifically focuses on modeling of gene circuits.
The main paradigm of PEDI is  divide  and  conquer   by using the given mRNA data and exploiting the structure of gene circuit models, our framework divides a high-dimensional parameter estimation problem into subproblems with a much smaller parameter space, each of which is, in turn, conquered (i.e.
solved) by using any constrained optimization method.
At the initial step, this problem reduction process leads to a crude linearization for numerical integrations, which often results in poor estimates especially for highly non- linear systems.
To improve the quality of the estimate with a basically negligible increase in computing time, PEDI places intermediate integration points using the underlying structural information of a given gene circuit model and iteratively in- creases the accuracy of these intermediate points to increase the accuracy of the numerical integration, which in turn im- proves the reconstructed dynamics.
This article introduces PEDI and, through the use of simulated annealing (SA) as the optimization method, applies the framework to three-gene circuit models with complex dynamics based on synthetic time series mRNA datasets and one yeast gene circuit model based on time series microarray data.
We compared PEDI with three state-of-the-art parameter estimation methods, namely, the evo- lutionary strategy with stochastic ranking (SRES) (Runarsson and Yao, 2000), the moment matching method coupled with hybrid extended Kalman filter (HEKFþ MM) (Lillacci and Khammash, 2010) and the two-phase dynamic decoupling method (TDDM) (Jia et al., 2011).
Our results show that PEDI consistently pro- duced the most accurate estimates efficiently in all the four par- ameter estimation experiments.
This study, thus, demonstrated that PEDI could provide an effective approach to efficiently estimating kinetic parameters of gene circuit models.
2 METHODS  2.1 Problem setting We concern ourselves with time series gene expression data generated from an N-gene network at equally spaced Mþ 1 time points,  A framework for scalable parameter estimation  t05t1       5tM.
Gene gi is transcribed into mRNA mi, which is then translated into protein pi, which can then be used to regulate the tran- scription of genes in the network.
We denote by mij and pij random variables representing the levels of the mRNA copy and the protein copy of gene gi at time tj, respectively.
We further assume that these random variables be expressed as follows:  mij ¼  mij þ vij, pij ¼  pij þ uij,  for i ¼ 1, .
.
.
, N and j ¼ 0, .
.
.
, M,  where  mij and  pij are the true mean of mij and pij, respectively, whereas each of vij and uij is a statistically independent random variable with mean 0.
We consider that only the levels of mRNAs are observable from the experiments, but we assume that the true mean of each protein pi be known at time t0.
Here, we are interested in constructing a kinetic model that estimates the average trajectory of mRNAs given by  mij , and we do not focus on the time evolution of higher moments, as experimental time-series data often contain only few datasets.
Our model describes the average time evolution of a gene circuit as a continuous-time deterministic process, which is governed by a system of ordinary differential equations (ODEs) as follows:  ¼ hið ^p   iÞ    i1 ^mi, ¼  i ^mi    i ^pi,  d ^mi dt d ^pi dt  ð1Þ  with the initial conditions:  ^miðt0Þ ¼ mi0, ^piðt0Þ ¼  pi0 ,  for i ¼ 1, .
.
.
, N:  Here, ^mi and ^pi are time-dependent variables that estimate the dynamics of  mij and  pij , respectively   i   ð i1, .
.
.
,  iKiÞ is a Ki dimensional vector that represents the parameters used in the rate equation representing the regulation of mRNA mi  hi is the transcription rate function based on the equilibrium thermodynamics model of the cis regulation of gene gi  ^p is an N dimensional vector whose i-th element is ^pi   i and  i are the param- eters used in the regulation of protein pi, which we assume to be known  and mij is the sample mean of mi at time tj.
The regulation of each gene is modeled using four reaction processes, transcription, mRNA degrad- ation, translation and protein degradation, whereby transcription is con- sidered to be the main regulatory step.
Using this model, our objective is to search for values of the unknown parameters, which minimize a weighted sum of squared residuals of the sample means of mRNAs.
As a system of coupled nonlinear rate equations can seldom be solved ana- lytically, the numerical integration via simulation is usually used to esti- mate the levels of mRNAs for a given parameter value.
When the dimension of the unknown parameters is high, however, finding practical solution for     ð 1, .
.
.
,  NÞ based on simulation for each parameter change becomes computationally intensive, and such an approach even- tually proves to be infeasible.
2.2 Overview of PEDI Figure 1 illustrates a high-level workflow of PEDI.
The main idea of our framework is to optimize parameters separately by using what is available rather than dealing with exponentially larger parameter space involved in the optimization of  .
The framework takes advantage of the fact that the rate functions in our gene circuit models have the following structure:  ¼ fðtÞ   ky,  dy dt  ð2Þ  i99   H.Kuwahara et al.
Input  Model  Observed data  IniƟal  esƟmaƟon  Sample average of observed mRNAs  EsƟmated protein levels  M+ 1points  Linear  assumpƟon  M+ 1 points  by minimizing the relative error of Optimize each Implement trapezoidal rule for the objective function  separately  Refinement  Simulate the model and obtain mRNA with  Lm+1 points  Shift intermediate points based on experimental data  mRNA with intermediate points  Estimated protein levels  Lm+1 points  Better  interpolation  Lp+1 points  Optimize each separately by using additional points in a better  by minimizing the relative error of  numerical integration method  No  Termination condition satisfied   Yes  Fig.
1.
An illustration of the workflow of PEDI.
Briefly, given a model structure and time series mRNA data at M þ 1 time points, it first makes a linear assumption and estimates the proteins data points, which are then used to estimate parameters for the mRNA regulations.
These initial estimates are then iteratively refined by placing Lm þ 1 mRNA integra- tion points and Lp þ 1 protein integration points and by increasing the accuracy of these integration points  whose definite time integral from time t0 to time tj has the following form:     Z       yðtjÞ ¼ e kðtj t0Þ yðt0Þ þ  ¼ e kðtj tj 1Þ yðtj 1Þ þ  tj  tj 1  tj  t0  Z fðtÞekðt t0Þdt  # fðtÞekðt tj 1Þdt  ð3Þ  ,  where tj 15tj.
As the transcription rate functions depend on regulatory proteins, our parameter estimation framework based on the decompos- ition of a gene circuit model requires the estimate of the protein levels first.
To this end, PEDI uses the time series sample average of the mRNA and makes a linear assumption to estimate the mean time evolution of each protein level.
However, as gene circuits often involve highly non- linear reactions, such a crude linear interpolation may result in an inad- equate parameter estimation.
To refine the quality of the parameter estimation, the framework enriches the number of the data points by estimating intermediate points of the observed data points using the output from a computational simulation.
These intermediate data points are then used to make the interpolation of the observed data  i100  points and the numerical integration of the rate functions more accurate.
The introduction of these intermediate data points does not increase the complexity of the parameter search space, as they are only used for nu- merical integrations.
By repeating this process, PEDI attempts to increase the accuracy of the interpolation and the fitness of the parameter estima- tion.
Thus, PEDI can efficiently perform parameter estimation by avoid- ing computationally intensive search in a high-dimensional parameter space while keeping the quality of the parameter estimation high.
As PEDI decomposes a system of ODEs into individual ODEs, it has an objective function for each mRNA mi.
The form of Ji, the objective function of mRNA mi is a weighted sum of squared residuals.
More detailed information on the objective functions in PEDI is described in Supplementary Section S1.
Initial optimization process  2.3 PEDI decomposes a gene circuit model into individual rate equations.
This process involves uncoupling of coupled rate equations.
To estimate the time evolution of the mRNAs from the decomposed rate equations, we first need to estimate the time evolution of the transcription factors of each gene in the model.
Thus, the first step of our framework is to gen- erate the initial estimate of each protein copy at the M time points (i.e.
t1 to tM).
To this end, we estimate ^piðtjÞ by applying the time-integral form in Equation (3), using the time series sample average of mi and using the trapezoidal rule to approximate the numerical integration.
This estimates the mean levels of the transcription factors of each gene gi at the M time points, making the evaluation of the transcriptional kinetic function of each mRNA mi at the M time points possible.
Using the initial estimates of the protein levels at the M time points, PEDI sets out to estimate the mean time-course of mi by optimizing the value of  i.
To estimate the mean time evolution of mi, we once again use the time-integral form in Equation (3) and apply the trapezoidal rule to approximate the integration of the rate equation of ^mi.
This approximate integration is used to compute ^mi for each i with a given parameter combination, which is then used in a metaheuristic optimization such as SA and genetic algorithms to test the fitness of each parameter com- bination and to find the initial estimate of the optimal  i.
This parameter optimization process is largely independent of the values of the param- eters in a model and remains efficient even when a combination of the parameter values makes the timescale of some rate equations widely dif- ferent and the ODEs stiff.
While facilitating an efficient and scalable parameter estimation, a model decomposition involving the linear approximation of the time in- tegral of each rate equation may not result in a high-quality estimate, especially when the model of interest is highly nonlinear or the given time series data are sparse.
In addition, such a linearization inevitably intro- duces integration errors, making the assessment of the prediction error for each parameter combination difficult.
More detailed information on the initial optimization process is described in Supplementary Section S1.
2.4 Parameter estimation refinement To improve the accuracy of the numerical integration and the parameter estimation, PEDI next performs a simulation of the ODE model, given the current estimate of  .
This simulation-based numerical integration not only gives a much more accurate picture in terms of the performance of the current estimate but also generates an arbitrary number of data points for each ^mi and ^pi.
From this simulation, we generate Lm þ 1 equally spaced ^mi data points between t0 and tM for each mRNA, where we set Lm ¼ cmM for some integer cm41.
The value of Lm may come with additional constraints depending on the choice of a numerical integration method.
By using the simulated mRNA data points, PEDI attempts to better than the simple linear  estimate the time evolution of proteins   interpolation that is used in the initial estimate.
To this end, we first adjust the simulated data of ^mi so that they can better reflect the time evolution of the sample mean of each mi.
Let dm þ 1 be the number of simulated mRNA data points in each time interval between time points tj and tjþ1 (i.e.
dm ¼ cm).
Then, to estimate the dm þ 1 mRNA points in this time interval, we adjust every simulated data point between tj and tjþ1 by considering the difference between the sample mean and the simulated data point of mRNA mi.
Specifically, by letting  t be the time interval between tj and tjþ 1 and mˇ i be a time-dependent variable that represents the Lm þ 1 adjusted ^mi data points, we express  miðtj þ qm tÞ for all qm 2 f0, 1=dm, 2=dm, .
.
.
, 1g as follows:  By using the Lm þ 1 data points of   miðtj þ qm tÞ ¼ ^miðtj þ qm tÞ þ ð1   qmÞrj þ qmrjþ1,  ð4Þ where rj is mij   ^miðtjÞ.
This definition makes sure that, at each time point tj, we have  mðtjÞ ¼ mij.
This allows us to use the additional data points from  mi to make the interpolation of mij and, in turn, the estimation of the time evolution of pi more accurate than the ones based on a simple linearization.
mi between t0 and tM, we generate equally spaced Lp þ 1 data points for each pi.
Here, we require that Lp   dpM be smaller than Lm where dp is a positive integer.
We de- note by  pi a time-dependent variable that represents the Lp þ 1 data points of pi.
To compute the values of  pi at the Lp þ 1 time points, we  piðt0Þ to be  pi0 .
Next, we iteratively compute the next data point first set  pi for the other Lp time points.
To this end, we integrate the rate of equation of pi between each time interval  t=dp using the Lm=Lp data  mi within this time interval (see Supplementary Section S1 for points of details).
Using the Lp þ 1 time points of the newly generated protein variables,  pðtÞ   ð  p1ðtÞ, .
.
.
,  pNðtÞÞ, we can better interpolate the dynamics of the transcription factors of gene gi and estimate the dynamics of ^miðtjÞ from the decomposed rate equation of mi for a given parameter combination of  i.
Thus, applying this approach for the calculation of Ji within an opti- mization method, we can search for a parameter combination ^ i of  i that increases the quality of the estimate (see Supplementary Section S1 for details).
By using ^    ð ^ 1,       , ^ NÞ generated from this optimization, we simu- late the model and calculate the sum of Ji.
We repeat the parameter refinement process until a given termination condition is satisfied (e.g.
until the value of the sum of Ji stabilizes).
For the next iteration of the refinement process, if the current error is smaller than the previous one, we use the current ^  as the seed parameter values for the next iteration.
Otherwise, we select the current ^  over the previous one at probability of pmax expð1    c= oÞ where pmax is the maximum probability of choosing the current estimate,  c is the current sum of Ji and  o is the previous one.
That is, if the error from the current ^  is worse than the previous one, the probability of accepting the current ^  for the next round becomes smaller.
The detailed information of specific configurations of PEDI used in the Section 3 of this article is described in Supplementary Sections S1 and S2.
2.5 Prediction error Optimization-based parameter estimation methods may have different objective functions.
To compare the accuracy of estimated parameters of various parameter estimation methods objectively and without depend- ing on any specific objective functions, we define the prediction error of the i-th mRNA as follows:  X  M  j¼1  PEi ¼  j ^miðtjÞ   mijj jmij    mijj þ   ,  ð5Þ  A framework for scalable parameter estimation  where   is a small fixed value and the prediction error of the model as follows:  X  N  PE ¼  PEi:  i¼1  ð6Þ  In other words, we defined the prediction error to be the sum of the dif- ference between the sample mean and the estimate with respect to the difference between the sample mean and the true mean at each time point and for each mRNA.
As this definition of prediction error depends on the true mean of mRNAs whose values are hidden from objective functions this prediction error can be more objective to compare par- ameter estimation methods than using a specific objective function (e.g.
sum of mean squared error).
However, this definition can only be used when mRNA data are synthesized from a model, as the true mean values are not available in real biological systems.
In this study, we set   to be 0.1.
3 RESULTS  3.1 Models  To test the performance of our parameter estimation framework, we constructed three different gene circuit models, M1, M2 and M3 (see Fig.
2).
The first system is a three-gene circuit (Fig.
2A).
In this system, the transcription of gene g1 is upregulated by protein p2 and downregulated by protein p3.
The transcription of gene g2 is repressed by protein p1, forming a negative feedback loop of gene g2.
Such a regulatory structure can be seen, for example, in the phage-l lysis-lysogeny decision circuit in which CII upregulates synthesis of CI, CI in turn downregulates syn- thesis of CII and Cro downregulates synthesis of CI (Arkin et al., 1998).
Provided that the level of protein p2 is high and the level of protein p1 is low, this system exhibits a complex transient behav- ior.
In this setting, protein p1 initially increases rapidly because of the upregulation facilitated by protein p2, and this increase in protein p3 downregulates gene g2, leading to a rapid decrease in protein p2, which, in turn, downregulates gene g1 and so on.
Fig.
2.
The schematics of the three gene circuits used in this study.
(A) The gene circuit structure of model M1.
(B) The three-gene repressilator structure represented in model M2.
(C) The seven-gene repressilator structure represented in model M3  i101   H.Kuwahara et al.
We modeled this gene circuit by the following system of ODEs, which we refer to as model M1:     1m1,  k3ðk1p2Þn1  ¼  k5  ¼  1 þ ðk1p2Þn1 þ ðk2p3Þn2    2m2, 1 þ ðk4p1Þn3 ¼ k6    3m3, ¼  imi    ipi,  dm1 dt dm2 dt dm3 dt dpi dt  for i ¼ 1, 2, 3:  kinetic  function  In this model, we treated the equilibrium rate constants and the maximum transcription rates: k1, .
.
.
, k6 as unknown and estimated them from synthetic time series mRNA data by adding a Gaussian noise to the simulated data.
We simulated this model from time 0 to 1500 time units and sampled mRNA data at 31 time points.
The initial condition for the simulation is m1ð0Þ ¼ 0, m2ð0Þ ¼ 500 and m3ð0Þ ¼ 0, and all protein mol- ecules are initially set to be absent in the system.
We note that this parameter estimation problem has an infinite number of suboptimal solutions.
This is because the transcriptional regula- tion to k3ðk1p2Þn1 =ððk1p2Þn1 þ ðk2p3Þn2Þ if k1   p2 or k2   p3 is assumed to be always much greater than 1.
In such a case, there is an infinite number of combinations of k1 and k2 with the same kn2 2 =kn1 1 ratio that produce the same dynamics.
As a result, we could obtain an infinite number of optimal solutions if this as- sumption were to be satisfied.
However, as the initial amounts of proteins p2 and p3 are zero, those solutions may just be subopti- mal and may not capture the initial transient behavior well.
Thus, it is challenging to find an optimal solution that can cap- ture the initial transient behavior without being stuck in one of those suboptimal solutions.
Supplementary Table S1 shows the values of the parameters used in the simulation.
simplified  can  be  p1  of  The second and third models are both based on a gene circuit structure, which has a potential to exhibit a sustained oscillation.
This gene circuit is called repressilator, which was synthetically constructed to exhibit an oscillatory behavior based on transcrip- tion regulation with cyclic repression (Elowitz and Leibler, 2000).
We model the mean time evolution of n-gene repressilator by the following system of ODEs:  ¼  kpi  1 þ ðkeipði 1ÞÞni    kmimi,  ¼  mi    pi,  for i ¼ 1, .
.
.
, n,  dmi dt dpi dt  where p0 is equivalent to pn.
By having an odd number of inter- acting genes, the repressilator can exhibit an oscillation under specific parameter conditions.
Here, we constructed two repres- silator models with a different number of genes.
One is a three- gene model, which we refer to as model M2, and the other one is a seven-gene model, which we refer to as model M3 (Fig.
2B and C).
Given the parameter combinations that we selected (see Supplementary Tables S2 and S3), these two models exhibit os- cillatory dynamics as the eigenvalues of the Jacobian matrix at the fixed point contain complex numbers.
We set the initial  i102  condition of model M2 to be m1ð0Þ ¼ 50, p1ð0Þ ¼ 500, and the other molecular species to be initially absent in the system.
For the initial condition of model M3, we set m1ð0Þ ¼ 20 and the other molecular species to be initially absent in the system.
To generate the dataset for the true mean trajectory of the mRNAs in the two-gene circuit models, we simulated each deterministic model and sampled the mRNA levels at 31 equally spaced time points.
Using these true mean trajectory datasets, we later added the noise term for each data point for each sample and generated the sample mean of each mRNA.
3.2 Comparison using synthetic data  In this study, we used as the optimization component in PEDI an adaptive SA algorithm (Kirkpatrick et al., 1983) in which the parameter to control the temperature schedule can be changed.
To measure the improvement made by PEDI, we also used the SA algorithm without the PEDI framework for the param- eter estimation of models M1 and M2 and compared the per- formance between PEDI and SA (see Supplementary Section S3).
Our results demonstrated that PEDI improved the consist- ency and the accuracy of parameter estimation while increasing the runtime efficiency.
functions that  Next, we compared PEDI with three state-of-the-art param- eter estimation methods, namely, the SRES (Runarsson and Yao, 2000), the HEKFþ MM (Lillacci and Khammash, 2010) and the TDDM (Jia et al., 2011).
SRES is an evolutionary opti- mization algorithm, which was reported to be among the best candidates for parameter estimation of biological models in pre- vious comparative studies (Moles et al., 2003  Sun et al., 2012).
HEKFþ MM is a hybrid parameter estimation method, which first applies the hybrid extended Kalman filter and then, if ne- cessary, applies the moment-matching method as the refinement step.
TDDM is another model decomposition-based method, which avoids costly ODE simulations by estimating the slopes of smooth piecewise polynomial interpolate observed data.
While PEDI, HEKF and TDDM were all imple- mented in Matlab, the moment-matching method was imple- mented in C. SRES was implemented in Matlab, but it calls a C library for stochastic ranking computations.
Thus, we expected that the efficiency of HEKFþ MM and SRES might be over- estimated from the comparisons based on computational time.
To generate a sample data point of a given mRNA at a given time point, we sampled a value by adding to the true mean of mRNA a Gaussian random variable with mean 0 and variance being the time average of the true means of this mRNA.
For the experiments with models M1 and M2, we generated four time series data samples and used the average of the four as the observed dataset.
To analyze the performance of parameter es- timation methods with a time series dataset at a higher noise level, we generated only a single time series data sample and used this as the observed dataset in the experiments with model M3.
For the parameter estimation of each of the three models, we ran each method 10 times.
Detailed information about the specific settings used in the three parameter estimation methods in this comparison is described in Supplementary Section S4.
To evaluate the performance of each method, we used four the quality of  the computational efficiency,  basic criteria,   A framework for scalable parameter estimation  Next, we analyzed the performance of the four methods using model M2.
These results are summarized in Table 2.
In this experiment, PEDI outperformed the other methods in three of the four criteria.
Although HEKFþ MM was once again the most efficient method in this experiment, both PEDI and TDDM had comparable speed with HEKFþ MM.
Again, PEDI substantially outperformed the other methods in terms of the quality of the estimates in this experiment.
By comparing the best parameter solution of each method, we found that PEDI generated high-quality estimates with the smallest prediction error (Fig.
3B and Supplementary Fig.
S11).
Even the worst parameter solution of PEDI had a lower prediction error than the best solution of any of the other methods (Table 2).
To analyze the typical behavior of each method, we measured the average prediction error and the average relative parameter error of the best parameter solution (Table 2 and Supplementary Fig.
S12).
These show that PEDI consistently outperformed the other methods and produced much higher quality parameter solutions in a computationally efficient fashion.
Furthermore, PEDI was also able to extrapolate the mRNA levels at next few time points substantially more accurately than the other three.
We next applied the four methods to model M3.
The com- parison of the four methods is summarized in Table 3.
Among the four methods, the two model decomposition-based methods were much more efficient than the other two methods.
TDDM was the fastest with its average runtime being 26 min, and PEDI was a close second with its average runtime being 33.5 min.
Although HEKFþ MM was the most efficient method for the 2 three-gene models (Tables 1 and 2), it was more than four times slower than PEDI in this experiment.
These results, coupled with the results from models M1 and M2, show that model decom- position-based methods can scale better than typical parameter estimation methods.
The least computational efficient method was SRES.
We ran SRES with 2000 generations of evolution, which, on average, took more than eight times longer than PEDI did.
However, the quality of the estimates from SRES was just on a par with that of TDDM.
In the other three criteria, PEDI outperformed the other three methods substantially.
In terms of the quality of estimated par- ameters, PEDI performed substantially better than the other three methods.
By comparing the best parameter solution of  A  B  reconstructed dynamics, the accuracy of estimated parameters and the quality of predictability.
The computational efficiency was measured by computing the average runtime of the 10 runs from each method.
The quality of reconstructed dynamics was analyzed by measuring the average, the smallest and the largest prediction errors of each method, whereas the accuracy of esti- mated parameters was analyzed by measuring the average rela- tive error of the estimated parameter set with the smallest prediction error for each method.
Finally, the quality of predict- ability was analyzed by extrapolating mRNA data at the next k observed time points using the parameter set with the smallest prediction error of each method  we measured the mean squared distance between the estimated data points and 100 samples that are generated for each of the k observed data points where we set k to be 1, 3 and 5.
The results from the comparison of the four methods using model M1 are summarized in Table 1.
Here, PEDI outper- formed the other methods in three of the four criteria.
Both SRES (with 100 generations of evolution) and TDDM per- formed poorly in terms of efficiency and accuracy.
Although HEKFþ MM was the most efficient method in this experiment, PEDI was also relatively efficient (0.5 min versus 2.2 min).
By comparing the best parameter solutions of these two methods, we found that PEDI generated the most accurate estimate (Fig.
3A and Supplementary Fig.
S9).
HEKFþ MM produced par- ameter sets with negative values in 7 of the 10 runs.
This is due to the fact that the moment-matching algorithm used an uncon- strained local optimization technique (Lillacci and Khammash, 2010).
To analyze the typical behavior of each method, we measured the average prediction error and the average relative parameter error (Table 1 and Supplementary Fig.
S10).
These show that PEDI generated not only the best parameter solution but also the highest quality parameter solutions on average.
PEDI was also able to extrapolate the mRNA levels at next few time points more accurately than the other three.
Taken together, we found that PEDI was able to generate the highest quality parameter solutions efficiently among the four methods.
Table 1.
Comparison of the results from model M1  Method  PEDI  SRESa  HEKFþ MM  Runtime Average PE Best PE Worst PE Best paramc Pred(1)d Pred(3)d Pred(5)d  2.2 min 225:9 127:5 359:5 0:046 33:6 31:8 33:4  8.1 min 1584.0 836.5 2424.5 8490.5 378.8 410.4 392.8  0.5 min N/Ab 207.0 N/Ab 0.12 40.0 36.3 38.6  TDDM  11.3 min 2145.0 2144.9 2145.1 9382.6 3095.9 2831.9 2620.7  aWith 100 generations.
bBecause seven runs resulted in negative parameter values.
cThe average relative error of the best parameter solution.
dPred(k) indicates the mean squared distance of the next k time points.
The comparison criteria are as follows: the average runtime  the average, best and worst prediction errors  the average relative error of the best parameter set  and the quality of data extrapola- tion.
Each bold face indicates the best among the four.
Fig.
3.
Comparison of the four methods based on the reconstructed dy- namics with the smallest prediction error from models M1 and M2.
(A) The results of m1 in M1.
(B) The results of m1 in M2.
Here, each value within parentheses next to each method indicates the prediction error for a given mRNA, the red square points indicate the observed data points, and the dotted red lines indicate the true average trajectories  i103   H.Kuwahara et al.
Table 2.
Comparison of the results from model M2  Method  PEDI  SRESa  HEKFþ MM  Runtime Average PE Best PE Worst PE Best paramc Pred(1)d Pred(3)d Pred(5)d  15.0 min 781:4 227:0 1590:9 0:091 26:2 26:7 22:9  268.7 min 2119.9 1854.0 2502.7 1592.7 1139.2 893.0 767.7  10.6 min N/Ab 2964.2 N/Ab 0.64 1164.0 1274.9 1099.4  TDDM  10.9 min 2197.1 2196.8 2197.2 0.45 3021.6 2501.2 1765.0  aWith 400 generations.
bBecause nine runs resulted in negative parameter values.
cThe average relative error of the best parameter solution.
dPred(k) indicates the mean square distance of the next k time points.
The comparison criteria are as follows: the average runtime  the average, best and worst prediction errors  the average relative error of the best parameter set  and the quality of data extrapola- tion.
Each bold face indicates the best among the four.
Table 3.
Comparison of the results from model M3  Method  PEDI  SRESa  HEKFþ MM  Runtime Average PE Best PE Worst PE Best paramc Pred(1)d Pred(3)d Pred(5)d  33.5 min 1123:5 647:1 2215:5 0:16 112:4 91:1 103:5  279.5 min 2399.6 2174.6 2735.5 1.6 595.3 525.0 461.1  143.5 min N/Ab 1477.2 N/Ab 0.36 176.1 150.7 182.2  TDDM  26.0 min 2250.1 2195.9 2587.5 0.27 558.5 577.6 569.0  aWith 2000 generations.
bBecause four runs resulted in negative parameter values.
cThe average relative error of the best parameter solution.
dPred(k) indicates the mean squared distance of the next k time points.
The comparison criteria are as follows: the average runtime  the average, best and worst prediction errors  the average relative error of the best parameter set  and the quality of data extrapola- tion.
Each bold face indicates the best among the four.
each method, PEDI came out to be the most accurate one with its prediction error being at least twice as good as the other methods.
PEDI outperformed the other methods in terms of the accuracy of both the reconstructed dynamics and the param- eter values (Fig.
4 and Supplementary Fig.
S13).
In addition, the average parameter solution of PEDI had at least 30% lower prediction error than the best parameter solution of any other (Table 3).
Furthermore, the parameter sets from PEDI were the closest to the true parameter set on average, and the best par- ameter solution from PEDI had only 16% error to the true par- ameter set (Supplementary Fig.
S14 and Table 3).
PEDI was also able to extrapolate the data at the next time points much more accurately than the other three.
As data extrapolation of bio- chemical dynamics especially those with transient behaviors  is a challenging problem, this highlights the importance of high- throughput parameter estimation methods, which can generate high-quality parameter sets in a timely fashion to ultimately fa- cilitate construction of a predictive model for given biological  i104  Fig.
4.
Comparison of the four methods based on the estimated param- eter set with the smallest prediction error from model M3.
This shows the results for mRNAs m1, m2 and m3.
The left-hand side panels show the comparison for the reconstructed trajectory.
The numbers in the parenth- eses indicate the prediction error.
The dotted red curve shows the true trajectory, whereas the red square points indicate the synthetic data points.
The right-hand side panels show the comparison of the parameter combination generating the estimated trajectory for the four methods.
Here, the red point in the middle of each side for the parameter compari- son indicates the true value of each parameter  phenomena.
To test whether our performance results remain intact in parameter estimation of a variant of seven-gene repres- silator model, we modified M3 by adding a repression connec- tion from g3 to g6.
Our results show that PEDI produced higher quality parameter solutions much more efficiently than the other methods (see Supplementary Section S5).
Taken together, we found that PEDI was able to consistently produce high-quality parameter estimates under various conditions in a computation- ally efficient matter.
3.3 Parameter estimation with yeast microarray data  To compare the performance of the parameter estimation meth- ods using experimental data, we used time series microarray ex- periments of the genomic expression patterns in the yeast Saccharomyces cerevisiae responding to several environmental changes (Gasch et al., 2000).
We modeled a gene circuit involving genes GCN4, LEU3 and ILV5.
GCN4 is a master regulator of many genes including those for the amino acid biosynthesis path- way (Natarajan et al., 2001).
LEU3 is a gene encoding a   A framework for scalable parameter estimation  transcription factor that regulates genes involved in amino acid biosynthesis, whereas ILV5 encodes an enzyme that catalyzes amino acid biosynthesis 1988  Zelenaya-Troitskaya et al., 1995).
(Friden and Schimmel,  The network structure of these three genes is reported to follow the network motif called the coherent type 1 feed-forward loop (Mangan and Alon, 2003).
We described the model of this feed-forward gene circuit by the following system of ODEs:  ¼ f1ðtÞ,   ðkXYp1Þn1 ¼   1 þ ðkXYp1Þn1 ðkXZp1Þn2 1 þ ðkXZp1Þn2  ¼          k1m2, ðkYZp2Þn3 1 þ ðkYZp2Þn3  ¼  ðmi   piÞ,  for i ¼ 1, 2, 3,  dm1 dt dm2 dt dm3 dt dpi dt       k2m3,  where f1 is a piecewise polynomial function of t and m1, m2 and m3 are the mRNA copies of GCN4, LEU3 and ILV5, respect- ively, whereas p1, p2 and p3 are proteins Gcn4p, Leu3p and Ilv5p, respectively.
As in Cao and Zhao (2008), we estimated the time evolution of m1 with a smoothing method based on spline.
In this experiment, we set   ¼ 1 and   ¼ 0:5 to have protein stability higher assuming that each transcription rate is close to the maximum value when the corresponding expression profile is at the highest.
With this setting, we estimated eight unknown parameters in the regulation of genes LEU3 and ILV5.
In this experiment, we did not use HEKFþ MM, and we just compared PEDI with SRES (with 400 generations of evolution) and TDDM.
This is because the dataset contains only one time course microarray data sample with eight time points, with which we could not satisfactorily estimate the covariance matrix that HEKFþ MM demanded.
To quantify the perform- ance, we measured the mean squared error of each estimate with respect to the observed mRNA data points, and we compared the best parameter solution from each method that gave the lowest error.
We found that the error from the best solution of PEDI was 0.02, whereas the errors from the best solutions of SRES and TDDM were more than 0.2 and 0.3, respectively (Supplementary Table S4).
This shows that PEDI was able to approximate the dynamics of the RNA copy of LEU3 and ILV5 well.
Indeed, the reconstructed dynamics from the best param- eter solution of PEDI shows a close agreement between the re- sults from PEDI and the time series microarray data (Fig.
5).
The average computational time of PEDI, SRES and TDDM is 3.3 min, 143.3 min and 1.7 min, respectively.
These results once again show that PEDI was able to generate a high-quality esti- mate efficiently.
By using the best parameter solution from PEDI, we next analyzed regulatory mechanisms of this gene circuit.
By looking at the parameters controlling the binding affinity of Gcn4p to the cis-regulatory elements of gene LEU3 and gene ILV5, we found that Gcn4p had close to 20% higher binding affinity to the bind- ing site for gene ILV5.
As the protein DNA binding cooperativ- ity estimated by PEDI was high (Supplementary Table S4), we expect the change in transcription rates of ILV5 to be a switch- like, sigmoidal function of both Gcn4p and Leu3p.
Thus, the differential binding affinity of Gcn4p allows for a delay in  Fig.
5.
The reconstructed dynamics from the best parameter solution of PEDI for the yeast feed-forward loop model.
The dynamics of mRNA GCN4 was estimated by a smooth piecewise polynomial function.
PEDI predicted the dynamics of mRNAs, LEU3 and ILV5  turning the ILV5 gene on after Gcn4p is turned on, as this AND-gate type transcription regulation of ILV5 in this model requires higher concentrations of both Gcn4p and Leu3p to turn ILV5 on.
In the normal nonstarvation conditions, Gcn4p level is tightly controlled with a means of a rapid degradation through the ubiquitin pathway.
On the other hand, Gcn4p level substan- tially increases in the amino acid starvation condition (Kornitzer et al., 1994).
Our results show that the delay caused by the dif- ferential binding affinity in the feed-forward loop may serve as an extra layer of protection to ensure that this amino acid bio- synthesis pathway is only activated under the starvation condi- tion.
As our hypothesis is based on one type of time series expression dataset with only eight time points, however, it needs to be taken with caution and further analysis is required to contrast it with alternative explanations.
Indeed, our hypoth- esis can be validated experimentally  by changing the Gcn4p binding site for gene ILV5 to have a lower binding affinity, it predicts that the regulation of the amino acid biosynthesis path- way will be disrupted more easily.
4 DISCUSSION  The parameter estimation problem in modeling of biological sys- tems is challenging, as it usually involves many (often infinite) suboptimal solutions.
Efficient and scalable parameter estima- tion is crucial to the systematic construction of quantitative models that support existing knowledge of complex biological systems and, more broadly, to the success of integrative systems biology going forward.
Here, we have introduced a novel com- putational framework, which, instead of considering general ap- plicability, is customized especially for parameter estimation of gene circuit models.
To see how PEDI performs in comparison with state-of-the-art parameter estimation methods, we applied SRES, HEKFþ MM and TDDM to the parameter estimation of the same gene circuit models with the same datasets.
We found that PEDI consistently gave the most accurate estimates in a  i105   H.Kuwahara et al.
computationally efficient matter.
To test how PEDI performs given experimental gene expression data, we applied it to model- ing of a yeast gene circuit from time series microarray data.
We found that the reconstructed dynamics from PEDI closely agreed with the experimental data, and by analyzing the estimated par- ameter set, we were also able to make a testable hypothesis for an underlying regulatory mechanism of this gene circuit.
Although PEDI can be applied to gene circuits with an arbi- trary size and degree of transcriptional interaction connectivity, there are some limitations.
For example, PEDI cannot directly support gene regulatory models including transcriptional elong- ation and posttranscriptional modifications.
Although we can relax the conditions of PEDI so as to support more generic bio- logical models by not requiring a model to have the form described by Equation (3), the efficiency and the accuracy of the model decomposition might decrease.
While acknowledging the limited scope of the applicability, we believe that the value of a more tailored approach to the gene circuit domain far exceeds such potential drawbacks because of the importance of transcrip- tional regulation in quantitative understandings of cellular sys- tems.
By narrowing down our focus to gene circuit models, our customized approach was able to display two main advantages over the general parameter estimation methods: (i) it can make more appropriate assumptions about the kinds of gene expres- sion data available for parameter estimation and (ii) it can ex- ploit the structural information on gene circuit models in particular, statistical thermodynamic-based gene circuit models.
An additional practical benefit of PEDI is that it is relatively easy to implement in a lower level language such as C.  ACKNOWLEDGEMENTS  The authors thank Gabriele Lillacci for providing us with the source code for the hybrid extended Kalman filter method and the moment matching method and Jiguo Cao for providing us with the yeast time series microarray data.
Funding: This work was supported in part by an Academic Excellence Alliance grant awarded by the King Abdullah University of Science and Technology Office of Competitive Research Funds under the title  Association of genetic variation with phenotype at the network and function level .
S.W.
s re- search was partially supported by Award Number [KUS-CI- 016-04], made by King Abdullah University of Science and Technology (KAUST).
Conflict of Interest: none declared.
REFERENCES  Arkin,A.
et al.
(1998) Stochastic kinetic analysis of developmental pathway bifur- cation in phage lambda-infected Escherichia coli cells.
Genetics, 149, 1633 1648.
Baker,S.M.
et al.
(2010) Comparison of different algorithms for simultaneous estimation of multiple parameters in kinetic metabolic models.
J. Integr.
Bioinform., 7.
Baugh,L.R.
et al.
(2011) Sensitive and precise quantification of insulin-like mRNA  expression in Caenorhabditis elegans.
PLoS One, 6, e18086.
Church,G.M.
(2005) From systems biology to synthetic biology.
Mol.
Syst.
Biol., 1,  2005.0032.
Elowitz,M.B.
and Leibler,S.
(2000) A synthetic oscillatory network of transcrip-  tional regulators.
Nature, 403, 335 338.
Elowitz,M.B.
et al.
(2002) Stochastic gene expression in a single cell.
Science, 297,  1183 1186.
Friden,P.
and Schimmel,P.
(1988) LEU3 of Saccharomyces cerevisiae activates mul- tiple genes for branched-chain amino acid biosynthesis by binding to a common decanucleotide core sequence.
Mol.
Cell.
Biol., 8, 2690 2697.
Gasch,A.P.
et al.
(2000) Genomic expression programs in the response of yeast cells  to environmental changes.
Mol.
Biol.
Cell, 11, 4241 4257.
Golding,I.
et al.
(2005) Real-time kinetics of gene activity in individual bacteria.
Cell, 123, 1025 1036.
Ideker,T.
et al.
(2001) A new approach to decoding life: systems biology.
Annu.
Rev.
Genomics Hum.
Genet., 2, 343 372.
Jia,G.
et al.
(2011) Parameter estimation of kinetic models from metabolic profiles:  two-phase dynamic decoupling method.
Bioinformatics, 27, 1964 1970.
Joo,C.
et al.
(2008) Advances in single-molecule fluorescence methods for molecular  biology.
Annu.
Rev.
Biochem., 77, 51 76.
Kirkpatrick,S.
et al.
(1983) Optimization by simulated annealing.
Science, 220,  671 680.
Kitano,H.
(2002) Computational systems biology.
Nature, 420, 206 210.
Koh,G.
et al.
(2006) A decompositional approach to parameter estimation in path- way modeling: a case study of the Akt and MAPK pathways and their crosstalk.
Bioinformatics, 22, e271 e280.
Kornitzer,D.
et al.
(1994) Regulated degradation of the transcription factor gcn4.
EMBO J., 13, 6021 6030.
Kulkarni,M.M.
(2011) Digital multiplexed gene expression analysis using the nano-  string ncounter system.
Curr.
Protoc.
Mol.
Biol., Chapter 25, Unit25B.10.
Lillacci,G.
and Khammash,M.
(2010) Parameter estimation and model selection in  computational biology.
PLoS Comput.
Biol., 6, e1000696.
Liu,X.
and Niranjan,M.
(2012) State and parameter estimation of the heat shock response system using Kalman and particle filters.
Bioinformatics, 28, 1501 1507.
Mangan,S.
and Alon,U.
(2003) Structure and function of the feed-forward loop  network motif.
Proc.
Natl Acad.
Sci.
USA, 100, 11980 11985.
Materna,S.C.
et al.
(2010) High accuracy, high-resolution prevalence measurement for the majority of locally expressed regulatory genes in early sea urchin devel- opment.
Gene Expr.
Patterns, 10, 177 184.
Moles,C.G.
et al.
(2003) Parameter estimation in biochemical pathways: a compari-  son of global optimization methods.
Genome Res., 13, 2467 2474.
Natarajan,K.
et al.
(2001) Transcriptional profiling shows that Gcn4p is a master regulator of gene expression during amino acid starvation in yeast.
Mol.
Cell.
Biol., 21, 4347 4368.
Newman,J.R.S.
et al.
(2006) Single-cell proteomic analysis of S. cerevisiae reveals  the architecture of biological noise.
Nature, 441, 840 846.
Quach,M.
et al.
(2007) Estimating parameters and hidden variables in non-linear inference.
for biological networks  state-space models based on ODEs Bioinformatics, 23, 3209 3216.
Raj,A.
and van Oudenaarden,A.
(2009) Single-molecule approaches to stochastic  gene expression.
Annu.
Rev.
Biophys., 38, 255 270.
Raj,A.
et al.
(2006) Stochastic mRNA synthesis in mammalian cells.
PLoS Biol., 4,  e309.
Raser,J.M.
and O Shea,E.K.
(2005) Noise in gene expression: origins, consequences,  and control.
Science, 309, 2010 2013.
Runarsson,T.P.
and Yao,X.
(2000) Stochastic ranking for constrained evolutionary  optimization.
IEEE Trans.
Evol.
Comput., 4, 284 294.
Schoeberl,B.
et al.
(2002) Computational modeling of the dynamics of the MAP kinase cascade activated by surface and internalized EGF receptors.
Nat.
Biotechnol., 20, 370 375.
Schwartz,R.
(2008) Biological Modeling and Simulation: a Survey of Practical Models, Algorithms, and Numerical Methods.
The MIT Press, Cambridge, MA, USA.
Shea,M.A.
and Ackers,G.K.
(1985) The OR control system of bacteriophage lambda: A physical-chemical model for gene regulation.
J. Mol.
Biol., 181, 211 230.
Sherman,M.S.
and Cohen,B.A.
(2012) Thermodynamic state ensemble models of  Cai,L.
et al.
(2006) Stochastic protein expression in individual cells at the single  cis-regulation.
PLoS Comput.
Biol., 8, e1002407.
molecule level.
Nature, 440, 358 362.
Cao,J.
and Zhao,H.
(2008) Estimating dynamic models for gene regulation net-  works.
Bioinformatics, 24, 1619 1624.
Sun,J.
et al.
(2012) Parameter estimation using metaheuristics in systems biology: a comprehensive review.
IEEE/ACM Trans.
Comput.
Biol.
Bioinformatics, 9, 185 202.  i106   A framework for scalable parameter estimation  Sun,X.
et al.
(2008) Extended Kalman filter for estimation of parameters in nonlinear state-space models of biochemical networks.
PLoS One, 3, e3758.
Zelenaya-Troitskaya,O.
et al.
(1995) An enzyme in yeast mitochondria that cata- lyzes a step in branched-chain amino acid biosynthesis also functions in mito- chondrial DNA stability.
EMBO J., 14, 3268 3276.
Suter,D.M.
et al.
(2011) Mammalian genes are transcribed with widely different  Zenklusen,D.
et al.
(2008) Single-RNA counting reveals alternative modes of gene  bursting kinetics.
Science, 332, 472 474.  expression in yeast.
Nat.
Struct.
Mol.
Biol., 15, 1263 1271.
Taniguchi,Y.
et al.
(2010) Quantifying E. coli proteome and transcriptome with  Zhan,C.
and Yeung,L.F.
(2011) Parameter estimation in systems biology models  single-molecule sensitivity in single cells.
Science, 329, 533 538.  using spline approximation.
BMC Syst.
Biol., 5, 14.  van Oijen,A.M.
(2011) Single-molecule approaches to characterizing kinetics of  Zwolak,J.W.
et al.
(2005) Parameter estimation for a mathematical model of the cell  biomolecular interactions.
Curr.
Opin.
Biotechnol., 22, 75 80.  cycle in frog eggs.
J. Comput.
Biol., 12, 48 63.  i107
