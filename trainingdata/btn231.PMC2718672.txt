Motivation: The presence of reticulate evolutionary events in phylogenies turn phylogenetic trees into phylogenetic networks.
These events imply in particular that there may exist multiple evolutionary paths from a non-extant species to an extant one, and this multiplicity makes the comparison of phylogenetic networks much more difficult than the comparison of phylogenetic trees.
In fact, all attempts to define a sound distance measure on the class of all phylogenetic networks have failed so far.
Thus, the only practical solutions have been either the use of rough estimates of similarity (based on comparison of the trees embedded in the networks), or narrowing the class of phylogenetic networks to a certain class where such a distance is known and can be efficiently computed.
The first approach has the problem that one may identify two networks as equivalent, when they are not; the second one has the drawback that there may not exist algorithms to reconstruct such networks from biological sequences.
Results: We present in this article a distance measure on the class of semi-binary tree-sibling time consistent phylogenetic networks, which generalize tree-child time consistent phylogenetic networks, and thus also galled-trees.
The practical interest of this distance measure is 2-fold: it can be computed in polynomial time by means of simple algorithms, and there also exist polynomial-time algorithms for reconstructing networks of this class from DNA sequence data.
Availability: The Perl package Bio::PhyloNetwork, included in the BioPerl bundle, implements many algorithms on phylogenetic networks, including the computation of the distance presented in this article.
Contact: gabriel.cardona@uib.es Supplementary information: Some counterexamples, proofs of the results not included in this article, and some computational experiments are available at Bioinformatics online.
1 INTRODUCTION Phylogenies reveal the history of evolutionary events of a group of species, and they are central to comparative analysis methods for testing hypotheses in evolutionary biology (Pagel, 1999).
Although phylogenetic trees have been used since the early days of phylogenetics (Burkhardt and Smith, 1987) to represent To whom correspondence should be addressed.
evolutionary histories under mutation, it is currently well known that the existance of genetic recombinations, hybridizations and lateral gene transfers makes species evolve more in a reticulate way than in a simple, arborescent way (Doolittle, 1999).
Now, as it happens in the case of phylogenetic trees, given a set of operational taxonomic units, different reconstruction algorithms, or different sets of sampled data, may lead to different reticulate evolutionary histories.
Thus, a well-defined distance measure for phylogenetic networks becomes necessary.
In a completely general setting, a phylogenetic network is simply a directed acyclic graph whose leaves (nodes without outgoing edges) are labeled by the species they represent (Strimmer and Moulton, 2000; Strimmer et al., 2001).
However, this situation is so general that even the problem of deciding when two such graphs are isomorphic is computationally hard.
Hence, one has to put additional constraints to narrow down the class of phylogenetic networks.
There have been different approaches to this problem in the literature, giving rise to different definitions of phylogenetic network (Bandelt, 1994; Huson, 2006, 2007; Linder et al., 2003; Semple, 2007; Strimmer and Moulton, 2000; Strimmer et al., 2001).
In this article, we give a distance measure on the class of semibinary tree-sibling time consistent phylogenetic networks.
This class first appeared in Nakhlehs thesis (Nakhleh, 2004), and it is of special interest because there exist algorithms to reconstruct phylogenetic networks of this class from the analysis of biological sequences (Jin et al., 2006, 2007a).
However, all previous attempts to provide a sound distance measure on this class of networks have failed (Cardona et al., 2008b).
2 SEMI-BINARY TREE-SIBLING TIME CONSISTENT PHYLOGENETIC NETWORKS Let N = (V ,E) be a directed acyclic graph, or DAG for short.
We will say that a node u is a tree node if indeg(u)1; moreover, if indeg(u)=0, we will say that u is a root of N. If a single root exists, we will say that the DAG is rooted.
We will say that a node u is a hybrid node if indeg(u)2.
A node u is a leaf if outdeg(u)=0.
In a DAG N = (V ,E), we will say that v is a child of u if (u,v)E; in this case, we will also say that u is a parent of v. Note that any tree node has a single parent, except for the roots of the graph.
Whenever there exists a directed path (including the trivial path) from a node u to v, we will say that v is a descendant of u, or that u is an ancestor of v. 2008 The Author(s) This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/2.0/uk/) which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.
file:gabriel.cardona@uib.es [23:27 18/6/03 Bioinformatics-btn231.tex] Page: 1482 14811488 G.Cardona et al.A phylogenetic network on a set S of labels is a rooted DAG such that: No tree node has out-degree 1.
Every hybrid node has out-degree 1, and its single child is a tree node.
Its leaves are bijectively labeled by S. Moreover, if all hybrid nodes have in-degree equal to 2, we will say that it is a semi-binary phylogenetic network.
Note that semibinarity does not impose any further condition on the out-degree of tree nodes.
We will say that two phylogenetic networks are isomorphic if there exists an isomorphism of DAGs between them that preserves the labels of the leaves.
The underlying motivation for such definitions is that tree nodes represent species, the leaves corresponding to extant ones, and the internal tree nodes to ancestral ones.
Hybrid nodes model reticulate evolutionary events, where the parents of a hybrid node correspond to the species involved in this process, and its single child corresponds to the resulting species.
Hence, the semibinarity condition means that these events always involve two, and only two, ancestral species.
This is enough to cope with most types of non-tree-like evolutionary processes: horizontal gene transfers, where a piece of DNA of an organism is transfered into the genome of another organism, hybridizations between pairs of lineages, and recombinations of genetic material between pairs of individuals within a lineage.
As a matter of fact, and as Semple (2007) points out, vertices with indegree more than two do not represent a simultaneous exchange of genetic information between several parents but rather an uncertainty of the exact order of hybridization.
Moreover, most reconstruction algorithms for phylogenetic networks produce semi-binary networks in this sense (Bandelt and Dress, 1986; Bereg and Zhang, 2005; Diday and Bertrand, 1986; Jin et al., 2006, 2007a).
Several other definitions of phylogenetic networks appear in the literature.
In particular, some authors model as a single node the hybridization process and the resulting species; this approach leads one to consider hybrid nodes with out-degree greater than one.
Notice, however, that one can easily move from one model to the other: Given a phylogenetic network according to the approach we follow here, by simply collapsing the arc from a hybrid node to its single child into a single node we get the corresponding phylogenetic network in the other model.
Conversely, given a phylogenetic network with hybrid nodes of out-degree greater than one, we can split each hybrid node into a pair of nodes connected by an arc; the first one will hold all the parents of the original node (and it will be a hybrid node) and the other one will hold all its children (and it will be a tree node).
Although in real applications of phylogenetic networks, the set S labeling the leaves would correspond to a given set of taxa of extant species, for the sake of simplicity we will hereafter assume that the set of labels is simply S ={1,...,n}.
We will say that two nodes u and v are siblings of each other if they share a parent.
Note that the relation of being siblings is reflexive and symmetric, but not transitive.
We will say that a tree node v is quasi-sibling of another tree node u if the parent of v is a hybrid node that is also a sibling of u v Fig.1.
Node v is quasi-sibling of u. u (Fig.1).1 The relation of being quasi-siblings is neither reflexive nor symmetric.
We will say that a phylogenetic network is tree-sibling if each hybrid node has at least one sibling that is a tree node.
Biologically, this condition means that for each of the reticulation events, at least one of the species involved in it has also some descendant through mutation.
A time assignment on a network N = (V ,E) is a mapping :V N such that: (1) (r)=0, where r is the root of N. (2) If v is a hybrid node and (u,v)E, then (u)= (v).
(3) If v is a tree node and (u,v)E, then (u)< (v).
We will say that a network is time consistent if it admits a time assignment (Baroni et al., 2006).
From a biological point of view, a time assignment represents the time when a certain species exists, or a certain hybridization process occurs.
Note that whenever such a process takes place, the species involved must coexist; this is what the time-consistency property ensures.
By a sbTSTC network we will mean a semi-binary tree-sibling, time consistent phylogenetic network, and this will be the class of phylogenetic networks that we will consider in the rest of the article.
Remark.
In our previous paper (Cardona et al., 2007) we considered the class of tree-child phylogenetic networks, that is, those networks where every internal node has at least one tree child.
The tree-child condition is clearly more restrictive than the tree-sibling one.
For instance, the network in Figure 2 is not tree-child, since all the children of v are hybrid, while it is tree-sibling, since the hybrid nodes A and B have respective sibling nodes 1 and 4.
However, the additional condition of time consistency that we impose here makes that neither of the two considered classes (tree-child and sbTSTC) is contained in the other.
For instance, the network in (Cardona et al., 2007, Fig.4) is tree-child (and hence tree-sibling) but it is not time consistent.
Remark.
Besides the biological considerations we have made while presenting our assumptions on phylogenetic networks, these are also motivated by the fact that we want to single out phylogenetic networks by means of their-representation (see Section 3 below).
In the Supplementary Material we give examples showing that the technical conditions imposed on phylogenetic networks are necessary to achieve this goal.
We also show there how the definition of sbTSTC phylogenetic network we have given is related to that given in (Nakhleh, 2004), showing that the latter is more restrictive than the former.
The following result ensures the existence of sibling or quasisibling leaves in sbTSTC networks.
1Henceforth, in graphical representations of phylogenetic networks, hybrid nodes are represented by squares, tree nodes by circles and indeterminate nodes (that is, that can be either tree or hybrid nodes) by hexagons.
1482 [23:27 18/6/03 Bioinformatics-btn231.tex] Page: 1483 14811488 Tree-sibling phylogenetic networks r u v wA B 1 2 3 4 Fig.2.
A sbTSTC phylogenetic network.
Lemma 1.
Let N be a sbTSTC network with more than one leaf.
Then, there exists at least one pair of leaves that are either siblings or quasi-siblings.
Proof.
Let M be the set of internal nodes of N with maximal time assignment, and note that M is non-empty, since otherwise N would be reduced to a single leaf.
If no node of M is hybrid, let uM be any tree node.
Then, all its children are leaves: indeed, if a child of u were an internal tree node, then its time assignment would be strictly greater than that of u, against our assumption; also, if a child of u were a hybrid node, then its time assignment would be the same as that of u, and hence M would contain a hybrid node.
Therefore, since we do not allow out-degree 1 tree nodes, the node u has at least two children that are leaves, and these leaves are siblings.
If M contains a hybrid node v, then its parents are tree nodes u,u with the same time assignment as that of v, and at least one of them must have a tree child because of the tree-sibling property.
Say that u has a tree child; the same argument as before proves that this child must be a leaf i.
Moreover, the single child of v must be a tree node, hence also a leaf j.
In this situation, j is a quasi-sibling of i.
We give now tight bounds for the number of hybrid and internal tree nodes of a sbTSTC phylogenetic network, depending on its number of leaves.
The existence of such bounds implies, in particular, that there exists a finite number of sbTSTC phylogenetic networks on a given set of taxa up to isomorphisms.
Nevertheless, we have not yet been able to find a closed expression for this number of networks depending only on the number of leaves.
Table 1 shows the experimental results we have found in this direction using the procedure described in Section 6.
Proposition 2.
Let N be a sbTSTC network.
Let n,h,t be, respectively, the number of leaves, the number of hybrid nodes and the number of internal tree nodes of N. If n2, then h=0 and t =n1.
Otherwise, h2n4 and t3n6.
Proof.
See the Supplementary Material.
The bounds in the proposition above are tight, as the following example shows.
Example 1.
Consider the family of sbTSTC phylogenetic networks (Nn)n3 defined recursively in the following way: N3 is the first phylogenetic network depicted in Figure 4.
The network Nn+1 is obtained from Nn by applying the transformation described in Figure 3.
Figure 4 depicts also N4 and N5, where we label the internal nodes in these networks to ease understanding of the construction.
Note that all networks Nn are semi-binary and tree-sibling by construction.
Also, the time consistency property can be easily verified: when constructing Nn+1 from Nn, we can assign to each Table 1.
Number of sbTSTC networks for small number n of leaves n 1 2 3 4 5 Number of networks 1 1 10 444 61 176 1 2 n 1 2 n+1 n Fig.3.
The transformation that produces Nn+1 from Nn.
1 2 3 A B a b r N3 1 2 4 3 C D c d e A B a b r N4 1 2 5 4 3 E F f g h C D c d e A B a b r N5 Fig.4.
sbTSTC phylogenetic networks with maximum number of nodes, with 3, 4 and 5 leaves.
of the internal nodes introduced the maximum of the times that the leaves 1,2,n have in Nn, and reassign to the leaves 1,2,n,n+1 this maximum plus one.
Now, N3 has three internal tree nodes and two hybrid nodes, and the construction of Nn+1 from Nn adds three internal tree nodes and two hybrid nodes.
It is evident, then, that each Nn has 3(n2) internal tree nodes and 2(n2) hybrid nodes.
3 THE-REPRESENTATION In Cardona et al.(2007) we introduced the-representation for the class of tree-child phylogenetic networks.
In this section we review the definition of the-representation of phylogenetic networks, and we will prove later that this representation characterizes a sbTSTC phylogenetic network, up to isomorphism.
Let N = (V ,E) be a phylogenetic network on the set S ={1,...,n}.
For each node u of N , we consider its-vector, (u)= (m1(u),...,mn(u)), 1483 [23:27 18/6/03 Bioinformatics-btn231.tex] Page: 1484 14811488 G.Cardona et al.where mi(u) is the number of different paths from u to the leaf i.
Moreover, we define the-representation of N , (N), as the multiset (N)={(u) |uV}, with each element appearing as many times as the number of different nodes having it as its-vector.
On (N) we will consider the ordering induced by the product partial order on Nn; that is, (m1,...,mn) (m1,...,mn) if and only if, mimi for each i=1,...,n. For each leaf i, we have that its-vector is (i)=(i), with (i) the vector with 0 at each position, except at its i-th position, where it is 1.
If u is not a leaf, we have that (u)=vk (vk), where the sum ranges over the set of children of u (Cardona et al., 2007, Lemma 4).
This property allows for the computation of (N) in polynomial time (see Section 6 below).
Example 2.
Consider the sbTSTC phylogenetic network in Figure 2.
In Table 2 we give its-representation, except for the leaves, whose-vector is trivial.
In the next section we will introduce a set of reduction procedures for sbTSTC phylogenetic networks.
It will turn out that the application conditions for these procedures can be read from the-representation of the network.
Lemma 3.
Let N be a sbTSTC phylogenetic network, i,j a pair of leaves, and let u be the parent of i.
Then j is sibling or quasi-sibling of i if, and only if: 1.
(u) is the least element in the set M ={(N) |(i)+(j)}.
2.
The multiset Mi ={(N) |(u)>(i)} is equal to {(i)}.
3.
The multiset Mj ={(N) |(u)>(j)} is equal to {(j)} (when j is sibling of i) or to {(j),(j)} (when j is quasi-sibling of i).
Proof.
Let us assume that j is sibling or quasi-sibling of i, and note that u, the parent of i, is a tree node.
In either case, both i and j are descendants of u, so that (u)M. Now, for any other node w with (w)M, we have that w = i and it is an ancestor of i, hence it is also an ancestor of u, and therefore (w)(u); hence, (u) is the least element in M. Moreover, the only-vector in Mi is (i), with multiplicity 1, because the only ancestor of i that is a non-trivial descendant of u is the leaf i itself.
The situation for Mj is analogous, taking into account that Mj contains a second copy of (j) in the case that the parent of j is hybrid.
As for the converse, let us assume that for a node w, its-vector is the least element in M. Note that, since a hybrid node and its single child (a tree node) have the same-vector, we can assume that w is a tree node.
Because of the definition of M, we have that w is an ancestor of both i and j.
Now, if some child v of w were an ancestor of both i and j, we would have that (w)>(v)(i)+(j), against our assumption on the minimality of (w) in M. Therefore, w has two children vi,vj such that vi is ancestor of i (but not of j) and vj is ancestor of j (but not of i).
Then, (vi)Mi and, by the uniqueness Table 2.-representation of the network in Figure 2 node-vector r (1,2,2,1) u (1,1,0,0) v (0,1,1,0) w (0,0,1,1) A (0,1,0,0) B (0,0,1,0) of the element in Mi, we have that vi = i, and it follows that w is the parent of i, that is, w=u.
Symmetrically, we have that vj Mj.
Now, two situations may arise: first, if the multiplicity of (j) in Mj is one, then vj = j and j is a sibling of i; second, if this multiplicity is two, then vj must be a hybrid node whose single child is j, hence j is quasi-sibling of i. Lemma 4.
Let N be a sbTSTC phylogenetic network.
Let j be a leaf sibling or quasi-sibling of another leaf i, and let u be the parent of i.
Then, outdeg(u)=2 if, and only if, (u)=(i)+(j).
Proof.
Note that with the assumptions made, and by the previous lemma, we have that (u)(i)+(j).
Now, the equality holds if, and only if, u has no other children apart from i and j (in case that j is sibling of i) or the hybrid parent of j (in case that j is quasi-sibling of i).
For future reference, we gather these last results into the following proposition.
Proposition 5.
Let N be a sbTSTC phylogenetic network.
The following properties can be decided from the knowledge of (N): 1.
Two leaves are siblings, or not.
2.
A leaf is quasi-sibling of another one, or not.
3.
A leaf is sibling or quasi-sibling of another leaf, and the parent of the latter has out-degree 2, or greater than 2.
4 THE REDUCTION PROCEDURES We now introduce four reduction procedures that decrease either the number of leaves or of hybrid nodes in a sbTSTC phylogenetic network.
Despite the name, the reductions we introduce here have nothing to do with the reduction process introduced in Moret et al.(2004).
As we have already mentioned, our reductions decrease either the number of leaves or hybrid nodes and they turn out to be reversible, allowing the recursive construction of all sbTSTC phylogenetic networks, while those in Moret et al.(2004) simplify the internal structure of the network without removing any leaf and are not reversible.
The T reduction.
Let N be a sbTSTC phylogenetic network on S, i,j two sibling leaves, u their common parent, and assume that outdeg(u)>2.
The DAG NT (i,j) is obtained by removing from N the leaf j and its incoming arc (Fig.5).
It is easy to check that the obtained DAG is a sbTSTC phylogenetic network on S\{j}.
Indeed, if the removed node j were a sibling of some hybrid node x, then i would still be a tree node 1484 [23:27 18/6/03 Bioinformatics-btn231.tex] Page: 1485 14811488 Tree-sibling phylogenetic networks sibling of x in NT (i,j), hence the tree-sibling condition is preserved.
Also, the time consistency and semi-binarity conditions are trivially preserved.
Note that, given NT (i,j), we can reconstruct N , up to isomorphism, by simply adding the leaf j and an arc from the parent of i to j.
Note also that the-representation of NT (i,j) can be easily obtained from that of N. Indeed, for any node u [except for the deleted leaf, which implies removing (j) from (N)] we have that its-vector in the reduced network is the same as in the original network but with the j-th component removed.
The TR reduction.
Let N be a sbTSTC phylogenetic network on S, i,j two sibling leaves, u their common parent, and assume that outdeg(u)=2.
Suppose also that N is not a tree with two leaves, which is equivalent to have that u is not the root of N. The DAG NTR(i,j) is obtained by removing from N the leaf j and its incoming arc, and collapsing the created elementary path into a single arc (Fig.6).
As in the previous case, the resulting network is a sbTSTC phylogenetic network on S\{j}.
Indeed, if the node u in N is sibling of a hybrid node w, then in the obtained network NTR(i,j) the leaf i is a sibling of w. Analogously to the previous case, given NTR(i,j), we can reconstruct N up to isomorphism by simply adding the leaf j, splitting the arc with head i by introducing an intermediate node u, and adding an arc from u to j.
Moreover, the-representation of NTR(i,j) can be easily obtained from that of N. The procedure is analogous to the previous case, taking into account that we have also to remove from (N) a node with-vector equal to (i)+(j).
The H reduction.
Let N be a sbTSTC phylogenetic network on S, j a leaf quasi-sibling of another leaf i, u the parent of i, v the parent of j, and assume that outdeg(u)>2.
The DAG NH(i,j) is obtained by removing from N the arc (u,v) and collapsing the resulting elementary path with intermediate node v into a single arc (Fig.7).
Since we have only removed a hybrid node of N , when collapsing the elementary path, it is straightforward to check that the obtained DAG is a sbTSTC phylogenetic network on S. Now, given NH(i,j), we can reconstruct N up to isomorphism by simply splitting the arc with head j by introducing an intermediate node v, and adding an arc from the parent of i to v. Note that the-representation of NH(i,j) can be easily obtained from that of N. Namely, for every node x [except for the removed hybrid node, which implies removing one copy of (j) from (N)] we have that if N (x)= (m1(x),...,mn(x)), then NH(i,j) (x)= (m1(x),...,mn(x)) with mk(x)= { mk(x) if k = j, mj(x)mi(x) if k = j.
This follows from the fact that we have only removed the paths x j that pass through the parent of i, which are in bijection with the paths x i.
The HR reduction.
Let N be a sbTSTC phylogenetic network on S, j a leaf quasi-sibling of another leaf i, u the parent of i, v the parent of j, and assume that outdeg(u)=2.
The DAG NHR(i,j) is obtained by removing from N the arc (u,v) and collapsing the created elementary u i jx u i jx Fig.5.
The T reduction.
u i j u i j Fig.6.
The TR reduction.
u v i j u v i j Fig.7.
The H reduction.
u v i j u v i j Fig.8.
The HR reduction.
paths with respective intermediate nodes u and v into single arcs (Fig.8).
The fact that the obtained DAG is a sbTSTC phylogenetic network on S follows as in the previous cases.
Also, given NHR(i,j), we can reconstruct N by simply splitting the arcs with respective heads i,j by introducing intermediate nodes u,v, and adding an arc from u to v. Moreover, the-representation of NHR(i,j) can be also obtained from that of N. The procedure is the same as in the last case, taking into account that we have also to remove from (N) a node with-vector equal to (i)+(j).
Remark.
Notice that given a sbTSTC phylogenetic network, it makes sense to apply to it the inverse of any of the reductions introduced, simply following the procedure to recover a network from its reduction.
However, the resulting DAG may not be a sbTSTC phylogenetic network.
Example 3.
In Figure 9 we show a sequence of reduction processes that, applied to the network in Figure 2, reduce it to a tree with two leaves.
1485 [23:27 18/6/03 Bioinformatics-btn231.tex] Page: 1486 14811488 G.Cardona et al.r u v wA B 1 2 3 4 HR(1,2) r v wB 1 2 3 4 HR(4,3) r v 1 2 3 4 TR(2,3) r 1 2 4 T(1,2) r 1 4 Fig.9.
Reduction processes for network in Figure 2.
Remark.
The construction given in Example 1 for the networks with maximal number of nodes can also be described in terms of the reductions (or rather their inverses) we have defined.
Indeed, Nn+1 can also be described as the network obtained from Nn by application of the inverses of the reductions TR(2,n+1), HR(1,2) and HR(n,n+1) (in this order).
5 THE-DISTANCE For any pair of phylogenetic networks N1,N2 on the same set of leaves, let d(N1,N2)=|(N1)(N2)|, where both the symmetric difference and the cardinality operator refer to multisets.
Our main result in this article is that this mapping d gives a distance on the class of sbTSTC phylogenetic networks on a given set S of taxa.
We remark that d is also a distance on the set of tree-child phylogenetic networks on S and, in particular, on phylogenetic trees, where it coincides with the RobinsonFoulds distance (Cardona et al., 2007).
Theorem 6.
Let N1,N2,N3 be sbTSTC phylogenetic networks on the same set of taxa.
Then: 1. d(N1,N2)0, 2. d(N1,N2)=0 if, and only if, N1 =N2, 3. d(N1,N2)=d(N2,N1), 4. d(N1,N3)d(N1,N2)+d(N2,N3).
Proof.
Except for the second statement, the result follows from the properties of the symmetric difference of multisets.
Also, if N1 and N2 are isomorphic, it follows from the definition of the-representation that (N1) and (N2) are equal as multisets.
We will prove the separation property (d(N1,N2)=0 implies that N1 =N2) by induction on the number n of leaves and the number h of hybrid nodes.
If n2, which implies that h=0, the result is obvious, since there exist only two such sbTSTC phylogenetic networks, namely the rooted trees with 1 and 2 leaves.
Also, when h=0, the networks are, in fact, trees and the separation property of the RobinsonFoulds distance implies that N1 =N2.
Let us assume that the result is proved for sbTSTC networks with at most n12 leaves, and with n leaves and at most h10 hybrid nodes.
Let N1, N2 be sbTSTC phylogenetic networks with n leaves and h hybrid nodes.
Because of Lemma 1 there exists a pair of leaves i,j such that j is a sibling of i (respectively, j is quasi-sibling of i) in N1.
Now since (N1)=(N2), we can apply Proposition 5 to get that j is also a sibling (respectively, quasisibling) of i in N2.
Moreover, also from Proposition 5 it follows that the out-degree of the parent of i in N1 is equal to 2 if, and only if, the out-degree of the parent of i in N2 is equal to 2.
From this, it follows that we can apply the same reduction to both networks; let N 1,N 2 be the networks obtained from N1,N2 using this reduction.
Since the-representation of the reductions depends only on the-representation of the original network and the reduction procedure applied, we get that (N 1)=(N 2).
Since now N 1 and N 2 have fewer leaves or hybrid nodes than N1 and N2, it follows from the induction hypothesis that N 1 =N 2.
Finally, since we can recover up to isomorphisms the original networks from their reduced networks and the reductions applied, we conclude that N1 =N2.
The tight bounds found in Section 2 for the number of internal nodes in a sbTSTC phylogenetic network allow us to find the diameter of this class of phylogenetic networks with respect to the-distance, that is, the maximum of the distances between two networks in this class.
The interest of having a closed expression for the diameter is that it allows to normalize the-distance in order to take values in the unit interval [0,1] of real numbers.
Proposition 7.
The diameter of the class of sbTSTC phylogenetic networks with respect to d is 0 when n2, 9 when n=3, and 10(n2) when n4.
Proof.
See the Supplementary Material.
As discussed before, we can now define the normalized-distance as d(N1,N2)= 110(n2) d(N1,N2) if the involved networks have n>3 leaves, or d(N1,N2)= 1 9 d(N1,N2) if n=3.
This way, d takes values in the interval [0,1], and there exist pairs of networks at maximum normalized distance 1 for every number of leaves.
Example 4.
Consider now the phylogenetic networks in Figure 10.
The two networks N1,N2 are adapted from networks (a) and (b) in Jin et al.(2007b) (Fig.10) (where we have substituted the actual names of the species by integers identifying them); we remark that the third one in the aforementioned paper and figure is isomorphic to the first one.
The phylogenetic tree T depicted above is the underlying tree from which both networks are obtained by adding edges corresponding to horizontal gene transfer events.
Both networks are binary and time consistent; however, the first one is tree-child (hence tree-sibling) while the second one is not tree-child, but it is tree-sibling.
Also, the tree can be considered a binary tree-sibling time consistent phylogenetic network.
Hence, we can compute their-distances, obtaining that the two networks are more similar to the underlying phylogenetic tree than to each other: d(T ,N1)=22, d(T ,N1)0.169, d(T ,N2)=32, d(T ,N2)0.246, d(N1,N2)=38, d(N1,N2)0.292.
1486 [23:27 18/6/03 Bioinformatics-btn231.tex] Page: 1487 14811488 Tree-sibling phylogenetic networks 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Fig.10.
Tree T (top) and networks N1 (middle), N2 (bottom) from (Jin et al., 2007b, Fig.10).
6 COMPUTATIONAL ASPECTS We have already mentioned in Section 3 that the-representation of a phylogenetic network can be efficiently computed by means of a simple bottom-up technique.
Indeed, if we define the height of a node as the length of the longest path starting in this node, we get a stratification of nodes.
The nodes with height 0 are the leaves, and their-vectors are trivially computed.
Assuming that we have computed the-vectors of nodes up to a given height h, we can compute the-vector of a node at height h+1 by simply adding up the-vectors of its children, which are already computed.
If the network has n leaves, m nodes and the out-degree of tree nodes is bounded by k <m, the cost of this computation is O(kmn)=O(m2n).
In order to improve the efficiency of the computations of distances below, the-representation of the network is stored with the-vectors sorted in any total order, for instance the lexicographic order; note that the computational cost of sorting the-representation is O(nmlogm); hence, the total cost of the computation and sorting is still O(m2n).
Also, given two networks and their-representations, their-distance can be computed efficiently.
We can assume that the-vectors of each network are sorted as explained above.
Then, a simultaneous traversal of the-representation of both networks allows the computation of their-distance in O(n(m1 +m2)), where m1,m2 are the number of nodes of each of the networks.
We have implemented the computation of the-representation of networks and the-distance between them in a Perl package (Cardona et al., 2008a), part of the BioPerl bundle (Stajich et al., 2002).
Note also that the reduction procedures introduced in Section 4 allow for the construction of all sbTSTC phylogenetic networks on a given set of taxa.
Let Nn be the set of isomorphism classes of sbTSTC networks on {1,...,n}, and let Nn,h be the subset of those with h hybrid nodes, so that Nn =Nn,0...Nn,2n4, if n>2, or Nn =Nn,0 otherwise (see Lemma 2).
The computation of N1,N2 is trivial, since both of them hold a single network.
To compute Nn,h, assume that Nn1,h and Nn,h1 are already computed and initialize Nn,h :=; then: For each network N Nn1,h, and for each leaf i of N (in1), construct the network N obtained by reversing the reduction T (i,n) and check whether it is a sbTSTC network.
If so, for each k =1,...,n1, let Nk be the network obtained by interchanging the leaves k and n. Set Nn,h :=Nn,h {N1,...,Nn}.
Repeat the step above with the reduction TR instead of T. For each network N Nn,h1, and for each ordered pair of leaves i,j of N (1 i,jn), construct the network N obtained by reversing the reduction H(i,j) and check that it is a sbTSTC network; if so, set Nn,h :=Nn,h {N}.
Repeat the last step with the reduction HR instead of H. Note that since the sequence of reduction steps that reduce a given phylogenetic network to a tree with two leaves is far from being unique, repetitions within the set Nn,h must be deleted.
Proposition 8.
The procedure above generates the set Nn,h of all sbTSTC phylogenetic networks (up to isomorphism) with n leaves and h hybrid nodes.
Proof.
It is straightforward to check that each of the generated networks is a sbTSTC phylogenetic network with n leaves and h hybrid nodes.
Let N be a sbTSTC phylogenetic network with n2 leaves and h hybrid nodes.
Two different, non-exclusive, situations may arise: (1) A reduction H(i,j) [or HR(i,j)] can be applied to N , obtaining a sbTSTC network with the same set of leaves and h1 hybrid nodes.
Then, N is obtained (in the third or fourth step of the procedure) from a network in Nn,h1.
(2) A reduction T (i,j) [or TR(i,j)] can be applied to N. Let N be the network obtained from N by permuting the leaves j and n. Then, the reduction T (i,n) [or TR(i,n)] can be applied 1487 [23:27 18/6/03 Bioinformatics-btn231.tex] Page: 1488 14811488 G.Cardona et al.to N , obtaining a network with set of leaves {1,...,n1} and h hybrid nodes.
Then, N is obtained (in the first or second step of the procedure) from a network inNn1,h.
Now, interchanging the leaves j and n in N we get the network N , hence it is also obtained by the described procedure.
The aforementioned Perl package contains a module to construct all tree-child phylogenetic networks on a given set of leaves.
We are working on a module that generates all sbTSTC phylogenetic networks, which will be incorporated in the next release of the package.
Some experimental computations are given in the Supplementary Material.
7 CONCLUSIONS While there exist in the literature some algorithms to reconstruct sbTSTC phylogenetic networks from biological sequences, no distance metric was known on this class that is both mathematically consistent and computationally efficient.
The-distance we have defined fulfills these two requirements, and is already implemented in a package included in the BioPerl bundle.
This-distance is based on the-representation of networks: a multiset of vectors of natural numbers, each of them associated to a node.
This-representation could also be used to define alignments between phylogenetic networks (Cardona et al., 2007, Section VI), which are useful in order to display at a glance the differences between alternative evolutionary histories of a set of species.
Some results in this direction will be shortly published elsewhere.
As a by-product, we have also obtained a procedure to generate all the sbTSTC networks on a given set of taxa up to isomorphism.
We are working in an efficient implementation for their generation, in order to include it in a forthcoming release of BioPerl.
ACKNOWLEDGEMENTS The authors would like to thank the anonymous reviewers for their valuable comments and suggestions on the article.
Funding: The research described in this article has been partially supported by Spanish DGI projects MTM2006-07773 COMGRIO and MTM2006-15038-C02-01.
Conflict of Interest: none declared.
