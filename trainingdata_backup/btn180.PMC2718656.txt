            [21:16 18/6/03 Bioinformatics-btn180.tex] Page: i259 i259i267 BIOINFORMATICS Vol.
24 ISMB 2008, pages i259i267doi:10.1093/bioinformatics/btn180 Annotation-based inference of transporter function Thomas J. Lee1,, Ian Paulsen2 and Peter Karp1 1Artificial Intelligence Center, SRI International, Menlo Park, CA, USA and 2Department of Chemistry and Biomolecular Sciences, Macquarie University, Sydney NSW, Australia ABSTRACT Motivation: We present a method for inferring and constructing transport reactions for transporter proteins based primarily on the analysis of the names of individual proteins in the genome annotation of an organism.
Transport reactions are declarative descriptions of transporter activities, and thus can be manipulated computationally, unlike free-text protein names.
Once transporter activities are encoded as transport reactions, a number of computational analyses are possible including database queries by transporter activity; inclusion of transporters into an automatically generated metabolicmap diagram that can be painted with omics data to aid in their interpretation; detection of anomalies in the metabolic and transport networks, such as substrates that are transported into the cell but are not inputs to any metabolic reaction or pathway; and comparative analyses of the transport capabilities of different organisms.
Results: On randomly selected organisms, the method achieves precision and recall rates of 0.93 and 0.90, respectively in identifying transporter proteins by name within the complete genome.
The method obtains 67.5% accuracy in predicting complete transport reactions; if allowance is made for predictions that are overly general yet not incorrect, reaction prediction accuracy is 82.5%.
Availability: The method is implemented as part of PathoLogic, the inference component of the Pathway Tools software.
Pathway Tools is freely available to researchers at non-commercial institutions, including source code; a fee applies to commercial institutions.
Contact: tomlee@ai.sri.com Supplementary information: Supplementary data are available at Bioinformatics online.
1 INTRODUCTION The importance of membrane transport proteins (transporters) to cells is illustrated by the fact that transporters typically make up 515% of the total gene content of sequenced organisms.
Transporters bring essential nutrients into the cell, and therefore partially determine the environments in which cell growth is possible.
They also provide pathogenic bacteria with resistance to antibiotics, and provide cancer cells with resistance to chemotherapies.
This research is motivated by the need to perform symbolic systems biology (Karp, 2001) analyses involving cellular transport systems, such as to compute the answers to the following queries for a given organism: (1) What chemical compounds can the organism import or export?
(2) For which cellular metabolic pathways can the organism neither import, nor produce via a metabolic reaction, the precursors required by that pathway?
This query identifies incompleteness in our knowledge of the metabolic and transport networks.
(3) Which molecules can enter a given cellular To whom correspondence should be addressed compartment based on its known transporter complement?
(4) How do the complements of transporter functions differ among two or more organisms?
These applications are discussed in more detail in Section 5.
Such analyses demand a computable (ontology based) representation of transporter function.
We developed such a representation several years ago as part of the Pathway Tools project (Karp et al., 2002; Krummenacker et al., 2005; Paley and Karp, 2006).
In Pathway Tools, transporter functions are represented as reactions in which the substrates of the reactions are labeled with the cellular compartments in which those substrates reside.
The curators of the EcoCyc database (DB) have manually populated EcoCyc with 238 transport reactions describing the functions of 214 transporters (Keseler et al., 2007) using the interactive editors within Pathway Tools.
However, manually curating transport reactions is very time-consuming.
Therefore, the problem addressed in this article is to develop an algorithm that will automatically infer the correct transport reaction for a transport protein given the English functional annotation assigned to the transporter.
Our work follows in a long line of research involving the application of natural-language processing techniques to bioinformatics [see, for example, Rzhetsky et al.(2004) and the biomedical text mining tracks in the Pacific Symposium on Biocomputing proceedings from 20062008] to extract ontologybased descriptions of biological knowledge from natural-language text.
However, our work does not involve processing of long texts, but rather of short textual descriptions of transporter functions.
This article describes an algorithm called the Transport Inference Parser (TIP) that identifies the transporter proteins within a genome, that infers the transport reaction(s) catalyzed by these proteins, and that constructs a full ontology-based representation for each transport reaction and protein within a Pathway/Genome DB (PGDB).
In addition, TIP infers multimeric transporter complexes, and constructs PGDB objects describing the inferred complexes.
TIP is a component of Pathway Tools, which is a comprehensive symbolic-systems biology software system that supports several use cases in bioinformatics and systems biology.
It supports development of organism-specific DBs [also called model-organism DBs (MODs)] that integrate many bioinformatics datatypes, from genomes to pathways, and is in use by many MOD projects including EcoCyc (Keseler et al., 2007), SGD (Nash et al., 2007), Mouse Genome Informatics (Bult et al., 2008), dictyBase (Chisholm et al., 2006) and the BioCyc collection of 370 PGDBs (Caspi et al., 2008).
Pathway Tools provides several other computational inferences including prediction of metabolic pathways, prediction of metabolic pathway hole fillers and prediction of operons.
It provides scientific visualization services including automatic display of metabolic pathways and full metabolic networks; a genome browser; and display of operons, regulons and full transcriptional regulatory 2008 The Author(s) This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/2.0/uk/) which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.
file:tomlee@ai.sri.com [21:16 18/6/03 Bioinformatics-btn180.tex] Page: i260 i259i267 T.J.Lee et al.Table 1.
Example inputs and outputs to TIP Input: protein function Output: inferred transport reaction predicted ATP transporter of cyanate cyanate[extracellular]+H2O+ATP=cyanate+phosphate+ADP putative phosphate ABC transporter, ATP binding subunit phosphate[extracellular]+H2O+ATP=2phosphate+ADP putative potassium channel K+[extracellular] =K+ sodium/proline symporter Na+[extracellular]+L-proline[extracellular] =Na+ +L-proline lactose transport system permease protein H+[extracellular]+ lactose+[extracellular] =H+ + lactose The inputs to TIP consist of transporter function names present in protein objects in PGDBs, plus other information available in the genome and its annotation.
The outputs of TIP consist of structured descriptions of transporter function in the form of transport reactions.
networks.
It supports visual analysis of omics datasets, such as painting omics data onto diagrams of the full metabolic network, full regulatory network and full genome.
It supports comparative analyses of PGDBs and analysis of biological networks such as identifying choke points (potential anti-microbial drug targets) in metabolic networks.
Although the annotation of membrane transporters from genome sequence has been extensively studied, we are not aware of any past work to generate transport reaction equations from free-text transporter annotations.
Our work fills this fundamental gap and will be of interest to researchers in genomics; metabolic modeling; and development of flux-balance models (Feist et al., 2007; Mo et al., 2007), where transporters are represented by reactions, and it is critical that all transport reactions be included in the model.
2 APPROACH The algorithm described in this article addresses several related problems: (1) Given the full set of monomeric proteins P of an organism, identify the subset PT of P that are transport proteins.
(2) For each monomeric transporter in PT, infer the one or more multimeric complexes that the transporter is involved in.
(3) For each monomeric transporter or transporter complex in PT, infer the one or more transport reactions that the transporter facilitates.
(4) Populate a PGDB with objects describing the inferred transport reactions and multimeric complexes.
We consider all information provided as part of an annotated genome sequence to be fair game toward solving these problems, such as the protein sequences, and the functional annotations of the transporters, which are typically provided in the Genbank/product field.
Our method relies principally on textual analysis of the natural-language descriptions of transporter functions that are found in annotated genomes.
Why do we perform this textual analysis rather than simply inferring the transport reaction directly from the protein sequence?
The reasons are that inferring every aspect of a transporter function from its sequence in a completely automated fashion is a very hard problem.
Many genome centers annotate transporter functions with oversight from a person who is skilled in sequence analysis.
We believe that replacing those expert annotations with transporter functions that are inferred automatically would reduce their quality; therefore, our approach is to build on the existing genome annotation.
Table 1 shows example inputs and outputs for TIP.
In Table 1, we write transport reaction substrate compartments as bracketed subscripts.
Omission of the compartment both in this table and in a PGDB, implies the default compartment: the cytoplasm.
Within a PGDB, transport reactions are represented as a single PGDB object.
One attribute of the object stores the reactants; a second attribute stores the products.
Each substrate (reactant or product) can be labeled with the identities of the one or more compartments in which the substrate occurs using a PGDB construct called an annotation, which is simply a way of attaching labeled information to an attribute value.
Our approach to transport function prediction for a PGDB consists of solving the following sequence of subproblems: (1) Starting with the full set of monomeric proteins of an organism as defined in the PGDB, identify the transport proteins PT.
(2) For each transport protein T: (a) identify the reaction substrates of T; (b) determine an energy coupling for T (e.g.is T a passive channel, or an ATP-driven transporter, or a sodium-driven symporter?)
(c) assign a compartment to each substrate of T; (d) identify and construct transporter complexes for T; and (e) construct a full PGDB reaction for T. The TIP algorithm is discussed in the following section.
See Supplementary Material for data supporting the algorithm.
3 METHODS Development of the rules underlying TIP was guided by Paulsens expert knowledge of transporters in general, and of the key pieces of knowledge one must have to characterize the function of a transporter: its primary substrate, carrier substrate(s) (if any), energy coupling mechanism and directionality.
Rule development was further guided by a review of hundreds of example transporter function descriptions from many genomes.
TIP has undergone an iterative development process whereby we have run it on many genomes, and manually adjusted the algorithm to improve its performance on transporter functions that it did not properly interpret, such as by extending the lists of indicator and counterindicator keywords.
One of the most challenging aspects of this project was the fact that different genome annotation centers use different styles and conventions in the phrasing of transporter annotations.
That is, the same transporter function is expressed in many different ways in different genomes.
Therefore, our development of TIP involved running it on genomes from multiple genome centers, and from a taxonomically diverse set of organisms.
Overall, the rules used by TIP are specific to transporter functions, but it may be possible to i260 [21:16 18/6/03 Bioinformatics-btn180.tex] Page: i261 i259i267 Transport function prediction use a similar strategy for converting free-text descriptions of other types of proteins into ontology-based descriptions.
3.1 Identify transport proteins To identify transporters, all proteins of the PGDB are filtered based on their annotation.
Each protein whose annotation contains an indicator keyword or phrase indicative of transport function (e.g.transport, channel, permease) is designated as a transporter, unless it contains a counterindicator keyword or phrase (e.g.regulator).
A counterindicator indicates that the annotation is likely to be difficult to analyze without sophisticated parsing techniques.
For example, such annotations sometimes refer to a transport function of another protein, rather than describing the function of its protein.
Each transporter is classified as either a high-quality or a low quality prediction.
A low-quality prediction is one in which there is incomplete or ambiguous information in the annotation.
Proteins whose annotations contain an ambiguity keyword or phrase (e.g.resistance) are considered low quality, as are those with annotations that exceed a threshold number of words (12), because we observed that textual analysis of long annotations is error prone.
One type of error is improperly identifying non-transporters as transporters because their annotation happens to contain transporter indicator keywords.
3.2 Identify reaction substrate(s) The protein annotation text is parsed and analyzed to identify one or more compounds that are the substrates of the transport reaction.
The set of smallmolecular weight chemical compounds and compound classes within the MetaCyc DB (Caspi et al., 2006) is used as a dictionary for compound identification.
MetaCyc contains an extensive set of synonyms for the names of metabolites.
All transporters have at least one primary substrate that crosses a cell membrane.
Most transporters have a single primary substrate (for example, probable phosphate transporter).
Other transporters have multiple primary substrates, due to loose substrate specificity (for example, cytosine/purine/uracil/thiamine/allantoin permease family protein or magnesium and cobalt transport protein corA, putative).
If no primary substrate can be found, the transporter is considered a low-quality prediction.
Secondary transporters have an additional carrier substrate, for example, for many transporters the transport of the primary substrate is driven by the proton gradient between the interior and exterior of the cell.
The carrier substrate defines the energy-coupling mechanism of the transport process.
The carrier substrate may be explicitly named in the annotation (for example, sodium:sulfate symporter transmembrane domain protein) or it may be unspecified.
Finally, a transport reaction may have one or more auxiliary substrates.
For example, ATP-driven transporters include the compounds ATP, ADP and H2O as auxiliary substrates; these are not determined by parsing the annotation for substrate names, but are implied by the energycoupling mechanism.
A simple search of a compound DB for words that occur in the annotation will yield many false positives (for example, as), which are filtered using an exception list of compounds that do not occur biologically, or do not typically occur in transport reactions.
A substrate name in the annotation may not correspond exactly to the chemical names in MetaCyc.
Substrate names are canonicalized for DB matching by removing spaces, hyphens and other punctuation; by converting to lower case; by converting plurals to singular form; and by stripping off affixes (for example,-specific,-transporting).
Certain elemental forms are converted to their ionic form (for example, hydrogen to H+).
Some substrates are specified as classes of compounds, rather than individual compounds (for example, amino acid transporter).
This is not a difficult complication, because MetaCyc includes both compound classes and individual compounds.
However, since many classes have multi-word names, word sequences as well as individual words must be considered.
It is assumed that the first substrate or a group of textually contiguous substrates found in the annotation are the substrates in the transport reaction; subsequent substrates are ignored.
For example, in the annotation Ca+2 transporter; possible Mg+2 transporter only Ca+2 would be detected as a substrate.
In practice, this simplifying assumption leads to few incorrect substrate predictions.
3.3 Determine energy coupling mechanism In a PGDB, the energy coupling of a transport reaction determines the class of reaction within the Pathway Tools reaction ontology under which that reaction object is created.
The couplings currently handled by TIP are Ion channel: ions passively diffuse through the transporter.
The reaction equation is ion[extracellular] = ion[cytosol].
Secondary transporters: a secondary (carrier) substrate is co-transported with the primary substrate.
If substrates are transported in the same direction the reaction equation is primary[extracellular]+carrier[extracellular] = primary[cytosol]+carrier[cytosol].
If substrates are transported in the opposite direction the reaction equation is primary[extracellular]+ carrier[cytosol] =primary[cytosol]+carrier[extracellular].
ATP-dependent (ATP): the hydrolysis of ATP provides energy to transport a primary substrate that is a solute.
The reaction equation is H2O+ATP+solute[extracellular] =phosphate+ADP+solute[cytosol].
Phosphenolpyruvate-dependent phosphotransferase system (PTS): phosphenolpyruvate is used as an energy source and phosphate donor to transport and phosphorylate a primary substrate that is a sugar.
The reaction equation is phosphoenolpyruvate+sugar[extracellular] = pyruvate+phosphorylated-sugar[cytosol].
Unknown: a catch-all class used if a more specific determination cannot be made.
The reaction equation is substrate[extracellular] = substrate[cytosol].
To identify the energy coupling, the following rules are applied to the predicted primary substrate(s) and annotation: (1) TIP is configured to treat a few primary substrates as being indicative of a particular coupling.
For example, the transport of protoheme indicates an ATP transporter because the only transporters known for protoheme are ATP driven.1 (2) If no coupling is indicated by the primary substrate, the annotation is searched for the presence of keywords indicating an energy coupling.
For example, channel indicates an ion channel transporter, carrier indicates a secondary transporter and atp-binding indicates an ATP transporter.
(3) If no coupling clues are present, the reaction is put into a default class indicating that the coupling mechanism is unknown.
For secondary transporters, the carrier substrate must be determined.
The following rules are applied in order: (1) If one of the substrates identified is either a proton or a sodium ion, it is designated as the carrier, and the remaining substrates become primary substrates (for example, sodium:glutamate symporter).
(2) If there are exactly two substrates, one is chosen arbitrarily as the carrier, and the other becomes the primary substrate.
(3) The carrier is assumed to be a proton; all other substrates become primary substrates (for example, amino acid transport system carrier protein implies a proton carrier and amino acid as the one primary substrate).
1If multiple substrates have been predicted, it is possible for this rule to make conflicting predictions about the coupling.
However, given the few (6) substrates that imply a coupling, conflicts do not occur in practice.
i261 [21:16 18/6/03 Bioinformatics-btn180.tex] Page: i262 i259i267 T.J.Lee et al.3.4 Assign a compartment to each substrate A complete transport reaction includes the designation of the initial and final cell compartments of each primary substrate.
Our method searches the annotation for keywords indicating the initial or final compartment of the primary substrate(s).
For example, uptake indicates transport into the cell, and export or efflux indicates transport out of the cell.
For transporters with a carrier substrate, certain keywords indicate transport direction relative to the carrier.
For example, symport indicates that both the carrier and the primary substrate start and end in the same compartment.
The keyword antiport indicates an exchange between two compartments.
In the absence of more specific information, it is assumed that transport of the primary substrate (and carrier substrate if present) is into the cytoplasm.
Our current implementation of TIP is limited in that it is oriented toward bacteria, and does not perform well on eukaryotic compartments.
In particular, it does not detect eukaryotic compartment names, nor does it attempt to assign eukaryotic compartments to substrates by other means.
In addition, even for bacteria the implementation currently assumes a Grampositive cell type, meaning it does not distinguish the inner membrane from the outer membrane.
3.5 Identify and construct transporter complexes Many transporters are multimeric systems of several protein monomers.
In these systems, the proteins comprise a transport complex that catalyzes the transport reaction.
TIP infers the grouping of a set of individual transport monomer proteins into a complex (and constructs the representation of the complex in the PGDB) if the monomers satisfy all the following rules: (1) The predicted substrate (or set of substrates) for each monomer in a complex must be identical.
(2) The predicted energy coupling must be ATP or PTS.
(3) The genes of all proteins within a multimeric complex must share a common operon.
Rule (1) enforces a requirement of consistency among the monomeric annotations with respect to substrates.
Rule (2) is in place because other types of transporters are less commonly found as multimers.
Rule (3) reflects that the co-occurrence of transporter monomers within a single operon is a strong indicator of multimers.
Note that this implies that a genome with no operons will have no predicted multimers.
Thus, no multimers are inferred in eukaryotes, and multimer inference is attempted only for PGDBs that contain operons.
Operons can be predicted by the Pathway Tools operon predictor (Romero and Karp, 2004) or defined manually using Pathway Tools editors.
We believe these rules will result in few false positive predictions, but acknowledge they will fail to identify a significant number of multimeric transporters.
3.6 Construct full compartmentalized reaction At this point in the method, all predictions have been made.
Each predicted transport reaction is added to the PGDB.
One reaction is created for each predicted primary substrate.
The primary substrate is added to the list of reactants of the reaction, and is annotated with its initial compartment; it is then added to the list of products of the reaction, annotated with its final compartment.
If present, the carrier substrate is added as a reactant and a product, annotated with the appropriate compartment depending on whether it is a symport or an antiport reaction.
Each auxiliary substrate implied by the coupling (for example, ATP, ADP and water for ATP reactions) is added to the appropriate side of the reaction.
If the coupling mechanism is PEP, the primary substrate is phosphorylated during the transport.
To reflect this, MetaCyc is searched for a phosphorylated variant of the primary substrate.
If found, it replaces the primary substrate as a product of the transport reaction.
In the atypical case in which it is not found, the unmodified primary substrate remains both a reactant and a product in the reaction.
To maximize the notion of MetaCyc reactions as a controlled vocabulary, we prefer to maintain a one-to-one mapping between reaction identifiers and reaction equations.
That is, we do not want MetaCyc or other PGDBs to define the same reaction under different identifiers.
Thus, if a reaction with the same substrates as those in the transport reaction just inferred are found in MetaCyc, the MetaCyc reaction object is imported into the PGDB where TIP is being run.
Otherwise, a new reaction object is created.
3.7 Examples We present an extended example of the operation of the TIP algorithm for a representative protein, followed by examples of erroneous predictions and successive refinement to TIPs behavior.
3.7.1 Extended example Consider a protein with the annotation sodium/proline symporter.
First, the protein is identified as a transporter by the presence of the keyword symporter.
Next, the annotation is scanned for substrates; TIP has a rule that considers words separated by slashes as possible multiple substrates.
TIP queries MetaCyc with the word sodium, that matches the compound object Na+, which has a synonym sodium.
Similarly, MetaCyc is queried with proline, that matches the compound object L-proline.
The energy coupling mechanism is determined to be SECONDARY by the presence of the keyword symporter.
A secondary transporter has a carrier substrate; TIP applies the rule that if either a proton or a sodium ion is present, it is the carrier.
So Na+ is made the carrier substrate, and L-proline remains the primary substrate.
The presence of symporter indicates that the primary and carrier substrates start and end in the same compartments.
Absent other indicators, TIP assumes transport is into the cytosol.
This leads to the compartment assignments of [extracellular] to both substrates on the left side of the reaction, and of [cytosol] to both substrates on the right side.
Since the coupling is not ATP or PTS, no attempt to identify transport complexes is made.
Finally, the full transport reaction is constructed: Na+[extracellular]+L-proline[extracellular] =Na+ +L-proline.
Provenance data is attached indicating that the reaction was predicted by TIP, the date and time of the creation of the reaction, the name of the user operating TIP and an evidence code indicating that the supporting evidence for the prediction is computational in nature.
3.7.2 Examples of errors TIP fails to identify a protein with the annotation arsenical pump-driving ATPase as a transporter because neither pumpdriving nor ATPase had been identified as transport indicator keywords.
For a protein with the annotation magnesium-exporting atpase, TIP detects the substrate correctly, as it recognizes that exporting is an acceptable suffix for a substrate.
However, TIP did not, at the time this protein was encountered, include this suffix as a clue for compartment assignments; this resulted in the incorrect assignment of the cytosol as the ending compartment, rather than the starting compartment, of magnesium.
Upon encountering this example, TIP is easily modified to recognize that this suffix implies transport out of the cytoplasm.
For a protein with the annotation high-affinity iron permease, TIP fails to detect a substrate because, although iron is clearly mentioned, iron has multiple valences and there is no mention of which form of iron is transported.
TIP currently has no rules to disambiguate such
