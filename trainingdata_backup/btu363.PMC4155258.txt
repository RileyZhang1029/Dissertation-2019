          OP-CBIO140408 2678..2680 Vol.
30 no.
18 2014, pages 26782680 BIOINFORMATICS APPLICATIONS NOTE doi:10.1093/bioinformatics/btu363 Sequence analysis Advance Access publication May 29, 2014 PatternCNV: a versatile tool for detecting copy number changes from exome sequencing data Chen Wang1,y, Jared M. Evans1,y, Aditya V. Bhagwate1, Naresh Prodduturi1, Vivekananda Sarangi1, Mridu Middha1, Hugues Sicotte1, Peter T. Vedell1, Steven N. Hart1, Gavin R. Oliver1, Jean-Pierre A. Kocher1, Matthew J. Maurer1, Anne J. Novak3, Susan L. Slager1, James R. Cerhan2 and Yan W. Asmann4,* 1Division of Biomedical Statistics and Informatics, Department of Health Sciences Research, 2Division of Epidemiology, Department of Health Sciences Research, 3Division of Hematology, Department of Internal Medicine, Mayo Clinic, 200 First Street SW, Rochester, MN 55905 and 4Department of Health Sciences Research, Mayo Clinic, 4500 San Pablo Road South, Jacksonville, FL 32224, USA Associate Editor: Michael Brudno ABSTRACT Motivation: Exome sequencing (exome-seq) data, which are typically used for calling exonic mutations, have also been utilized in detecting DNA copy number variations (CNVs).
Despite the existence of several CNV detection tools, there is still a great need for a sensitive and an accurate CNV-calling algorithm with built-in QC steps, and does not require a paired reference for each sample.
Results: We developed a novel method named PatternCNV, which (i) accounts for the read coverage variations between exons while leveraging the consistencies of this variability across different samples; (ii) reduces alignment BAM files to WIG format and therefore greatly accelerates computation; (iii) incorporates multiple QC measures designed to identify outlier samples and batch effects; and (iv) provides a variety of visualization options including chromosome, gene and exon-level views of CNVs, along with a tabular summarization of the exon-level CNVs.
Compared with other CNV-calling algorithms using data from a lymphoma exome-seq study, PatternCNV has higher sensitivity and specificity.
Availability and implementation: The software for PatternCNV is implemented using Perl and R, and can be used in Mac or Linux environments.
Software and user manual are available at http://bioinformaticstools.mayo.edu/research/patterncnv/, and R package at https://github.com/topsoil/patternCNV/.
Contact: Asmann.Yan@mayo.edu Supplementary information: Supplementary data are available at Bioinformatics online.
Received on September 11, 2013; revised on April 22, 2014; accepted on May 22, 2014 1 INTRODUCTION DNA copy number variations (CNVs) are genomic structural changes that result in regional or chromosomal loss or gain of DNA copies (Hastings et al., 2009).
Owing to the significant roles in human diseases, various laboratory techniques have been developed to detect CNVs, including recently advanced massive parallel sequencing of whole genomes and coding exomes.
For exome-seq, it is commonly observed that coverage depths of short reads across regions vary, caused by different target capture efficiencies (Parla et al., 2011), as well as the differences in mappability of exons.
Such coverage variations impose substantial challenges for reliable CNV detection.
Most existing methods use a paired-sample approach, based on the intuitive assumption that somatic sample and its paired reference share similar coverage bias that can be cancelled out through pairing (Koboldt et al., 2012; Sathirapongsasuti et al., 2011).
Although this assumption approximately holds, it oversimplifies the problem with two limitations unaddressed: (i) The region-specific noise (coverage variability) of a local region is not accounted for, leading to amplified noise in log-ratio values of coverage between sample and the paired reference.
(ii) In the case of a missing or low-quality reference sample, CNV detection based on paired reference will be infeasible or have degraded accuracy/sensitivity.
A recent published method, FishingCNV, tried to address the second limitation by using the average of multiple reference samples as the denominators in log-ratio calculation, but did not address the regional noises in individual samples (the numerator), which led to false CNV calls (details in Supplementary Section S2.3).
Considering these issues, we proposed a novel method called PatternCNV, which summarizes overall consistent patterns of both depths and variability of exonic region coverage across samples, where patterns of coverage and variability are summarized using multiple normal or reference samples.
We observed that the same patterns only exist between samples prepared using the same version of exome capture kit.
During CNV detection, we compute the differences of observed coverage versus the common pattern, while penalizing regions associated with larger variability using a weighting scheme.
Further, wholegenome CNV can be interpolated from exon-level CNV using any third-party segmentation method, e.g.circular binary segmentation (Olshen et al., 2004).
The PatternCNV was implemented in two different versions: a Mac and Linux/Unix version, and an R package version.
We also developed a conversion tool to transform Binary version *To whom correspondence should be addressed.
yThe authors wish it to be known that, in their opinion, the first two authors should be regarded as joint First Authors.
The Author 2014.
Published by Oxford University Press.
This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/ by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited.
For commercial re-use, please contact journals.permissions@oup.com Due ; Koboldt, Zhang etal.
2012 1 2 2nd (ii) (CBS) of sequence Alignment/Map (BAM) format files to much smaller wiggle (WIG) format files (51% of BAM file size), which greatly speeds up pattern learning and CNV calculation.
When compared with other state-of-the-art CNV algorithms in a lymphoma case study, PatternCNV displayed higher resolution and greater sensitivity/specificity.
2 FEATURES 2.1 Input, output and major functions PatternCNV is divided into three major functional components: (i) BAM-to-WIG conversion for improved computational performance: a BAM2WIG converter using SAMtools (Li et al., 2009) and BEDtools (Quinlan and Hall 2010), which takes as input a BAM file, a file of Browser Extensible Data (BED) format defining exon regions and a second BED file for capture targets defined by the exome capture kit.
The outputs are WIG files with greatly reduced file sizes compared with BAM files; (ii) CNV detection: starting with WIG files, PatternCNV estimates the coverage and variability patterns from multiple reference samples and calculates CNVs relative to the pattern for all samples including the
