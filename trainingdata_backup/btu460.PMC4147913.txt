          OP-CBIO140506 512..518 Vol.
30 ECCB 2014, pages i512i518 BIOINFORMATICS doi:10.1093/bioinformatics/btu460 A new statistical framework to assess structural alignment quality using information compression James H. Collier1, Lloyd Allison1, Arthur M. Lesk2, Maria Garcia de la Banda1 and Arun S. Konagurthu1,* 1Clayton School of Information Technology, Monash University, Clayton, VIC 3800, Australia and 2Department of Biochemistry and Molecular Biology, Pennsylvania State University, University Park, PA 16802, USA ABSTRACT Motivation: Progress in protein biology depends on the reliability of results from a handful of computational techniques, structural alignments being one.
Recent reviews have highlighted substantial inconsistencies and differences between alignment results generated by the ever-growing stock of structural alignment programs.
The lack of consensus on how the quality of structural alignments must be assessed has been identified as the main cause for the observed differences.
Current methods assess structural alignment quality by constructing a scoring function that attempts to balance conflicting criteria, mainly alignment coverage and fidelity of structures under superposition.
This traditional approach to measuring alignment quality, the subject of considerable literature, has failed to solve the problem.
Further development along the same lines is unlikely to rectify the current deficiencies in the field.
Results: This paper proposes a new statistical framework to assess structural alignment quality and significance based on lossless information compression.
This is a radical departure from the traditional approach of formulating scoring functions.
It links the structural alignment problem to the general class of statistical inductive inference problems, solved using the information-theoretic criterion of minimum message length.
Based on this, we developed an efficient and reliable measure of structural alignment quality, I-value.
The performance of I-value is demonstrated in comparison with a number of popular scoring functions, on a large collection of competing alignments.
Our analysis shows that I-value provides a rigorous and reliable quantification of structural alignment quality, addressing a major gap in the field.
Availability: http://lcb.infotech.monash.edu.au/I-value Contact: arun.konagurthu@monash.edu Supplementary information: Online supplementary data are available at http://lcb.infotech.monash.edu.au/I-value/suppl.html 1 INTRODUCTION A protein structural alignment is an assignment of residueresidue correspondences between the amino acids of two or more proteins, based on their 3D structure.
Protein structural alignments support basic and applied research in molecular biology.
For example, they reveal how protein families evolve, identify patterns of conservation in amino acid sequences that fold into similar structures, facilitate comparative modelling of structures from sequence and guide experimental solutions to structures using crystallographic molecular replacement (Konagurthu et al., 2006).
The last four decades have seen the development of many methods aimed at generating biologically meaningful structural alignments.
While the number of new methods is estimated to be doubling roughly every five years (Hasegawa and Holm, 2009), several comparative studies have observed many inconsistencies and paradoxes when comparing the alignments generated by existing methods.
Noteworthy among these studies are those by Michael Levitt (Kolodny et al., 2005), Liisa Holm (Hasegawa and Holm, 2009) and Manfred Sippl (Sippl and Wiederstein, 2008; Slater et al., 2013) and colleagues.
A common theme emerging from all these studies is the need for a systematic framework to asses the quality of structural alignments.
While a handful of quantitatively rigorous statistical models for structure comparison have been proposed for this, there is no consensus regarding their usefulness.
This is in stark contrast to the state-of-the-art in the closely related problem of aligning protein sequences, where many rigorous statistical models have been proposed to quantitatively assess sequence alignment quality (Allison et al., 1992; Altschul, 1991; Karlin and Altschul, 1990).
This has, in turn, helped standardize the task of measuring sequence alignment quality and, thus, the task of generating meaningful sequence alignments.
In this work, we begin by examining the foundations of how structural alignments are currently assessed.
Guided by good biological insights, current structural aligners use a scoring function to quantify the structural alignment quality.
This has traditionally been achieved by combining the contributions of a small number of important criteria into an easy-to-compute scoring function.
[For a comprehensive list of commonly used scoring functions, see Hasegawa and Holm (2009)].
Overwhelmingly, the two key criteria that various current measures use are coverage and fidelity.
Typically, coverage measures the number of correspondences (or equivalences) in an alignment and, in some cases, also considers the number of gaps.
Fidelity, measures how similarly positioned the aligned residues are.
This is commonly (but not always) based on the root-mean-square deviation (RMSD) computed after the best rigid-body transformation of corresponding residues is found.
To search for the best structural alignment, the goal of the aligners is to simultaneously maximize coverage and fidelity.
However, these two objectives are in direct conflict with each other.
We observe that most of the current proliferation of structural alignment scoring functions arise from attempts to reconcile this conflict, that is, existing scoring functions differ mainly in how they combine these two criteria.
As the reviews show, existing scoring functions do not generate consistent results, even when aligning structures that have only moderately diverged in evolution (Hasegawa and Holm, 2009; Kolodny et al., 2005; Slater et al., 2013).
*To whom correspondence should be addressed.
The Author 2014.
Published by Oxford University Press.
This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited.
For commercial re-use, please contact journals.permissions@oup.com ; Altschul, 1991; Allison etal., 1992 standardise ( ) maximise XPath error Undefined namespace prefix Because this traditional approach of formulating a scoring function has been explored extensively over the last four decades, further development along the same lines is unlikely to provide any major breakthrough.
Therefore, this field will stand to benefit by departing from the traditional approaches and exploring radically new ones.
This paper is a step in this direction.
Structural alignment as an inductive inference problem.
The goal of inductive inference is to propose a theory (or hypothesis) that is able to best explain the observed data.
Structural alignment can thus be seen an instance of the general class of inference problems.
In this context, an alignment (i.e.residueresidue correspondence) is a hypothesis that attempts to explain the residue residue relationships between two protein structures, whose observed data is the (x, y, z) coordinates of the structures.
In general, any hypothesis has a certain (descriptive) complexity.
A complex hypothesis with more free parameters can predict (or fit, explain) a greater variety of observed data than a simpler hypothesis.
Therefore, in order to choose the best hypothesis for any inference problem, one is confronted with a trade-off between hypothesis complexity and its fit with the observations.
For structural alignments, this trade-off is related to the conflict between coverage and fidelity.
Coverage (in various forms handled in the current scoring functions) is a crude approximation of the (alignment) hypothesis complexity.
Similarly, the fidelity (or goodness of fit with the observed data) of a structural alignment is approximated using RMSD of superposition or using some distance measure.
These rudimentary approximations cause the existing scoring functions to introduce several tunable parameters in an attempt to balance the contributions between coverage and fidelity of structural alignments.
This has been a major source of the inconsistencies observed in alignments.
The field of statistical learning and inference provides rigorous approaches to address this trade-off systematically.
In the early 1960s, several landmark papers proposed links between inductive inference and information theory (Kolmogorov, 1965; Solomonoff, 1960; Wallace and Boulton, 1968).
The Minimum Message Length (MML) principle (Wallace and Boulton, 1968) provided the first practical information-theoretic criterion for hypothesis selection based on observations.
It is used here to rigorously assess structural alignment quality and reliably differentiate between competing alignments.
Structural alignment quality and lossless information compression.
The pioneering work of Claude E. Shannon (Shannon, 1948) provides the means to quantify information: the length of the shortest code required to transmit, losslessly, an observed event.
This can be understood as the length of the shortest message needed to communicate the event losslessly between an imaginary sender (Alice) and receiver (Bob).
In this context, the structural alignment problem can be rationalized as a communication process between Alice and Bob, where Alice has access to the (x, y, z) coordinates of two protein structures and she wants to encode and transmit this information to Bob losslessly.
Two possible scenarios then arise: (i) If the two are unrelated to each other structurally, Alice cannot do better than to encode and transmit the information of the two structures independently, one after another.
That is, knowledge of one structure (called reference, or S) does not provide information about the other (called target, or T) and, thus, knowledge of S cannot be used to compress T. This form of independent transmission is termed here as the null model message.
(ii) On the other hand, if the two structures are structurally related (i.e.there is a meaningful alignment between the two), knowledge of S reveals information about T. The more similar the structures, the more information one reveals about the other.
Alice can use this similarity to compress and transmit the information of the target structure using the information of the reference.
For Bob to decode the information of the target losslessly (i.e.to the precision with which Alice sees it), he will require the structural information of the reference structure plus the information of its proposed relationship (i.e.the structural alignment) with the target.
This will allow Alice to encode the target more concisely than stating the target structure using a null model.
We call this form of transmission, the alignment model message (to contrast it with the null model message, where the structures are transmitted independently).
We note that this information-theoretic framework for structural alignment is intuitive.
If the proposed alignment relationship is a poor one, then the encoded alignment model message will be inefficient (i.e.long).
Alternatively, if the alignment relationship is a good one, then the transmission of the target becomes efficient (i.e.short).
Therefore, the total message length of the lossless transmission of coordinate information (using an alignment hypothesis) forms an excellent measure to assess structural alignment quality.
It follows that the best alignment is the one with the shortest total message length of lossless transmission.
While we have intuitively rationalized this framework as a communication process, this message paradigm is also backed by mathematical rigour.
Formally, let A denote some alignment between structural coordinates S and T. Using the product rule of probability over three events A, S and T we have: PA&S&T=PA PSjA PTjS&A =PA PS PTjS&A 1 where PA&S&T gives the joint probability of alignment A for structures S and T, PA the prior probability of the alignment, PTjS&A the likelihood of T given S and A.
Note, PSjA is P(S) because S and A are assumed to be independent.
Shannons mathematical theory of communication (Shannon, 1948) gives the relationship between the shortest message length I(E) to communicate losslessly any observation E, and its probability P(E) as IE= log PE.
Technically, I(E) denotes the Shannon information content of E. Restating equation 1 in terms of information content, we obtain: IA&S&T=IA+IS+ITjS&A 2 where transmitting the information of the reference structure S takes I(S) bits, transmitting the alignment information takes IA bits and transmitting the information of the target structure T using A and S takes ITjS&A bits.
Our message length measure has the following three key properties, which are not achieved by previous scoring functions: (1) The difference between the lengths of the messages needed to transmit the structures S and T using any two alignments, gives their log-odds posterior ratio.
i513 Structural alignment quality using data compression Since nineteen sixties rationalised 1 2 , , , , , rationalised , IA1 &S&T IA2 &S&T=log PA2 &S&T PA1 &S&T  =log PS&TPA2jS&T PS&TPA1jS&T  =log PA2jS&T PA1jS&T  3 As a result, any two competing alignment hypotheses A1 and A2 can now be compared based on their message lengths.
Therefore, the best alignment hypothesis A is the one that results in the shortest message length value of IA&S&T).
(2) Our measure permits a natural null hypothesis test where the statistical significance of any proposed alignment hypothesis can be estimated.
Any alignment hypothesis A whose message length IA&S&T is worse (longer) than that of the null model message, IS&T=IS+IT, must be rejected.
(3) This measure provides an objective, formal trade-off between the complexity of the alignment (IA) and the fidelity of the structures given the proposed alignment (ITjS&A).
Unlike previous attempts, these terms are not ad hoc approximations, as they represent rigorous estimations of Shannon information content based on lossless encoding and compression.
2 METHODS 2.1 Computation of the null model message length The null model message corresponds to the transmission of protein coordinates without an alignment hypothesis.
(In this work, we consider only the C coordinates.)
We have previously defined [for a completely different problem (Konagurthu et al., 2012)] a null model encoding of coordinates along a protein chain.
We will briefly summarize this approach, as elements of this encoding are used and developed further in our current work.
The null model encoding relies on the observation that the distance between successive C atoms in a protein chain is highly constrained to 3:8 0:2 (s.d.)
A.
For a chain of coordinates fp1; p2;... ; png, any coordinate pi+1 can be transmitted given the previous pi, by first transmitting the distance ri between pi and pi+1 using a normal distribution Nr;; stated to =0:001 A accuracy, with =3:8 A and = 0:2 A.
(=0:001 reflects the precision of statement of coordinate data, which is three places after the decimal point as reported in the protein data bank.).
We represent the length of this encoding as Iri.
With this information transmitted, Bob now knows that pi+1 lies on a sphere of radius ri centred at pi, but does not yet know where exactly on the sphere it is.
Assuming that pi+1 is distributed uniformly over the surface of the sphere, transmitter Alice can discretize the spheres surface into cells, each of area 2.
Using this discretization, pi+1 can be transmitted as cell number ci+1.
The numbering convention of the discretization is in the shared codebook.
With the knowledge of pi, ri and ci, Bob can reconstruct pi+1 to the stated accuracy.
Stating the cell number takes Ici= log 2 2 4r2 i  =log 24r2i  2log 2 bits.
When sending a chain of C coordinates fp1; p2;... ; png over a null model message, we assume that p1 is the origin and, hence, does not need to be transmitted as part of the message.
Even if p1 is not assumed to be the origin, its encoding will add a fixed one-time cost to the message length.
Thus, to transmit the chain of points p1; p2;... ; pn over the null model, Alice needs to send to Bob the number n of C atoms in the chain, followed by incrementally transmitting (using the method above) p2 given p1, p3 given p2 and so on, until all coordinates are transmitted.
Alice can transmit the number n over a integer distribution.
Wallace and Patrick (1993) gave an efficient code (Iintegern) for transmitting any positive integer n40.
Therefore, the total message length required to send all the coordinates over the null model message takes Inullp1;... ; pn=Iintegern+Xn1 i=1 Iri+Ici bits.
Using the above, the coordinates of structures S=fS1;S2;... ;SjSjg and T=fT1;T2;... ;TjTjg are sent as independent chains of coordinates over the null model, taking InullS&T=InullS+InullT bits.
2.2 Computation of the alignment model message length Equation 2 gives the amount of information required to transmit the coordinates of structures S and T using the alignment hypothesis A.
To estimate this, the explanation message involves transmitting: the coordinates of S, the residueresidue correspondences proposed by the alignment in A and, finally, the coordinates of T using the information of S and A.
2.2.1 Transmitting the coordinates of S This is achieved by sending the coordinates of S=fS1;S2;... ;SjSjg over the null model.
Therefore, IS=InullS1;S2;... ;SjSj bits.
2.2.2 Transmitting the correspondences inA Any alignment can be described as a string switching between three states: match (m), insertion (i) and deletion (d) states.
This alignment string can be transmitted losslessly using a first-order Markov model.
To transmit an alignment over a 3-state Markov chain, we use an approach similar to the adaptive encoding method used by Wallace and Boulton (1969) over a multinomial (n-state) distribution.
The adaptive encoding here requires maintaining nine running counters, one for each possible transition probability, all initialized to 1.
Traversing the alignment string left to right, for every observed transition, Alice estimates its probability by dividing the current value of the corresponding transition counter by the sum of all counters from previous to any state.
After the probability is estimated, Alice encodes the current alignment state using this probability and then increments the corresponding counter by 1.
The code length to encode each state is the negative logarithm of its estimated probability.
Summing each transition over the entire alignment gives the code length, IA.
2.2.3 Transmitting the coordinates of T given S and A With the information of S and A known to Bob, Alice can now use that information to encode the coordinate information of T. Intuitively, our encoding is based on the fact that when scanning A from left to right, Alice views T as runs of coordinates that alternate between blocks of insertions and matches with respect to S and the stated alignment.
Note that all deletion blocks (with respect to S) in T are ignored as they contain no information to be transmitted about T. More formally, let A yield fI1;... ; Img insertion blocks, where any Ik represents a consecutive stretch of coordinates that are inserted in T (with respect to S).
Each insertion block is transmitted as a null message taking IinsTjS&A= Xm k=1 InullIkbits: What remains to be sent to Bob are the coordinates in T aligned to corresponding coordinates in S, that is, the matches.
Let fSi1 ;Si2 ;... ;Sin g and fTj1 ;Tj2 ;... ;Tjn g where 1 i15... in jSj and 1 j15... jn jTj, denote the ordered set of corresponding coordinates in S and T, respectively.
Bob already knows S and the alignment.
From the alignment information he can infer the indexes of the aligned residue residue correspondences: (i1, j1), (i2, j2),... ; (in, jn) between S and T. Thus, Alice can use the following procedure to transmit the aligned coordinates in T. To start the procedure, the first three matched coordinates of fTj1 ;Tj2 ;Tj3 g are sent over the null model message taking: IstartupTjS i514 J.H.Collier et al.1 ( ) summarise since.2 the discretise initialised &A=InullTj1 ;Tj2 ;Tj3 bits: Alice then incrementally sends the remaining aligned coordinates of T as follows.
To transmit the current aligned coordinate Tjk+1 , Alice considers only the set of (previous plus current) aligned coordinates fTj1 ; Tj2 ;... ; Tjk ; Tjk+1 g. This set is orthogonally transformed to the set fTj1 ; Tj2 ;... ; Tjk ; Tjk+1 g, such that it minimizes the least-square error between fSi1 ;... ; Sik g and fTj1 ;... ; Tjk g. Using this setup, Alice can transmit Tjk+1 over a directional distribution on a sphere.
This is achieved by first transmitting the radius rk=jjTjk+1 Tjk jj over a normal distribution with the same procedure described for formulating a null model message.
This allows Alice to state Tjk+1 as a point on a sphere with radius rk centred at Tjk.
However, we do not state it over a uniform distribution (which would make it a null model description), as the knowledge of correspondence of Tjk+1 with Sik+1 gives clues about its position on the sphere (provided the assigned correspondence is a good one).
Because Bob already knows the corresponding point Sik+1 , after transmitting rk, Alice can use a directional probability distribution to state Tjk+1 more concisely.
In directional statistics, the von Mises Fisher distribution gives the probability density function (PDF) on the surface of any sphere in p-dimensions.
In three dimensions, the PDF on the surface of a unit sphere is (Fisher, 1953; Mardia and Jupp, 1999): Vx; ; = 2ee e x Using this distribution to transmit Tjk+1 , we compute xk+1 as the direction cosines of the vector Tjk+1 Tjk , and k+1 as the direction cosines of the vector Sik+1 Tjk.
The probability of stating Tjk+1 to the required precision (that is, =0:001 A precision on each component) using von MisesFisher distribution over the surface of a 3D sphere of unit radius is then given by: Px=02 2eek e x where 02= 2 r2 i , accounting for the scaling of the sphere of radius ri to a unit sphere.
Transmission of each Tjk+1 requires the concentration parameter.
We use the maximum-likelihood estimator based on the available superposition [see Mardia and Jupp (1999)].
Therefore, the code length to state x using von MisesFisher is: Ivmfx= log Px bits: Each Tjk+1 is transmitted iteratively over this procedure, which we term adaptive superposition.
Thus, the message length required to transmit the matched points in T with respect to their corresponding point in S is ImatchTjS&A=IstartupTjS&A+ Xn i=4 Ivmfxi bits.
Combining the message lengths of transmitting coordinates in the insertion and matched blocks gives ITjS&A=IinsTjS&A+ImatchTjS&A bits: An illustration of this procedure is shown in Figure 1.
2.3 Measure of alignment quality IA&S&T is used as the measure of alignment quality.
We call this measure I-value, indicating a value measuring the information content in the structural coordinates of S and T, given the structural alignment A as a model of compression.
The smaller the I-value, the better the alignment.
It follows that for competing alignments A1 and A2, if the I-value of A1 is smaller than that of A2 by, for example, 15 bits, then A1 is 215 times more likely than A2 (see property 1 of this measure shown in Equation 3).
Further, any alignment A for which IS&T&A4 InullS&T=InullS+InullT can be rejected (see property 2 of this measure under Structural alignment quality and lossless information compression).
Handling shifts and rotations.
So far we estimated the I-value under the rigid model of structural alignment.
This model can be generalised to handle plastic deformations commonly observed in protein evolution, such as hinge rotations and shifts.
Handling these deformations requires a modification in the way ITjS&A is estimated under a flexible model of transmission.
Without loss of generality, assume that T contains a certain number of shifts and rotations, with respect to S, associated with its residues.
In computing ITjS&A, alignment A is partitioned at the residues in T about which the shifts and rotations are defined.
For example, consider below an alignment containing a hinge rotation about residue 10 of T (marked by *).
Then, the alignment can be partitioned into two separate parts as follows: Let these partial alignments be denoted as AT1;... ;T10 and AT10;... ;T15, identifying the start and end residue indexes in T about which the partition is defined.
Then ITjS&A is computed as ITjS&AT1;... ;T10+ITjS&AT10;... ;T15 using the procedure described earlier.
More generally, if there are k residues in T about which shifts/rotations are defined, the full alignment A is partitioned into k+1 partial alignments: AT1;... ;Ti1 ; ATi1 ;... ;Ti2 ,... ; ATik ;... ;TjTj, where i15i25...5ik5jTj.
Given these partitions, ITjS&A can be computed as ITjS&AT1;... ;Ti1 +  +ITjS& Aik;... ; jTj: This immediately poses another inference question: Given an alignment A of S and T, how many shifted/rotated residues does it contain?
We note that adding a shift/hinge has an overhead which must pay for itself with a better fit if it is to be accepted.
Inference of shifted/rotated residues: A dynamic programming algorithm is used to optimally partition A minimizing ITjS&A.
The algorithm first constructs a matrix M of size jTj jTj such that each cell M(i, j) (1 i5j jTj) stores the value ITjS&Ai;... ; j.
The best partition of A is then computed using the following dynamic programming recurrence relationship: P1;... ; j=min j1 i=1 M1; j; P1;... ; i+Mi; j 81 j jTj ( 4 where any P1;... ; i gives the optimal partitioning up to the ith residue in T, 1 i jTj.
At the end of this procedure the value P1;... ; jTj gives the component message length ITjS&A of Equation 2, in a way that handles shift and hinge rotations.
2.4 The time complexity of computing I-value Using the rigid model of transmission (i.e.without handling the hingerotations and shift), the computation of IA&S&T is linear in the size of Fig.1.
An idealized example of the adaptive superpositionused to send the matched residues in T (in blue) incrementally given the knowledge of S (in black).
Both structures have 8 points and are assumed here to be in one-toone correspondence.
Assume that Bob already knows the first 3 points of T. Alice sends the fourth point in T by superposing all previously matched points between the two structures.
(Green crosshairs shows the rotational centre of superposition.)
This orients the fourth point (in red) in T [or, more generally, Tjk+1 , whose deviation from its corresponding Sik+1 can be encoded over a von MisesFisher spherical distribution (see main text)] i515 Structural alignment quality using data compression minimises since Since ( ).
on page 3 , the alignment, as the computation of I(S), IA and ITjS&A are all linear.
While the linearity of the first two is clear, that of ITjS&A is not, as it requires repeated adaptive superpositions.
However, we have recently proved sufficient statistics for the orthogonal superposition problem that allows each updated superposition to be computed as a constanttime update over the previous ones (Konagurthu et al., 2014), making the computation of ITjS&A, and I-value under rigid superposition, linear.
On the other hand, using the flexible model which allows for hinge rotations and shifts, the computation of IA&S&T is quadratic, as it is dictated by the complexity of the dynamic program given by Equation 4.
3 RESULTS AND DISCUSSION We have compared the quality of our I-value measure (using the flexible model described in sections 2.3) with popular scoring functions DALI, TM-Score, MI, SI, STRUCTAL, LGA_S3, GDT_TS, SAS and GSAS, using a large data set of alignments produced by the popular structural alignment methods DALI, TM-Align, LGA, CE and FATCAT.
[Refer to Hasegawa and Holm (2009) for
