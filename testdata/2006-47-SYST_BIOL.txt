Phylogenetic Diversity within Seconds Society of Systematic Biologists Phylogenetic Diversity within Seconds Author(s): Bui Quang Minh, Steffen Klaere, Arndt von Haeseler Reviewed work(s): Source: Systematic Biology, Vol.
55, No.
5 (Oct., 2006), pp.
769-773 Published by: Oxford University Press for the Society of Systematic Biologists Stable URL: http://www.jstor.org/stable/20142978.
Accessed: 17/03/2012 14:07 Your use of the JSTOR archive indicates your acceptance of the Terms & Conditions of Use, available at.JSTOR is a not-for-profit service that helps scholars, researchers, and students discover, use, and build upon a wide range of content in a trusted digital archive.
We use information technology and tools to increase productivity and facilitate new forms of scholarship.
For more information about JSTOR, please contact support@jstor.org.
Society of Systematic Biologists and Oxford University Press are collaborating with JSTOR to digitize, preserve and extend access to Systematic Biology.
Syst.
Biol.
55(5):769-773, 2006 Copyright (c) Society of Systematic Biologists ISSN: 1063-5157 print/ 1076-836X online DOI: 10.1080/10635150600981604 Phylogenetic Diversity within Seconds Bui Quang Minh, Steffen Klaere, and Arndt von Haeseler Center for Integrative Bioinformatics, Vienna, Max F. Perutz Laboratories, University of Vienna, Medical University of Vienna, Veterinary University of Vienna, Dr.-Bohr-Gasse 9/6, A-1030 Vienna, Austria; E-mail: arndt.von.haeseler@univie.ac.at (A.v.H.)
Abstract.
?We consider a (phylogenetic) tree with n labeled leaves, the taxa, and a length for each branch in the tree.
For any subset of k taxa, the phylogenetic diversity is defined as the sum of the branch-lengths of the minimal subtree connecting the taxa in the subset.
We introduce two time-efficient algorithms (greedy and pruning) to com pute a subset of size k with maximal phylogenetic diversity in O(nlogfc) and 0[n + (n ?
k) logO?-k)] time, respec tively.
The greedy algorithm is an efficient implementation of the so-called greedy strategy (Steel, 2005; Pardi and Goldman, 2005), whereas the pruning algorithm provides an alternative description of the same problem.
Both algo rithms compute within seconds a subtree with maximal phylogenetic diversity for trees with 100,000 taxa or more.
[Biodiversity conservation; Comparative genomics; Greedy algorithm; Phylogenetic diversity; Phylogenetic tree; Pruning algorithm.]
Recently, Steel (2005) and Pardi and Goldman (2005) have shown that being greedy works if one is interested in selecting k taxa from a phylogenetic tree that maximize the phylogenetic diversity.
The term phylogenetic diversity (PD) was coined by Faith (1992) to provide an effective measure of the diversity of a group of taxa.
The opti mal PD describes the amount of diversity embraced by a properly chosen subset of taxa.
Faith (1992) applied PD to place conservation priorities on different taxa, where the taxa to protect reflect a certain value of taxonomic di versity.
Thus, some measurable indicator of biodiversity defined on different scales (taxa, group of taxa, ecosys tems, etc.)
is assigned to the corresponding systematic categories.
With the advent of molecular genetics, evo lutionary divergence on the genomic level may also serve this purpose (Pardi and Goldman, 2005).
For the following, the precise nature of the measure of phylogenetic diversity is not relevant (cf.
Humphries et al., 1995; Williams and Araujo, 2002, for a discussion on diversity measures).
Phylogenetic diversity should simply describe the overall value of a group of taxa either in terms of genetic diversity, regional diversity, or social diversity.
Moreover, it is required that these measures can be mapped onto a phylogenetic tree in a way that the branches of the tree receive non-negative weights.
The problem is then as follows: From a tree with n taxa, one wants to identify k taxa that retain the maximal phy logenetic diversity, therefore taking into account the fact that due to restricted resources only a certain percent age of the taxa can be sustained.
Steel (2005) and Pardi and Goldman (2005) have proven that a greedy approach yields the optimal set with respect to PD.
The greedy strategy repeatedly selects the taxon that adds the most divergence to the already chosen set of taxa.
The pro cedure is repeated until k taxa are found.
Both proofs apply?directly or indirectly?the theory of weighted matroids and greedy algorithms (Korte et al., 1991).
From this theory it follows that an algorithm with time com plexity 0(n log n) is possible.
In the following, we will suggest a time-efficient greedy phylogenetic diversity algorithm (gPDA).
Moreover, a dif ferent but easier to implement algorithm, the pruning phy logenetic diversity algorithm (pPDA) will be introduced.
Both algorithms compute the optimal k set for large phy logenies within seconds.
Notation Following Steel (2005), we call T an unrooted phylo genetic X-tree; that is, a tree with leaf set X of taxa and whose remaining interior nodes are of degree at least three.
V denotes the set of all nodes of T and ?
the col lection of edges or branches.
?
denotes the edge-weight function that assigns to each edge e = (v, w), (v, w e V) of T a (non-negative) branch length X(v, w) > 0.
A path V(a,b) denotes the collection of distinct nodes a = vq,v\,..., vm+\ = b in a tree such that v?, u?+i are ad jacent; i.e., connected by an edge.
The sum of the edge weights of all edges along the path between two nodes a and b denotes their distance d(a, b) in the tree.
To describe the algorithms, it will be handy to root T at a node r. Then the remaining leaves are descen dents from r. Thus, for each node v eV the set Lmax(v) is well defined and denotes the descendant(s) farthest away from v. For the sake of clarity, we abbreviate the distance d[v, Lmax(v)] as dmax(v).
For a subset W of X we consider T\ W, the induced phylogenetic W-tree, that connects all taxa in W accord ing to T. Finally, ?w assigns to each edge e of T\ W the sum of the X(e) values over those edges in T along the path that corresponds to the new edge e. The phylogenetic diversity of W, denoted PD(W), is then PD(W) = Y,^w(e), e where the summation is over all edges e in the tree T\ W (see Steel, 2005).
The Time-Efficient Greedy Algorithm: gPDA We briefly describe the implementation of gPDA.
The phylogenetic tree T together with its weight-function and the size of k define the input of the algorithm.
We 769 770_SYSTEMATIC BIOLOGY_VOL.
55 want to determine the collection W of k taxa with maxi mal phylogenetic diversity.
In the following, we describe the algorithm for trees with interior nodes of degree three.
However, the implementation works for trees with finite interior node degree of at least three.
gPDA splits in two steps.
The initial step starts with the computation of the longest path in T. This can be achieved in 0(n) time by applying a depth-first search (DFS) (cf.
Cormen et al., 2001).
The algorithm starts at an arbitrary leaf c and de termines the leaf a furthest away from c in T. It is easy to show that a is one of the endpoints of the longest path in T. We root the tree at a and based on this root com pute for all interior nodes vi the distance dmax(vi) and the associated set Lmax(v?).
This is again a DFS procedure; i.e., has complexity 0(n).
Figure 1A displays the result of this procedure for a tree with five taxa.
The longest path in the tree has distance 20.
Thus, the set W is equal to To extend W, we note that for each leaf c in V ?
W, exactly one node v?
(i = 1,..., m) in V(a, b) acts as anees tor; i.e., Vi is the node where the paths V(a, c) and V(a, b) split.
Obviously, one selects the leaf that is farthest away from its ancestor in V(a, b).To this end, we generate an ordered list S with respect to dmax that contains at most k ?
2 nodes v\, vi,..., v^-i from the path set V(a, b).
In S the nodes are ordered in descending order according to ?max; i.e., the following holds: dmaxiViJ > dmax(v?2) > > dmax(vik_2).
Before generating S, we must update for each v?
on V(a, b) the set Lmax(i;?)
and dmax(v?)
by choosing a leaf c with maximal distance to v?
such that V(v\, c) does not have an edge in common with the path V(a, b).
For each node Vi this update can be done in constant time.
If V(a, b) contains more than k ?
2 nodes and S has already k ?
2 elements, then a new node v from V(a,b)is only added to S if dmax(v) > dmax(vik_2).
The node vik_2 is subsequently deleted from S and v is inserted at its appropriate po sition in S. This step takes O(nlogfc) time in the worst case.
Figure IB displays the result of this update for the five-taxon tree.
Here, we obtain S = (v\, v^), because dmax(vi) = 5 > 2 = dmax(v3).
This update procedure will be invoked repeatedly in the following step of gPDA.
Having defined W and a sorted list S we can enter the core of the algorithm, the greedy step.
We add a leaf c from Lmax?^) to Wand delete uZl from S. Then we update the maximal distances and leaves for all nodes on the path V(v{x, c) as described for the path V(a,b).
No updates are necessary for interior nodes already in S. Figure 1C illustrates this second update for the example tree with W = {a,b,c} and S = {v^}.
v\ and V2 are updated, whereas v$ remains unchanged.
Subsequently, the elements w of the path V(v{x, c) are inserted into the ordered list S according to their distance dmax(w) if dmax(w) > dmax(vik_2).
In the sample tree v2 is added and thus S = {v^, V2}.
This completes the greedy step.
The greedy step is repeated until W contains k taxa.
To determine the complexity of gPDA, recall that com puting the longest path and identifying taxa a and b in the initial step consumes 0(n) time.
The time requirement to generate and update S is more subtle to establish.
Be cause W will eventually contain k taxa, the cardinality of S is never larger than k ?
2.
At any time, the k ?
2 nodes in S are the most promising for T\ W. An insertion of an interior node into S requires 0(log k) time, because S is implemented as a red-black search tree data structure (e.g., Cormen et al., 2001, chap.
13).
Each interior node is inserted in S at most once during the k ?
2 greedy steps.
Because a bifurcating tree with n taxa has n ?
2 in terior nodes, generating and updating S takes 0(n log k) time.
Therefore, the overall worst-case time complexity of gPDA is 0(n log k).
An Efficient Pruning Algorithm: pPDA Easier to implement is the pruning phylogenetic di versity algorithm (pPDA), a special application of the ?max(V3)=W ?maX(v3)=max{8,: ^max(V1)={^} ^max(v1)=max{8+6,2+3} (V2)=?C} (v2)=max{l,2} ?max(V3)={rf} rfmax(V3)=2 Lmax(vt)={c} rfmax(v1)=3+rfmax(V2) 09=2 c ?max^W ?max(V3)=2 ?max(v1)=0 ?max(v1)= 0 (V2)=M rfmax(V2)=l Figure 1.
Example for the gPDA.
dmax(vi) denotes the longest dis tance between u,-and its descending taxa, and Lmax(vj) denotes the set of taxa with distance dmax(v{) to u,-.
(A) Result of the greedy strategy after selecting the longest path (bold lines).
(B) Updating nodes on the longest path in the initial step.
(C) Adding leaf c to W and updating the nodes on the partial tree.
2006_MINH ET AL.
?PHYLOGENETIC DIVERSITY_771 so-called worst-out greedy algorithm (Korte et al., 1991).
Here, we start with the full tree of n taxa.
Based on the length X(v, x) of an exterior edge leading to a leaf x e X, we compute a sorted list S of the taxa, arranged in ascending order.
This completes the initial step of the algorithm.
In the following n ?
k iterations (pruning steps), the first taxon S\ in the list is deleted from S. The degree of the node v that forms the branch (v, si) is decreased by one.
If the new degree of v equals two, then the incident edges of v are joined and the branch length of the new edge is the sum of the lengths of the joined edges.
Moreover, if the new edge is connected to a leaf, the branch length of the leaf is updated.
Subsequently, the leaf is put at its appropriate position in S. After n ?
k pruning steps, S contains k taxa that con stitute the set W with maximal phylogenetic diversity.
It is straightforward to prove that pPDA provides trees with maximal phylogenetic diversity.
Its optimality fol lows immediately from the "strong exchange" property of PD (Steel, 2005).
This algorithm is so simple that it can be carried out on a piece of paper.
We conclude the section with the discussion of its complexity.
At each pruning step at most one taxon must be repo sitioned in S. We also note that the new position of the taxon is always further down the sorted list, be cause the length of an incident branch always increases.
Thus to complete n ?
k pruning steps, S needs to store in the worst case 2(n ?
k) taxa.
Therefore, in the initial step, the selection of those taxa can be done in 0(n) time (e.g., Cormen et al., 2001).
Then we only have to sort the selected taxa in 0[(n ?
fc)log(n ?
k)] time, be cause S is implemented as a red-black search tree (e.g., Cormen et al., 2001).
Finally, repositioning a taxon in the pruning step needs at most ?
[log(n ?
k)] steps.
Thus, the complexity of the n ?
k pruning steps amounts to 0[(n ?
k) log(n ?
k)].
This results in an overall complex ity of pPDA o?O[n + (n-k) log(n-k)].
Run Time Analysis We conducted computer simulations to test the wall clock computing time of gPDA and pPDA.
Simulations were performed on a 2-GHz AMD Opteron 246 with 2 GByte RAM.
Both algorithms were so fast that only for huge trees with more than 100,000 taxa was a substan tial difference in the performance observed.
Therefore, we will only compare the results for n = 100,000 and 1,000,000 taxa, respectively.
The computing times (in sec onds) in Figure 2 are based on average times from 100 random trees generated under the Yule-Harding model (Harding, 1971) for each combination of the pair (n, k).
The branch lengths are randomly drawn from the inter val (0,1).
The size k of W was varied from 5% to 95% of the n taxa in the tree.
For the n = 105 taxa tree all runs of both algorithms needed less than one second to compute a subtree with maximal PD.
In our simulations, gPDA never consumed more than 8 s to achieve the subset of maximal phy logenetic diversity in the 1,000,000-taxa trees, whereas the longest run for the 1,000,000-taxa tree with pPDA amounts to 17 s. It should be noted that an implemen tation of the na?ve version of the greedy algorithm (as derived from Steel, 2005) needs more than 30 min for n = 105 taxa (data not shown).
In our simulations, gPDA is faster than pPDA if k < 70% of the taxa; otherwise, pPDA outperforms gPDA.
Typical applications do not deal with millions of taxa.
But recently, Lewis and Lewis (2006) calculated PD for thousands of small trees of 150 taxa.
We applied our al gorithms to 10,000 trees generated from their data using MrBayes (Ronquist and Huelsenbeck, 2003).
Both algo rithms took less than 1.5 s to extract optimal PD sub trees for all generated trees.
Hence gPDA and pPDA may serve as subroutines in such applications.
In addition, this example resulted in a different discriminative point oik = 40% at which pPDA starts outperforming gPDA.
Thus, the superiority of one algorithm over the other crucially depends on the tree shape.
A G O 20 40 60 80 100 Percentage of preserved taxa o 0> S ?
0 20 40 60 80 100 Percentage of preserved taxa FIGURE 2.
Comparison of computing times of gPDA and pPDA.
Each point represents the average run time from 100 runs for n =100,000 (A) and n = 1,000,000 taxa (B), respectively.
Subset sizes ranging from k = 5%-n,...,95%-n. 772_SYSTEMATIC BIOLOGY_VOL.
55 Discussion We have presented two versions of the greedy ap proach, gPDA and pPDA.
They provide an efficient im plementation to compute a subtree of given size k with maximal phylogenetic diversity.
Thus, gPDA and pPDA may serve as convenient tools to compute subtrees for different sizes of k. The gain in speed is due to the trick that S does not contain all the interior nodes or taxa.
Therefore both algorithms exhibit a worst-case perfor mance less than 0(nlogn).
Our simulations indicated that the tree shape influences the wall-clock computing time and the efficiency of the algorithms differently.
A comprehensive study of all factors affecting computing time is beyond the scope of this study.
Steel (2005) proposed an extension of the PD score to accommodate the need to incorporate different mea sures of diversity, in which each taxon receives a weight depicting its estimated importance.
This can be easily integrated into the algorithm by increasing the termi nal branches with the weight of the corresponding taxa (Pardi and Goldman, 2005).
Pardi and Goldman also suggested another approach, namely to start with a user-defined initial set W. This permits the extension of W to a maximally divergent set starting with a non-optimal seed W. This application may be handy in comparative genomics where one has already some species sequenced and must decide which species to be sequenced next.
We included this option in both algorithms.
Although the determination of one subset W of X with maximal PD is computationally efficient, it would be cer tainly worthwhile to explore the possibility of different sets W[, Wir.
with the same maximal PD.
The num ber of such sets can theoretically increase dramatically.
In view of this combinatorial explosion, the question of how to measure phylogenetic diversity becomes impor tant.
For the algorithms, the precise nature of this mea sure is irrelevant as long as it can be mapped on the tree relating the taxa under consideration.
Combining differ ent measures of diversity may lead to more discrimina tive branch lengths and therefore reduce the hazard of multiple optimal sets.
In this context, confining the measure to genetic dis tances between the taxa may be helpful (Pardi and Gold man, 2005).
However, different problems then arise.
Presently, it is not at all clear how to adjust the algo rithms for conflicting trees derived from the same set of taxa.
It is well known that different regions of the genome provide trees with drastically different phylogenetic di versities due to violations of the molecular clock or due to varying rates of molecular evolution (Graur and Li, 2000).
Sometimes trees derived from different regions may be different due to ancestral polymorphisms (Nei, 1987).
The artificial example in Figure 3 illustrates the problem.
For k = 2, we compute W[ = {I, 3}, 1A?
= {1,4} for trees 7?
and T2, respectively.
If we compute the pair wise distance between taxa as the sum of the pairwise distances in both trees, then the set W$.
= {3,4} displays the largest phylogenetic diversity.
We also obtain W3, if the tree is selected that provides the best least square fit to the distance sum (cf.
Felsenstein, 2004).
The crucial point is the fact that W$ is neither maximal in T\ nor in T2.
Thus, if we construct trees from different genomic regions and combine them naively, then the resulting tree and its derived optimal subtree with maximal di versity may not be the representative of the true under lying diversity.
One way to address this would be to assign different weights to the different trees and then maximize the weighted average of the PDs calculated for different trees.
However, more sophisticated algo rithms may be required to cope adequately with genetic PD.
A El T EL <r sr ^ in Figure 3.
For the taxa 1, 2, 3, and 4, two different gene trees are observed that lead to two different PD2 sets {1,3} and {1,4), respec tively (A).
In contrast, the resulting split graph generated by the sum of pairwise distances between taxa in % and T2 (B) and the least squares, fit tree of the two gene trees (C) have the PD2 set {3,4}.
Bold lines visualize the subgraphs formed by the respective PD2 sets.
2006_MINH ET AL.
?PHYLOGENETIC DIVERSITY_773 Acknowledgements The authors would like to thank Dan Faith for helpful suggestions on the subject and Heiko Schmidt and Tanja Gesell for fruitful discussions.
They also thank Mike Steel and anonymous referees for constructive comments.
A computer program written in C++ is freely available from http:// www.cibiv.at/software/pda/.
Financial support from the Wiener Wissenschafts-, Forschungs, and Technologiefonds (WWTF) is greatly appreciated.
REFERENCES Cormen, T. H., C. E. Leiserson, R. L. Rivest, and C. Stein.
2001.
In troduction to algorithms, 2 edition.
MIT Press and McGraw-Hill, Cambridge, Massachusetts.
Faith, D. P. 1992.
Conservation evaluation and phylogenetic diversity.
Biol.
Conserv.
61:1-10.
Felsenstein, J.
2004.
Inferring phylogenies.
Sinauer Associates, Sunderland, Massachusetts.
Graur, D., and W.-H. Li.
2000.
Fundamentals of molecular evolution.
2nd edition.
Sinauer Associates, Sunderland, Massachusetts.
Harding, E. F. 1971.
The probabilities of rooted tree shapes generated by random bifurcation.
Adv.
Appl.
Prob.
3:44-77.
Humphries, C. J., P. H. Williams, and R. I. Vane-Wright.
1995.
Measuring biodiversity value for conservation.
Annu.
Rev.
Ecol.
Syst.
26:93-111.
Korte, B., L. Lov?sz, and R. Schrader.
1991.
Greedoids.
Algorithms and combinatorics.
Springer Verlag, Berlin.
Lewis, L. A., and P. O. Lewis.
2006.
Unearthing the molecular diversity of desert soil green algae.
Syst.
Biol.
54:936-947.
Nei, M. 1987.
Molecular evolutionary genetics.
Columbia University Press, New York.
Pardi, E, and N. Goldman.
2005.
Species choice for comparative ge nomics: Being greedy works.
PLoS Genet.
I:e71.
Ronquist, F., and J. P. Huelsenbeck.
2003.
MrBayes 3: Bayesian phy logenetic inference under mixed models.
Bioinformatics 19:1572 1574.
Steel, M. 2005.
Phylogenetic diversity and the greedy algorithm.
Syst.
Biol.
54:527-529.
Williams, P. H., and M. B. Araujo.
2002.
Apples, oranges and probabili ties: Integrating multiple factors into biodiversity conservation with consistency.
Environ.
Model.
Assess.
7:139-151.
First submitted 7 March 2006; reviews returned 21 April 2006; final acceptance 15 June 2006 Associate Editor: Mike Steel Article Contents p. 769 p. 770 p. 771 p. 772 p. 773 Issue Table of Contents Systematic Biology, Vol.
55, No.
5 (Oct., 2006), pp.
703-870 Front Matter That Awkward Age for Butterflies: Insights from the Age of the Butterfly Subfamily Nymphalinae (Lepidoptera: Nymphalidae) [pp.
703-714] DNA Barcoding and Taxonomy in Diptera: A Tale of High Intraspecific Variability and Low Identification Success [pp.
715-728] DNA Barcoding Will Often Fail to Discover New Animal Species over Broad Parameter Space [pp.
729-739] SDM: A Fast Distance-Based Approach for (Super) Tree Building in Phylogenomics [pp.
740-755] Efficient Likelihood Computations with Nonreversible Models of Evolution [pp.
756-768] Phylogenetic Diversity within Seconds [pp.
769-773] Are the Linnean and Phylogenetic Nomenclatural Systems Combinable?
Recommendations for Biological Nomenclature [pp.
774-784] Phyloclimatic Modeling: Combining Phylogenetics and Bioclimatic Modeling [pp.
785-802] The Ancestral Distance Test: What Relatedness Can Reveal about Correlated Evolution in Large Lineages with Missing Character Data and Incomplete Phylogenies [pp.
803-817] Phylogenetic Supermatrix Analysis of Genbank Sequences from 2228 Papilionoid Legumes [pp.
818-836] Multipolar Consensus for Phylogenetic Trees [pp.
837-843] Points of View Who Will Actually Use DNA Barcoding and What Will It Cost?
[pp.
844-847] Stability and Universality in the Application of Taxon Names in Phylogenetic Nomenclature [pp.
848-858] Taxonomic Inflation and the Stability of Species Lists: The Perils of Ostrich's Behavior [pp.
859-867] Back Matter
